{"version":3,"sources":["webpack://Ae/webpack/universalModuleDefinition","webpack://Ae/webpack/bootstrap","webpack://Ae/./node_modules/@babel/runtime/regenerator/index.js","webpack://Ae/./node_modules/@babel/runtime/helpers/defineProperty.js","webpack://Ae/./node_modules/@babel/runtime/helpers/asyncToGenerator.js","webpack://Ae/external {\"commonjs\":\"bignumber.js\",\"commonjs2\":\"bignumber.js\"}","webpack://Ae/./node_modules/ramda/src/merge.js","webpack://Ae/./node_modules/@babel/runtime/helpers/slicedToArray.js","webpack://Ae/external {\"commonjs\":\"@stamp/required\",\"commonjs2\":\"@stamp/required\"}","webpack://Ae/./node_modules/ramda/src/head.js","webpack://Ae/./node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack://Ae/./node_modules/ramda/src/internal/_curry2.js","webpack://Ae/./node_modules/@babel/runtime/helpers/typeof.js","webpack://Ae/external {\"commonjs\":\"@stamp/it\",\"commonjs2\":\"@stamp/it\"}","webpack://Ae/./node_modules/ramda/src/internal/_curry1.js","webpack://Ae/external {\"commonjs\":\"tweetnacl\",\"commonjs2\":\"tweetnacl\"}","webpack://Ae/external {\"commonjs\":\"joi-browser\",\"commonjs2\":\"joi-browser\"}","webpack://Ae/./node_modules/ramda/src/keys.js","webpack://Ae/./node_modules/ramda/src/path.js","webpack://Ae/./node_modules/ramda/src/fromPairs.js","webpack://Ae/./node_modules/ramda/src/last.js","webpack://Ae/./node_modules/ramda/src/contains.js","webpack://Ae/external {\"commonjs\":\"axios\",\"commonjs2\":\"axios\"}","webpack://Ae/./node_modules/ramda/src/internal/_has.js","webpack://Ae/external {\"commonjs\":\"uuid\",\"commonjs2\":\"uuid\"}","webpack://Ae/./node_modules/ramda/src/type.js","webpack://Ae/./node_modules/ramda/src/join.js","webpack://Ae/./node_modules/ramda/src/toString.js","webpack://Ae/./node_modules/ramda/src/pluck.js","webpack://Ae/./node_modules/ramda/src/internal/_dispatchable.js","webpack://Ae/./node_modules/ramda/src/internal/_xfBase.js","webpack://Ae/./node_modules/ramda/src/mapObjIndexed.js","webpack://Ae/./node_modules/ramda/src/isNil.js","webpack://Ae/./node_modules/ramda/src/prop.js","webpack://Ae/external {\"commonjs\":\"rlp\",\"commonjs2\":\"rlp\"}","webpack://Ae/./node_modules/ramda/src/internal/_arity.js","webpack://Ae/./node_modules/ramda/src/internal/_reduce.js","webpack://Ae/./node_modules/ramda/src/internal/_curry3.js","webpack://Ae/./node_modules/ramda/src/reject.js","webpack://Ae/./node_modules/ramda/src/values.js","webpack://Ae/./node_modules/ramda/src/always.js","webpack://Ae/./node_modules/ramda/src/pick.js","webpack://Ae/external {\"commonjs\":\"@aeternity/bip39\",\"commonjs2\":\"@aeternity/bip39\"}","webpack://Ae/./node_modules/ramda/src/internal/_isPlaceholder.js","webpack://Ae/./node_modules/ramda/src/curryN.js","webpack://Ae/./node_modules/ramda/src/internal/_includes.js","webpack://Ae/./node_modules/ramda/src/flatten.js","webpack://Ae/./node_modules/ramda/src/zipObj.js","webpack://Ae/./node_modules/@babel/runtime/helpers/toArray.js","webpack://Ae/./node_modules/ramda/src/nth.js","webpack://Ae/./node_modules/ramda/src/internal/_isArray.js","webpack://Ae/./node_modules/ramda/src/internal/_curryN.js","webpack://Ae/./node_modules/ramda/src/invoker.js","webpack://Ae/./node_modules/ramda/src/reduce.js","webpack://Ae/./node_modules/ramda/src/flip.js","webpack://Ae/./node_modules/ramda/src/curry.js","webpack://Ae/external {\"commonjs\":\"bs58check\",\"commonjs2\":\"bs58check\"}","webpack://Ae/external {\"commonjs\":\"ed2curve\",\"commonjs2\":\"ed2curve\"}","webpack://Ae/./node_modules/ramda/src/lt.js","webpack://Ae/./node_modules/ramda/src/toPairs.js","webpack://Ae/./node_modules/ramda/src/toUpper.js","webpack://Ae/./node_modules/ramda/src/mergeDeepRight.js","webpack://Ae/./node_modules/ramda/src/groupBy.js","webpack://Ae/./node_modules/ramda/src/identity.js","webpack://Ae/./node_modules/ramda/src/indexBy.js","webpack://Ae/./node_modules/ramda/src/defaultTo.js","webpack://Ae/external {\"commonjs\":\"tweetnacl-auth\",\"commonjs2\":\"tweetnacl-auth\"}","webpack://Ae/./node_modules/@babel/runtime/helpers/arrayWithHoles.js","webpack://Ae/./node_modules/@babel/runtime/helpers/nonIterableRest.js","webpack://Ae/./node_modules/@babel/runtime/helpers/iterableToArray.js","webpack://Ae/./node_modules/ramda/src/internal/_isString.js","webpack://Ae/./node_modules/ramda/src/map.js","webpack://Ae/./node_modules/ramda/src/internal/_map.js","webpack://Ae/./node_modules/ramda/src/internal/_isArrayLike.js","webpack://Ae/./node_modules/ramda/src/internal/_includesWith.js","webpack://Ae/./node_modules/ramda/src/internal/_objectIs.js","webpack://Ae/./node_modules/ramda/src/internal/_isObject.js","webpack://Ae/./node_modules/ramda/src/internal/_objectAssign.js","webpack://Ae/./node_modules/ramda/src/internal/_checkForMethod.js","webpack://Ae/./node_modules/ramda/src/reduceBy.js","webpack://Ae/./node_modules/ramda/src/slice.js","webpack://Ae/./node_modules/ramda/src/internal/_reduced.js","webpack://Ae/external {\"commonjs\":\"blakejs\",\"commonjs2\":\"blakejs\"}","webpack://Ae/external {\"commonjs\":\"aes-js\",\"commonjs2\":\"aes-js\"}","webpack://Ae/external {\"commonjs\":\"sha.js\",\"commonjs2\":\"sha.js\"}","webpack://Ae/./node_modules/ramda/src/cond.js","webpack://Ae/./node_modules/ramda/src/lte.js","webpack://Ae/./node_modules/ramda/src/T.js","webpack://Ae/./node_modules/ramda/src/without.js","webpack://Ae/./node_modules/ramda/src/uniqWith.js","webpack://Ae/./node_modules/ramda/src/identical.js","webpack://Ae/./node_modules/ramda/src/toLower.js","webpack://Ae/./node_modules/ramda/src/difference.js","webpack://Ae/./node_modules/ramda/src/mergeAll.js","webpack://Ae/./node_modules/ramda/src/assoc.js","webpack://Ae/./node_modules/ramda/src/has.js","webpack://Ae/./node_modules/ramda/src/drop.js","webpack://Ae/./node_modules/ramda/src/dropLast.js","webpack://Ae/./node_modules/ramda/src/call.js","webpack://Ae/./node_modules/ramda/src/find.js","webpack://Ae/external {\"commonjs\":\"websocket\",\"commonjs2\":\"websocket\"}","webpack://Ae/external \"events\"","webpack://Ae/./node_modules/ramda/src/once.js","webpack://Ae/./node_modules/ramda/src/pickBy.js","webpack://Ae/external {\"commonjs\":\"bip32-path\",\"commonjs2\":\"bip32-path\"}","webpack://Ae/./node_modules/regenerator-runtime/runtime.js","webpack://Ae/./node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","webpack://Ae/./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack://Ae/./node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack://Ae/./node_modules/ramda/src/internal/_isTransformer.js","webpack://Ae/./node_modules/ramda/src/internal/_xwrap.js","webpack://Ae/./node_modules/ramda/src/bind.js","webpack://Ae/./node_modules/ramda/src/internal/_xmap.js","webpack://Ae/./node_modules/ramda/src/internal/_isArguments.js","webpack://Ae/./node_modules/ramda/src/max.js","webpack://Ae/./node_modules/ramda/src/internal/_indexOf.js","webpack://Ae/./node_modules/ramda/src/equals.js","webpack://Ae/./node_modules/ramda/src/internal/_equals.js","webpack://Ae/./node_modules/ramda/src/internal/_arrayFromIterator.js","webpack://Ae/./node_modules/ramda/src/internal/_functionName.js","webpack://Ae/./node_modules/ramda/src/internal/_toString.js","webpack://Ae/./node_modules/ramda/src/internal/_quote.js","webpack://Ae/./node_modules/ramda/src/internal/_toISOString.js","webpack://Ae/./node_modules/ramda/src/internal/_complement.js","webpack://Ae/./node_modules/ramda/src/filter.js","webpack://Ae/./node_modules/ramda/src/internal/_filter.js","webpack://Ae/./node_modules/ramda/src/internal/_xfilter.js","webpack://Ae/./node_modules/ramda/src/internal/_makeFlat.js","webpack://Ae/./node_modules/ramda/src/paths.js","webpack://Ae/./node_modules/ramda/src/internal/_isInteger.js","webpack://Ae/./node_modules/ramda/src/internal/_isFunction.js","webpack://Ae/./node_modules/ramda/src/internal/_Set.js","webpack://Ae/./node_modules/ramda/src/mergeDeepWithKey.js","webpack://Ae/./node_modules/ramda/src/mergeWithKey.js","webpack://Ae/./node_modules/ramda/src/internal/_clone.js","webpack://Ae/./node_modules/ramda/src/internal/_cloneRegExp.js","webpack://Ae/./node_modules/ramda/src/internal/_xreduceBy.js","webpack://Ae/./node_modules/ramda/src/internal/_identity.js","webpack://Ae/./node_modules/ramda/src/hasPath.js","webpack://Ae/./node_modules/ramda/src/internal/_xdrop.js","webpack://Ae/./node_modules/ramda/src/internal/_dropLast.js","webpack://Ae/./node_modules/ramda/src/take.js","webpack://Ae/./node_modules/ramda/src/internal/_xtake.js","webpack://Ae/./node_modules/ramda/src/internal/_xdropLast.js","webpack://Ae/./node_modules/ramda/src/internal/_xfind.js","webpack://Ae/external {\"commonjs\":\"libsodium-wrappers-sumo\",\"commonjs2\":\"libsodium-wrappers-sumo\"}","webpack://Ae/./es/utils/bytes.js","webpack://Ae/./es/tx/builder/schema.js","webpack://Ae/./es/utils/bignumber.js","webpack://Ae/./es/tx/builder/helpers.js","webpack://Ae/./es/utils/crypto.js","webpack://Ae/./es/utils/string.js","webpack://Ae/./es/utils/keystore.js","webpack://Ae/./es/utils/amount-formatter.js","webpack://Ae/./es/utils/mptree.js","webpack://Ae/./es/tx/builder/index.js","webpack://Ae/./es/utils/hd-wallet.js","webpack://Ae/./es/tx/index.js","webpack://Ae/./es/oracle/index.js","webpack://Ae/./es/chain/index.js","webpack://Ae/./es/utils/async-init.js","webpack://Ae/./es/utils/json-big.js","webpack://Ae/./es/utils/swagger.js","webpack://Ae/./es/utils/semver-satisfies.js","webpack://Ae/./es/node.js","webpack://Ae/./es/account/index.js","webpack://Ae/./es/ae/index.js","webpack://Ae/./es/oracle/node.js","webpack://Ae/./es/node-pool/helpers.js","webpack://Ae/./es/node-pool/index.js","webpack://Ae/./es/tx/validator.js","webpack://Ae/./es/chain/node.js","webpack://Ae/./es/tx/tx.js","webpack://Ae/./es/account/memory.js","webpack://Ae/./es/account/selector.js","webpack://Ae/./es/accounts.js","webpack://Ae/./es/ae/aens.js","webpack://Ae/./es/utils/http.js","webpack://Ae/./es/contract/index.js","webpack://Ae/./es/contract/compiler.js","webpack://Ae/./es/contract/aci/transformation.js","webpack://Ae/./es/contract/aci/helpers.js","webpack://Ae/./es/contract/aci/index.js","webpack://Ae/./es/ae/contract.js","webpack://Ae/./es/contract/ga/helpers.js","webpack://Ae/./es/contract/ga/index.js","webpack://Ae/./es/rpc/client.js","webpack://Ae/./es/utils/aepp-wallet-communication/schema.js","webpack://Ae/./es/utils/aepp-wallet-communication/helpers.js","webpack://Ae/./es/utils/aepp-wallet-communication/rpc/rpc-clients.js","webpack://Ae/./es/utils/aepp-wallet-communication/rpc/aepp-rpc.js","webpack://Ae/./es/ae/oracle.js","webpack://Ae/./es/ae/aepp.js","webpack://Ae/./es/rpc/server.js","webpack://Ae/./es/utils/aepp-wallet-communication/rpc/wallet-rpc.js","webpack://Ae/./es/ae/wallet.js","webpack://Ae/./es/channel/internal.js","webpack://Ae/./es/channel/handlers.js","webpack://Ae/./es/channel/index.js","webpack://Ae/./es/ae/universal.js","webpack://Ae/./es/index.js"],"names":["root","factory","exports","module","require","define","amd","undefined","global","__WEBPACK_EXTERNAL_MODULE__3__","__WEBPACK_EXTERNAL_MODULE__6__","__WEBPACK_EXTERNAL_MODULE__11__","__WEBPACK_EXTERNAL_MODULE__13__","__WEBPACK_EXTERNAL_MODULE__14__","__WEBPACK_EXTERNAL_MODULE__20__","__WEBPACK_EXTERNAL_MODULE__22__","__WEBPACK_EXTERNAL_MODULE__32__","__WEBPACK_EXTERNAL_MODULE__40__","__WEBPACK_EXTERNAL_MODULE__54__","__WEBPACK_EXTERNAL_MODULE__55__","__WEBPACK_EXTERNAL_MODULE__64__","__WEBPACK_EXTERNAL_MODULE__80__","__WEBPACK_EXTERNAL_MODULE__81__","__WEBPACK_EXTERNAL_MODULE__82__","__WEBPACK_EXTERNAL_MODULE__98__","__WEBPACK_EXTERNAL_MODULE__102__","__WEBPACK_EXTERNAL_MODULE__143__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","obj","configurable","writable","asyncGeneratorStep","gen","resolve","reject","_next","_throw","arg","info","error","done","Promise","then","fn","self","this","args","arguments","apply","err","_objectAssign","merge","_curry2","arrayWithHoles","iterableToArrayLimit","nonIterableRest","arr","head","nth","arrayWithoutHoles","iterableToArray","nonIterableSpread","_curry1","_isPlaceholder","f2","a","b","length","_b","_a","_typeof","iterator","constructor","f1","_has","_isArguments","hasEnumBug","toString","propertyIsEnumerable","nonEnumerableProps","hasArgsEnumBug","contains","list","item","idx","keys","prop","nIdx","ks","checkArgsLength","paths","path","pathAr","fromPairs","pairs","result","last","_includes","type","val","slice","join","invoker","_toString","map","pluck","_isArray","_isTransformer","methodNames","xf","Array","pop","transducer","init","_reduce","mapObjIndexed","acc","isNil","x","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","Error","_isArrayLike","_xwrap","_iterableReduce","iter","step","next","_methodReduce","methodName","symIterator","len","_arrayReduce","reduce","TypeError","f3","_c","_complement","filter","pred","filterable","values","props","vals","always","pick","names","_arity","_curryN","curryN","_indexOf","flatten","_makeFlat","zipObj","Math","min","out","_isString","offset","charAt","isArray","received","combined","argsIdx","left","combinedIdx","_isFunction","arity","method","target","_curry3","flip","curry","lt","toPairs","toUpper","mergeDeepWithKey","mergeDeepRight","lObj","rObj","k","lVal","rVal","_checkForMethod","groupBy","reduceBy","push","identity","indexBy","elem","defaultTo","v","from","_dispatchable","_map","_xmap","functor","nodeType","is","assign","output","source","nextKey","methodname","_clone","valueFn","valueAcc","keyFn","elt","fromIndex","toIndex","max","cond","pair","lte","without","xs","_includesWith","uniqWith","_objectIs","identical","toLower","_Set","difference","first","second","firstLen","secondLen","toFilterOut","add","mergeAll","concat","assoc","hasPath","has","_xdrop","drop","Infinity","_dropLast","dropLast","find","once","called","pickBy","test","runtime","Op","hasOwn","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","context","Context","_invoke","state","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","makeInvokeMethod","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","Gp","defineIteratorMethods","forEach","AsyncIterator","previousPromise","callInvokeWithMethodAndArg","invoke","__await","unwrapped","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","async","reverse","skipTempReset","prev","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","Function","_arr","_n","_d","_e","_s","_i","arr2","XWrap","f","thisObj","_xfBase","XMap","input","equals","inf","indexOf","_equals","_arrayFromIterator","_functionName","_uniqContentEquals","aIterator","bIterator","stackA","stackB","eq","aItem","typeA","valueOf","message","ignoreCase","multiline","sticky","unicode","size","entries","keysA","extendedStackA","extendedStackB","match","String","_quote","_toISOString","seen","recur","y","mapPairs","sort","NaN","repr","replace","pad","Date","toISOString","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","toFixed","_filter","_isObject","_xfilter","XFilter","recursive","flatt","jlen","j","ilen","_isInteger","pathsArray","Number","isInteger","_nativeSet","Set","_items","hasOrAdd","shouldAdd","set","prevSize","bIdx","mergeWithKey","_cloneRegExp","refFrom","refTo","deep","copy","copiedValue","pattern","RegExp","XReduceBy","inputs","_xreduceBy","_path","XDrop","take","_xtake","_reduced","XTake","ret","XDropLast","pos","full","store","_xdropLast","XFind","found","_xfind","leftPad","inputBuffer","fill","fillArray","Uint8Array","Buffer","rightPad","bigNumberToByteArray","hexString","toBytes","big","BigNumber","isBigNumber","GAS","AENS_NAME_DOMAINS","NAME_BID_RANGES","31","times","30","29","28","27","26","25","24","23","22","21","20","19","18","17","16","15","14","13","12","11","10","9","8","7","6","5","4","3","2","1","NAME_BID_TIMEOUTS","TX_FIELD","prefix","TX_SCHEMA_FIELD","schema","objectId","TX_TYPE","VM_VERSIONS","ABI_VERSIONS","VM_TYPE","FATE_ABI","PROTOCOL_VM_ABI","vmVersion","abiVersion","OBJECT_ID_TX_TYPE","FIELD_TYPES","int","amount","id","ids","string","binary","rlpBinary","rlpBinaries","rawBinary","bool","hex","signatures","pointers","offChainUpdates","callStack","proofOfInclusion","mptree","callReturnType","ctVersion","sophiaCodeTypeInfo","payload","PREFIX_ID_TAG","ak","nm","cm","ok","ct","ch","ID_TAG_PREFIX","VALIDATION_MESSAGE","isMinusValue","BASE_TX","ACCOUNT_TX","CONTRACT_BYTE_CODE_LIMA","CONTRACT_BYTE_CODE_MINERVA","CONTRACT_BYTE_CODE_ROMA","ACCOUNT_TX_2","SPEND_TX","SIGNED_TX","NAME_PRE_CLAIM_TX","NAME_CLAIM_TX","NAME_CLAIM_TX_2","NAME_UPDATE_TX","NAME_TRANSFER_TX","NAME_REVOKE_TX","CONTRACT_TX","GA_ATTACH_TX","GA_META_TX","CONTRACT_CREATE_TX","CONTRACT_CALL_TX","CONTRACT_CALL_RESULT_TX","ORACLE_REGISTER_TX","ORACLE_EXTEND_TX","ORACLE_QUERY_TX","ORACLE_RESPOND_TX","CHANNEL_CREATE_TX","CHANNEL_DEPOSIT_TX","CHANNEL_WITHDRAW_TX","CHANNEL_CLOSE_MUTUAL_TX","CHANNEL_CLOSE_SOLO_TX","CHANNEL_SLASH_TX","CHANNEL_SETTLE_TX","CHANNEL_OFFCHAIN_TX","CHANNEL_OFFCHAIN_TX_2","CHANNEL_TX","CHANNEL_TX_2","CHANNEL_SNAPSHOT_SOLO_TX","CHANNEL_OFFCHAIN_CREATE_CONTRACT_TX","CHANNEL_OFFCHAIN_CALL_CONTRACT_TX","CHANNEL_RECONNECT_TX","CHANNEL_OFFCHAIN_UPDATE_TRANSFER_TX","CHANNEL_OFFCHAIN_UPDATE_DEPOSIT_TX","CHANNEL_OFFCHAIN_UPDATE_WITHDRAWAL_TX","PROOF_OF_INCLUSION_TX","mptrees","STATE_TREES_TX","MERKLE_PATRICIA_TREE_TX","MERKLE_PATRICIA_TREE_VALUE_TX","CONTRACTS_TREE_TX","CONTRACT_CALLS_TREE_TX","CHANNELS_TREE_TX","NAMESERVICE_TREE_TX","ORACLES_TREE_TX","ACCOUNTS_TREE_TX","TX_SERIALIZATION_SCHEMA","TX_DESERIALIZATION_SCHEMA","ERROR_TYPE","VERIFICATION_FIELD","msg","verificationFn","VALIDATORS","ERRORS","invalidSignature","txKey","insufficientFee","expiredTTL","insufficientBalanceForAmountFee","insufficientBalanceForAmount","nonceUsed","nonceHigh","minGasPrice","vmAndAbiVersion","insufficientBalanceForFeeNameFee","SIGNATURE_VERIFICATION_SCHEMA","CONTRACT_VERIFICATION_SCHEMA","consensusProtocolVersion","txType","JSON","stringify","NAME_CLAIM_VERIFICATION_SCHEMA","balance","BASE_VERIFICATION_SCHEMA","minFee","height","accountNonce","parseBigNumber","number","asBigNumber","ceil","bigNumber","integerValue","ROUND_CEIL","createSalt","salt","base64Types","buildContractId","ownerId","nonce","encode","hash","decode","buildHash","data","oracleQueryId","senderId","oracleId","nonceBE","alloc","formatSalt","padStart","nameHash","buf","allocUnsafe","labels","split","produceNameId","toLowerCase","commitmentHash","namespace","encodeBase58Check","includes","decodeBase64Check","assertedType","decodeBase58Check","encodeBase64Check","writeId","hashId","idTag","readId","tag","readUIntBE","writeInt","readInt","buildPointers","readPointers","isNameValid","throwError","classify","klass","substr","validatePointers","getMinimumNameFee","domain","nameLength","computeBidFee","startFee","increment","plus","computeAuctionEndBlock","claimHeight","getContractBackendFromTx","parseInt","isAuctionName","Ecb","aesjs","ModeOfOperation","ecb","ADDRESS_FORMAT","sophia","api","raw","formatAddress","format","address","decodeNode","isAddressValid","isValid","e","addressToHex","base58CheckAddress","addressFromDecimal","decimalAddress","aeEncodeKey","blake2b","sha256hash","shajs","update","digest","floor","random","MAX_SAFE_INTEGER","buffer","checksum","checkSumFn","str","newChecksum","decodeRaw","bs58check","hexStringToByte","encodeUnsigned","writeUInt32BE","findIndex","encodeContractAddress","owner","publicKey","generateKeyPairFromSecret","secret","nacl","sign","keyPair","fromSecretKey","generateKeyPair","publicBuffer","secretBuffer","secretKey","encryptPublicKey","password","binaryKey","encryptKey","encryptPrivateKey","binaryData","hashedPasswordBytes","encrypt","decryptKey","encrypted","encryptedBytes","aesEcb","decrypt","privateKey","detached","verify","signature","prepareTx","personalMessageToBinary","signPersonalMessage","verifyPersonalMessage","pubKeyAddress","generateSaveWallet","decryptPrivateKey","decryptPubKey","forceError","decodeTx","txHash","RLP","encodeTx","txData","encodedTx","isValidKeypair","envKeypair","env","force","keypair","WALLET_PRIV","WALLET_PUB","encryptData","ephemeralKeyPair","box","pubKeyUInt8Array","randomBytes","nonceLength","encryptedMessage","ed2curve","convertPublicKey","ciphertext","ephemPubKey","version","decryptData","encryptedData","receiverSecretKeyUint8Array","convertSecretKey","decrypted","open","rlp","snakeToPascal","pascalToSnake","isHex","isAeAddress","isBase64","index","_sodium","DEFAULTS","crypto","secret_type","symmetric_alg","kdf","kdf_params","memlimit_kib","opslimit","parallelism","DERIVED_KEY_FUNCTIONS","argon2id","deriveKeyUsingArgon2id","options","memoryCost","timeCost","ready","sodium","crypto_pwhash","crypto_pwhash_ALG_ARGON2ID13","CRYPTO_FUNCTIONS","plaintext","secretbox","res","str2buf","enc","algo","deriveKey","marshal","derivedKey","opt","public_key","getAddressFromPriv","uuid","cipher_params","recover","keyObject","validateKeyObj","kdfParams","dump","missingRootKeys","missingCryptoKeys","AE_AMOUNT_FORMATS","AE","MILI_AE","MICRO_AE","NANO_AE","PICO_AE","FEMTO_AE","AETTOS","DENOMINATION_MAGNITUDE","formatAmount","denomination","targetDenomination","shiftedBy","deserialize","rootHash","nodes","node","serialize","tree","mptHash","ORACLE_TTL_TYPES","serializeField","mpt","transformParams","params","schemaKeys","getOracleRelativeTtl","ttlKey","calculateMinFee","gas","vsn","multiplier","actualFee","buildFee","fee","expected","txSize","buildTx","rlpEncoded","backend","TX_FEE_BASE_GAS","relativeTtl","TX_FEE_OTHER_GAS","calculateFee","showWarning","console","warn","gt","validateParams","excludeKeys","assert","valid","gte","validateField","buildRawTx","filteredSchema","fieldType","unpackRawTx","vm","abi","unpackTx","funHash","fnName","argType","outType","deserializeField","VSN","tx","txObject","fromRlpBinary","objId","buildTxHash","rawTx","ED25519_CURVE","toHex","derivePathFromKey","segments","fromString","toPathArray","segment","parentKey","deriveChild","derivePathFromSeed","seed","masterKey","getMasterKeyFromSeed","formatAccount","getKeyPair","fromSeed","I","hmac","chainCode","indexBuffer","getHdWalletAccountFromMnemonic","mnemonic","accountIdx","walletKey","mnemonicToSeed","getSaveHDWalletAccounts","saveHDWallet","accountCount","_","generateSaveHDWallet","validateMnemonic","generateMnemonic","genMnemonic","Tx","stampit","deepConf","Ae","methods","required","spendTx","namePreclaimTx","nameClaimTx","nameTransferTx","nameUpdateTx","nameRevokeTx","contractCreateTx","contractCallTx","oracleRegisterTx","oracleExtendTx","oraclePostQueryTx","oracleRespondTx","getAccountNonce","channelCloseSoloTx","channelSlashTx","channelSettleTx","channelSnapshotSoloTx","gaAttachTx","getVmVersion","prepareTxParams","OracleBase","Contract","getOracle","getOracleQueries","getOracleQuery","Chain","Oracle","compose","deepProps","defaults","waitMined","statics","sendTransaction","awaitHeight","topBlock","poll","getBalance","getTxInfo","mempool","txDryRun","getAccount","asyncInit","stamp","instance","deepConfiguration","AsyncInit","initializers","composers","composables","gap","indent","rep","escapable","meta","quote","lastIndex","charCodeAt","replacer","space","holder","partial","mind","toJSON","isFinite","parse","at","text","_options","escapee","strict","storeAsString","uffff","fromCharCode","white","word","array","reviver","walk","expandPath","replacements","lookupType","spec","types","conformTypes","integer","properties","pascalizeKeys","missing","extendingErrorPath","conform","items","$ref","allOf","conformDispatch","httpConfig","headers","transformResponse","JsonBig","transformRequest","httpClients","config","url","axios","post","classifyParameters","parameters","req","opts","query","body","pathArgs","queryArgs","bodyArgs","pascalizeParameters","traverseKeys","snakizeKeys","operationSignature","assertOne","coll","destructureClientError","response","status","statusText","reason","toUpperCase","resolveRef","ref","swag","Swagger","axiosConfig","definition","errorHandler","operationId","description","param","pascalized","optNames","indexedParameters","client","debug","log","conformed","definitions","expandedPath","axiosError","fullResponse","defineProperties","operation","op","urlFor","basePath","txEncoding","debugSwagger","geVersion","ltVersion","versionComponents","geComponents","ltComponents","base","toNumber","components","pow","vNumber","geNumber","ltNumber","remoteSwag","getNetworkId","networkId","selectedNode","loader","internalUrl","tags","protocols","getCurrentKeyBlock","effectiveAtHeight","Node","handler","getNodeInfo","nodeNetworkId","getConsensusProtocolVersion","forceCompatibility","getStatus","revision","nodeRevision","genesisHash","genesisKeyBlockHash","semverSatisfies","NODE_GE_VERSION","NODE_LT_VERSION","rlpBinaryTx","txWithNetworkId","returnHex","sig","Account","signTransaction","signMessage","verifyMessage","gaId","contractId","authFun","signUsingGA","signed","authData","createMetaTx","recipientId","resolveRecipientName","send","nameOrAddress","getName","percentage","excludeFee","requestTransferAmount","TxBuilder","minus","spend","transferFunds","destroyInstance","getOracleByPubkey","getOracleQueriesByPubkey","queryId","getOracleQueryByPubkeyAndQueryId","OracleNodeAPI","prepareNodeObject","NodePool","pool","Map","validateNodes","addNode","selectNode","propertyDescriptors","currentNode","getterForCurrentNode","nodeInstance","select","isNodeConnected","getNodesInPool","nodeProps","ownerPublicKey","ttl","gasPrice","supportedProtocol","txProtocol","nameFee","resolveDataForBase","chain","accountBalance","getAccountByPubkey","getCurrentKeyBlockHeight","verifySchema","validatorKey","unpackedTx","rlpEncodedTx","verifyTx","validation","getOwnerPublicKey","resolvedData","signatureVerification","baseVerification","customVerification","TransactionValidator","unpackAndVerify","verifyTxBeforeSend","code","errorData","postTransaction","confirm","waitForTxConfirm","confirmationHeight","blockHeight","getAccountByPubkeyAndHeight","getAccountByPubkeyAndHash","getTransactionByHash","pause","duration","setTimeout","h","probe","current","interval","attempts","getTopBlock","top","th","blocks","getTransactionInfoByHash","callInfo","getPendingTransactions","getCurrentGeneration","hashOrHeight","getGenerationByHash","getGenerationByHeight","getMicroBlockTransactionsByHash","transactions","getKeyBlockByHash","getKeyBlockByHeight","getMicroBlockHeaderByHash","txs","accounts","dryRunTxs","getContractCode","getContract","getNameEntryByName","ChainNode","getGeneration","getMicroBlockHeader","getMicroBlockTransactions","getKeyBlock","getContractByteCode","nativeMode","postSpend","accountId","commitmentId","postNamePreclaim","nameSalt","postNameClaim","nameId","postNameTransfer","nameTtl","clientTtl","postNameUpdate","postNameRevoke","deposit","callData","postContractCreate","callerId","postContractCall","queryFormat","responseFormat","queryFee","oracleTtl","postOracleRegister","postOracleExtend","responseTtl","queryTtl","postOracleQuery","postOracleRespond","channelId","fromId","poi","postChannelCloseSolo","postChannelSlash","initiatorAmountFinal","responderAmountFinal","postChannelSettle","postChannelSnapshotSolo","calculateTtl","relative","absoluteTtl","account","Transaction","protocolForTX","secrets","WeakMap","isGa","Crypto","MemoryAccount","isBuffer","pubBuffer","validateKeyPair","setSecret","isMemoryAccount","onAccount","signWith","Selector","resolveOnAccount","memoryAccount","selectAccount","Accounts","all","process","addAccount","removeAccount","addresses","extendPointers","el","freeze","aensUpdate","aensQuery","transfer","aensTransfer","revoke","aensRevoke","extendTtl","minNameFee","claimTx","nameInter","_salt","preclaimTx","claim","aensClaim","Aens","aensPreclaim","aensBid","processResponse","baseUrl","put","Http","changeBaseUrl","newUrl","delete","ContractBase","contractEncodeCallDataAPI","contractDecodeDataAPI","compileContractAPI","contractGetACI","setCompilerUrl","getCompilerVersion","contractDecodeCallResultAPI","validateByteCodeAPI","getFateAssembler","getBytecodeCompilerVersion","http","isInit","function","prepareCompilerOption","calldata","bytecode","compilerOptions","callValue","callResult","compilerVersion","checkCompatibility","COMPILER_GE_VERSION","COMPILER_LT_VERSION","ContractCompilerAPI","compilerUrl","contractDecodeCallDataByCodeAPI","contractDecodeCallDataBySourceAPI","filesystem","file_system","SOPHIA_TYPES","ChainTtl","decodeEvents","events","topics","eName","eParams","hexHash","isHasNonIndexed","decoded","event","transformEvent","linkTypeDefs","bindings","typeDef","aciType","typedef","vars","baseType","generic","varianValue","variant","injectVars","readType","contractName","transform","tuple","option","bytes","transformMap","transformVariant","variantArgs","transformDecodedData","aci","skipTransformDecoded","addressPrefix","keyT","valueT","variantType","genericMap","getJoiErrorMsg","errors","label","JoiBinary","Joi","extend","joi","any","pre","convert","rules","validate","createError","validateArguments","validationSchema","ordered","prepareSchema","alternatives","g","or","regex","bufferCheck","optional","sparse","abortEarly","getFunctionACI","functions","type_defs","buildContractMethods","aciArgs","stateful","parseArguments","deploy","callStatic","prepareArgsForEncode","contractAddress","forceCodeCheck","defaultOptions","skipArgsConvert","interface","compiled","deployInfo","setOptions","contract","active","onChanByteCode","compile","decodeCallResult","fnACI","eventsSchema","returns","decodedResult","decodedEvents","payable","contractCallStatic","contractCall","contractDeploy","transaction","createdAt","contractCompile","getContractInstance","sendAndProcess","onSuccess","onError","returnType","handleCallError","returnValue","decodedError","dryRunAccount","pub","contractEncodeCall","dryRunContractTx","dryRunAmount","pubKey","results","callObj","contractDecodeData","argsOrCallData","initState","encodeCall","deployStatic","delegateSignatureCommon","ContractAPI","ContractACI","delegateNamePreclaimSignature","delegateNameClaimSignature","delegateNameTransferSignature","delegateNameRevokeSignature","delegateOracleRegisterSignature","delegateOracleExtendSignature","delegateOracleRespondSignature","ContractWithCompiler","prepareGaParams","ins","authFnName","authCallData","getContractAuthFan","wrapInEmptySignedTx","GeneralizeAccount","createGeneralizeAccount","isGA","gaContractId","rawTransaction","metaTxRlp","RpcClient","parent","window","receive","callbacks","sequence","postMessage","jsonrpc","session","addEventListener","destroyClient","removeEventListener","rpcMethods","asEnum","WALLET_TYPE","NOTIFICATIONS","REQUESTS","SUBSCRIPTION_VALUES","SUBSCRIPTION_TYPES","METHODS","wallet","readyToConnect","updateAddress","aepp","connect","subscribeAddress","updateNetwork","closeConnection","RPC_STATUS","getHandler","sendResponseMessage","sendMessage","responseMessage","voidFn","RpcClients","clients","hasClient","addClient","connectionData","getClient","removeClient","forceConnectionClose","disconnect","updateClientInfo","sentNotificationByCondition","condition","icons","connection","handlers","onMessage","onDisconnect","actions","addressSubscription","messageId","isNotificationOrResponse","msgData","origin","isConnected","getCurrentAccount","connected","updateSubscription","subscribe","unsubscribe","addAction","action","removeAction","accept","deny","addCallback","msgId","transformResult","resolveCallback","rejectCallback","rpcClient","onAddressChange","onNetworkChange","disconnectWallet","RESPONSES","signedTransaction","transactionHash","handleMessage","AeppRpc","eventsHandlers","connectToWallet","walletBroadcast","connectionInfo","sendConnectRequest","sendDisconnect","askAddresses","returnSigned","oracle","queries","oracleQueries","pollQueries","onQuery","pollForQueries","postQuery","postQueryToOracle","respondToQuery","extendOracle","extendOracleTtl","getQuery","getQueryObject","q","newQueries","quriesIds","intervalId","setInterval","clearInterval","decodedQuery","decodedResponse","respond","pollForResponse","pollForQueryResponse","emptyResponse","getOracleObject","registerOracle","Aepp","Rpc","RpcAepp","rpcSessions","RpcServer","destroyServer","createSession","hello","rpcClients","onConnection","getWalletInfo","onSubscription","subscription","getAccounts","onAskAccounts","validationResult","onSign","onMessageSign","WalletRpc","_selectAccount","_addAccount","_selectNode","getClients","removeRpcClient","addRpcClient","clientConnection","shareWalletInfo","postFn","chrome","browser","getBrowserAPI","location","extension","TxBase","deepProperties","Wallet","onTx","onChain","onContract","rpc","RpcWallet","fsm","websockets","eventEmitters","messageQueue","messageQueueLocked","actionQueue","actionQueueLocked","rpcCallbacks","pingTimeoutId","pongTimeoutId","fsmId","channelURL","paramString","encodeURIComponent","emit","channel","enterState","nextState","enter","dequeueAction","changeStatus","newStatus","changeState","newState","JSONBig","enqueueAction","guard","locked","queue","dequeueMessage","remaining","ping","clearTimeout","callback","channel_id","details","wrapCallErrorMessage","close","WebSocket","fireOnce","original","ws","W3CWebSocket","initialize","channelOptions","optionsKeys","wsUrl","protocol","existingFsmId","awaitingReconnection","awaitingConnection","EventEmitter","onopen","reconnectTx","channelOpen","signed_tx","onclose","onmessage","encodeRlpTx","appendSignature","signFn","signedTx","handleUnexpectedMessage","wsMessage","channel_accept","funding_created","awaitingChannelCreateTx","awaitingOpenConfirmation","fsm_id","channelClosed","initiator","responder","role","awaitingOnChainTx","awaitingBlockInclusion","own_funding_locked","funding_locked","awaitingInitialState","awaitingTxSignRequest","awaitingOffChainTx","updates","awaitingOffChainUpdate","accepted","errorCode","error_code","errorMessage","error_msg","awaitingUpdateConflict","to","awaitingShutdownTx","awaitingShutdownOnChainTx","awaitingLeave","awaitingWithdrawTx","awaitingWithdrawCompletion","onOnChainTx","own_withdraw_locked","onOwnWithdrawLocked","withdraw_locked","onWithdrawLocked","awaitingDepositTx","awaitingDepositCompletion","own_deposit_locked","onOwnDepositLocked","deposit_locked","onDepositLocked","awaitingNewContractTx","awaitingNewContractCompletion","round","awaitingCallContractUpdateTx","awaitingCallContractCompletion","awaitingCallsPruned","channels","snakeToPascalObjKeys","contracts","call_data","contract_id","abi_version","caller","caller_id","pubkey","txParams","Channel","on","off","removeListener","channelStatus","channelState","channelFsmId","metadata","balances","leave","shutdown","recipient","doSend","onStatusChanged","withdraw","createContract","vm_version","callContract","callContractStatic","getContractCall","getContractState","channelDisconnect","cleanContractCalls","reconnect","Universal"],"mappings":"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","file":"aepp-sdk.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"bignumber.js\"), require(\"@stamp/required\"), require(\"@stamp/it\"), require(\"tweetnacl\"), require(\"joi-browser\"), require(\"axios\"), require(\"uuid\"), require(\"rlp\"), require(\"@aeternity/bip39\"), require(\"bs58check\"), require(\"ed2curve\"), require(\"tweetnacl-auth\"), require(\"blakejs\"), require(\"aes-js\"), require(\"sha.js\"), require(\"websocket\"), require(\"bip32-path\"), require(\"libsodium-wrappers-sumo\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([, , , , , , , , , , , , , , , , , ], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Ae\"] = factory(require(\"bignumber.js\"), require(\"@stamp/required\"), require(\"@stamp/it\"), require(\"tweetnacl\"), require(\"joi-browser\"), require(\"axios\"), require(\"uuid\"), require(\"rlp\"), require(\"@aeternity/bip39\"), require(\"bs58check\"), require(\"ed2curve\"), require(\"tweetnacl-auth\"), require(\"blakejs\"), require(\"aes-js\"), require(\"sha.js\"), require(\"websocket\"), require(\"bip32-path\"), require(\"libsodium-wrappers-sumo\"));\n\telse\n\t\troot[\"Ae\"] = factory(root[undefined], root[undefined], root[undefined], root[undefined], root[undefined], root[undefined], root[undefined], root[undefined], root[undefined], root[undefined], root[undefined], root[undefined], root[undefined], root[undefined], root[undefined], root[undefined], root[undefined], root[undefined]);\n})(global, function(__WEBPACK_EXTERNAL_MODULE__3__, __WEBPACK_EXTERNAL_MODULE__6__, __WEBPACK_EXTERNAL_MODULE__11__, __WEBPACK_EXTERNAL_MODULE__13__, __WEBPACK_EXTERNAL_MODULE__14__, __WEBPACK_EXTERNAL_MODULE__20__, __WEBPACK_EXTERNAL_MODULE__22__, __WEBPACK_EXTERNAL_MODULE__32__, __WEBPACK_EXTERNAL_MODULE__40__, __WEBPACK_EXTERNAL_MODULE__54__, __WEBPACK_EXTERNAL_MODULE__55__, __WEBPACK_EXTERNAL_MODULE__64__, __WEBPACK_EXTERNAL_MODULE__80__, __WEBPACK_EXTERNAL_MODULE__81__, __WEBPACK_EXTERNAL_MODULE__82__, __WEBPACK_EXTERNAL_MODULE__98__, __WEBPACK_EXTERNAL_MODULE__102__, __WEBPACK_EXTERNAL_MODULE__143__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 144);\n","module.exports = require(\"regenerator-runtime\");\n","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator;","module.exports = __WEBPACK_EXTERNAL_MODULE__3__;","var _objectAssign =\n/*#__PURE__*/\nrequire(\"./internal/_objectAssign\");\n\nvar _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n/**\n * Create a new object with the own properties of the first object merged with\n * the own properties of the second object. If a key exists in both objects,\n * the value from the second object will be used.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> {k: v} -> {k: v}\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.mergeRight, R.mergeDeepRight, R.mergeWith, R.mergeWithKey\n * @deprecated since v0.26.0\n * @example\n *\n *      R.merge({ 'name': 'fred', 'age': 10 }, { 'age': 40 });\n *      //=> { 'name': 'fred', 'age': 40 }\n *\n *      const withDefaults = R.merge({x: 0, y: 0});\n *      withDefaults({y: 2}); //=> {x: 0, y: 2}\n * @symb R.merge(a, b) = {...a, ...b}\n */\n\n\nvar merge =\n/*#__PURE__*/\n_curry2(function merge(l, r) {\n  return _objectAssign({}, l, r);\n});\n\nmodule.exports = merge;","var arrayWithHoles = require(\"./arrayWithHoles\");\n\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit\");\n\nvar nonIterableRest = require(\"./nonIterableRest\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray;","module.exports = __WEBPACK_EXTERNAL_MODULE__6__;","var nth =\n/*#__PURE__*/\nrequire(\"./nth\");\n/**\n * Returns the first element of the given list or string. In some libraries\n * this function is named `first`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> a | Undefined\n * @sig String -> String\n * @param {Array|String} list\n * @return {*}\n * @see R.tail, R.init, R.last\n * @example\n *\n *      R.head(['fi', 'fo', 'fum']); //=> 'fi'\n *      R.head([]); //=> undefined\n *\n *      R.head('abc'); //=> 'a'\n *      R.head(''); //=> ''\n */\n\n\nvar head =\n/*#__PURE__*/\nnth(0);\nmodule.exports = head;","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","var _curry1 =\n/*#__PURE__*/\nrequire(\"./_curry1\");\n\nvar _isPlaceholder =\n/*#__PURE__*/\nrequire(\"./_isPlaceholder\");\n/**\n * Optimized internal two-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\n\n\nfunction _curry2(fn) {\n  return function f2(a, b) {\n    switch (arguments.length) {\n      case 0:\n        return f2;\n\n      case 1:\n        return _isPlaceholder(a) ? f2 : _curry1(function (_b) {\n          return fn(a, _b);\n        });\n\n      default:\n        return _isPlaceholder(a) && _isPlaceholder(b) ? f2 : _isPlaceholder(a) ? _curry1(function (_a) {\n          return fn(_a, b);\n        }) : _isPlaceholder(b) ? _curry1(function (_b) {\n          return fn(a, _b);\n        }) : fn(a, b);\n    }\n  };\n}\n\nmodule.exports = _curry2;","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;","module.exports = __WEBPACK_EXTERNAL_MODULE__11__;","var _isPlaceholder =\n/*#__PURE__*/\nrequire(\"./_isPlaceholder\");\n/**\n * Optimized internal one-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\n\n\nfunction _curry1(fn) {\n  return function f1(a) {\n    if (arguments.length === 0 || _isPlaceholder(a)) {\n      return f1;\n    } else {\n      return fn.apply(this, arguments);\n    }\n  };\n}\n\nmodule.exports = _curry1;","module.exports = __WEBPACK_EXTERNAL_MODULE__13__;","module.exports = __WEBPACK_EXTERNAL_MODULE__14__;","var _curry1 =\n/*#__PURE__*/\nrequire(\"./internal/_curry1\");\n\nvar _has =\n/*#__PURE__*/\nrequire(\"./internal/_has\");\n\nvar _isArguments =\n/*#__PURE__*/\nrequire(\"./internal/_isArguments\"); // cover IE < 9 keys issues\n\n\nvar hasEnumBug = !\n/*#__PURE__*/\n{\n  toString: null\n}.propertyIsEnumerable('toString');\nvar nonEnumerableProps = ['constructor', 'valueOf', 'isPrototypeOf', 'toString', 'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString']; // Safari bug\n\nvar hasArgsEnumBug =\n/*#__PURE__*/\nfunction () {\n  'use strict';\n\n  return arguments.propertyIsEnumerable('length');\n}();\n\nvar contains = function contains(list, item) {\n  var idx = 0;\n\n  while (idx < list.length) {\n    if (list[idx] === item) {\n      return true;\n    }\n\n    idx += 1;\n  }\n\n  return false;\n};\n/**\n * Returns a list containing the names of all the enumerable own properties of\n * the supplied object.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> [k]\n * @param {Object} obj The object to extract properties from\n * @return {Array} An array of the object's own properties.\n * @see R.keysIn, R.values\n * @example\n *\n *      R.keys({a: 1, b: 2, c: 3}); //=> ['a', 'b', 'c']\n */\n\n\nvar keys = typeof Object.keys === 'function' && !hasArgsEnumBug ?\n/*#__PURE__*/\n_curry1(function keys(obj) {\n  return Object(obj) !== obj ? [] : Object.keys(obj);\n}) :\n/*#__PURE__*/\n_curry1(function keys(obj) {\n  if (Object(obj) !== obj) {\n    return [];\n  }\n\n  var prop, nIdx;\n  var ks = [];\n\n  var checkArgsLength = hasArgsEnumBug && _isArguments(obj);\n\n  for (prop in obj) {\n    if (_has(prop, obj) && (!checkArgsLength || prop !== 'length')) {\n      ks[ks.length] = prop;\n    }\n  }\n\n  if (hasEnumBug) {\n    nIdx = nonEnumerableProps.length - 1;\n\n    while (nIdx >= 0) {\n      prop = nonEnumerableProps[nIdx];\n\n      if (_has(prop, obj) && !contains(ks, prop)) {\n        ks[ks.length] = prop;\n      }\n\n      nIdx -= 1;\n    }\n  }\n\n  return ks;\n});\nmodule.exports = keys;","var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar paths =\n/*#__PURE__*/\nrequire(\"./paths\");\n/**\n * Retrieve the value at a given path.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig [Idx] -> {a} -> a | Undefined\n * @param {Array} path The path to use.\n * @param {Object} obj The object to retrieve the nested property from.\n * @return {*} The data at `path`.\n * @see R.prop, R.nth\n * @example\n *\n *      R.path(['a', 'b'], {a: {b: 2}}); //=> 2\n *      R.path(['a', 'b'], {c: {b: 2}}); //=> undefined\n *      R.path(['a', 'b', 0], {a: {b: [1, 2, 3]}}); //=> 1\n *      R.path(['a', 'b', -2], {a: {b: [1, 2, 3]}}); //=> 2\n */\n\n\nvar path =\n/*#__PURE__*/\n_curry2(function path(pathAr, obj) {\n  return paths([pathAr], obj)[0];\n});\n\nmodule.exports = path;","var _curry1 =\n/*#__PURE__*/\nrequire(\"./internal/_curry1\");\n/**\n * Creates a new object from a list key-value pairs. If a key appears in\n * multiple pairs, the rightmost pair is included in the object.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig [[k,v]] -> {k: v}\n * @param {Array} pairs An array of two-element arrays that will be the keys and values of the output object.\n * @return {Object} The object made by pairing up `keys` and `values`.\n * @see R.toPairs, R.pair\n * @example\n *\n *      R.fromPairs([['a', 1], ['b', 2], ['c', 3]]); //=> {a: 1, b: 2, c: 3}\n */\n\n\nvar fromPairs =\n/*#__PURE__*/\n_curry1(function fromPairs(pairs) {\n  var result = {};\n  var idx = 0;\n\n  while (idx < pairs.length) {\n    result[pairs[idx][0]] = pairs[idx][1];\n    idx += 1;\n  }\n\n  return result;\n});\n\nmodule.exports = fromPairs;","var nth =\n/*#__PURE__*/\nrequire(\"./nth\");\n/**\n * Returns the last element of the given list or string.\n *\n * @func\n * @memberOf R\n * @since v0.1.4\n * @category List\n * @sig [a] -> a | Undefined\n * @sig String -> String\n * @param {*} list\n * @return {*}\n * @see R.init, R.head, R.tail\n * @example\n *\n *      R.last(['fi', 'fo', 'fum']); //=> 'fum'\n *      R.last([]); //=> undefined\n *\n *      R.last('abc'); //=> 'c'\n *      R.last(''); //=> ''\n */\n\n\nvar last =\n/*#__PURE__*/\nnth(-1);\nmodule.exports = last;","var _includes =\n/*#__PURE__*/\nrequire(\"./internal/_includes\");\n\nvar _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n/**\n * Returns `true` if the specified value is equal, in [`R.equals`](#equals)\n * terms, to at least one element of the given list; `false` otherwise.\n * Works also with strings.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> Boolean\n * @param {Object} a The item to compare against.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if an equivalent item is in the list, `false` otherwise.\n * @see R.includes\n * @deprecated since v0.26.0\n * @example\n *\n *      R.contains(3, [1, 2, 3]); //=> true\n *      R.contains(4, [1, 2, 3]); //=> false\n *      R.contains({ name: 'Fred' }, [{ name: 'Fred' }]); //=> true\n *      R.contains([42], [[42]]); //=> true\n *      R.contains('ba', 'banana'); //=>true\n */\n\n\nvar contains =\n/*#__PURE__*/\n_curry2(_includes);\n\nmodule.exports = contains;","module.exports = __WEBPACK_EXTERNAL_MODULE__20__;","function _has(prop, obj) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nmodule.exports = _has;","module.exports = __WEBPACK_EXTERNAL_MODULE__22__;","var _curry1 =\n/*#__PURE__*/\nrequire(\"./internal/_curry1\");\n/**\n * Gives a single-word string description of the (native) type of a value,\n * returning such answers as 'Object', 'Number', 'Array', or 'Null'. Does not\n * attempt to distinguish user Object types any further, reporting them all as\n * 'Object'.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Type\n * @sig (* -> {*}) -> String\n * @param {*} val The value to test\n * @return {String}\n * @example\n *\n *      R.type({}); //=> \"Object\"\n *      R.type(1); //=> \"Number\"\n *      R.type(false); //=> \"Boolean\"\n *      R.type('s'); //=> \"String\"\n *      R.type(null); //=> \"Null\"\n *      R.type([]); //=> \"Array\"\n *      R.type(/[A-z]/); //=> \"RegExp\"\n *      R.type(() => {}); //=> \"Function\"\n *      R.type(undefined); //=> \"Undefined\"\n */\n\n\nvar type =\n/*#__PURE__*/\n_curry1(function type(val) {\n  return val === null ? 'Null' : val === undefined ? 'Undefined' : Object.prototype.toString.call(val).slice(8, -1);\n});\n\nmodule.exports = type;","var invoker =\n/*#__PURE__*/\nrequire(\"./invoker\");\n/**\n * Returns a string made by inserting the `separator` between each element and\n * concatenating all the elements into a single string.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig String -> [a] -> String\n * @param {Number|String} separator The string used to separate the elements.\n * @param {Array} xs The elements to join into a string.\n * @return {String} str The string made by concatenating `xs` with `separator`.\n * @see R.split\n * @example\n *\n *      const spacer = R.join(' ');\n *      spacer(['a', 2, 3.4]);   //=> 'a 2 3.4'\n *      R.join('|', [1, 2, 3]);    //=> '1|2|3'\n */\n\n\nvar join =\n/*#__PURE__*/\ninvoker(1, 'join');\nmodule.exports = join;","var _curry1 =\n/*#__PURE__*/\nrequire(\"./internal/_curry1\");\n\nvar _toString =\n/*#__PURE__*/\nrequire(\"./internal/_toString\");\n/**\n * Returns the string representation of the given value. `eval`'ing the output\n * should result in a value equivalent to the input value. Many of the built-in\n * `toString` methods do not satisfy this requirement.\n *\n * If the given value is an `[object Object]` with a `toString` method other\n * than `Object.prototype.toString`, this method is invoked with no arguments\n * to produce the return value. This means user-defined constructor functions\n * can provide a suitable `toString` method. For example:\n *\n *     function Point(x, y) {\n *       this.x = x;\n *       this.y = y;\n *     }\n *\n *     Point.prototype.toString = function() {\n *       return 'new Point(' + this.x + ', ' + this.y + ')';\n *     };\n *\n *     R.toString(new Point(1, 2)); //=> 'new Point(1, 2)'\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category String\n * @sig * -> String\n * @param {*} val\n * @return {String}\n * @example\n *\n *      R.toString(42); //=> '42'\n *      R.toString('abc'); //=> '\"abc\"'\n *      R.toString([1, 2, 3]); //=> '[1, 2, 3]'\n *      R.toString({foo: 1, bar: 2, baz: 3}); //=> '{\"bar\": 2, \"baz\": 3, \"foo\": 1}'\n *      R.toString(new Date('2001-02-03T04:05:06Z')); //=> 'new Date(\"2001-02-03T04:05:06.000Z\")'\n */\n\n\nvar toString =\n/*#__PURE__*/\n_curry1(function toString(val) {\n  return _toString(val, []);\n});\n\nmodule.exports = toString;","var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar map =\n/*#__PURE__*/\nrequire(\"./map\");\n\nvar prop =\n/*#__PURE__*/\nrequire(\"./prop\");\n/**\n * Returns a new list by plucking the same named property off all objects in\n * the list supplied.\n *\n * `pluck` will work on\n * any [functor](https://github.com/fantasyland/fantasy-land#functor) in\n * addition to arrays, as it is equivalent to `R.map(R.prop(k), f)`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Functor f => k -> f {k: v} -> f v\n * @param {Number|String} key The key name to pluck off of each object.\n * @param {Array} f The array or functor to consider.\n * @return {Array} The list of values for the given key.\n * @see R.props\n * @example\n *\n *      var getAges = R.pluck('age');\n *      getAges([{name: 'fred', age: 29}, {name: 'wilma', age: 27}]); //=> [29, 27]\n *\n *      R.pluck(0, [[1, 2], [3, 4]]);               //=> [1, 3]\n *      R.pluck('val', {a: {val: 3}, b: {val: 5}}); //=> {a: 3, b: 5}\n * @symb R.pluck('x', [{x: 1, y: 2}, {x: 3, y: 4}, {x: 5, y: 6}]) = [1, 3, 5]\n * @symb R.pluck(0, [[1, 2], [3, 4], [5, 6]]) = [1, 3, 5]\n */\n\n\nvar pluck =\n/*#__PURE__*/\n_curry2(function pluck(p, list) {\n  return map(prop(p), list);\n});\n\nmodule.exports = pluck;","var _isArray =\n/*#__PURE__*/\nrequire(\"./_isArray\");\n\nvar _isTransformer =\n/*#__PURE__*/\nrequire(\"./_isTransformer\");\n/**\n * Returns a function that dispatches with different strategies based on the\n * object in list position (last argument). If it is an array, executes [fn].\n * Otherwise, if it has a function with one of the given method names, it will\n * execute that function (functor case). Otherwise, if it is a transformer,\n * uses transducer [xf] to return a new transformer (transducer case).\n * Otherwise, it will default to executing [fn].\n *\n * @private\n * @param {Array} methodNames properties to check for a custom implementation\n * @param {Function} xf transducer to initialize if object is transformer\n * @param {Function} fn default ramda implementation\n * @return {Function} A function that dispatches on object in list position\n */\n\n\nfunction _dispatchable(methodNames, xf, fn) {\n  return function () {\n    if (arguments.length === 0) {\n      return fn();\n    }\n\n    var args = Array.prototype.slice.call(arguments, 0);\n    var obj = args.pop();\n\n    if (!_isArray(obj)) {\n      var idx = 0;\n\n      while (idx < methodNames.length) {\n        if (typeof obj[methodNames[idx]] === 'function') {\n          return obj[methodNames[idx]].apply(obj, args);\n        }\n\n        idx += 1;\n      }\n\n      if (_isTransformer(obj)) {\n        var transducer = xf.apply(null, args);\n        return transducer(obj);\n      }\n    }\n\n    return fn.apply(this, arguments);\n  };\n}\n\nmodule.exports = _dispatchable;","module.exports = {\n  init: function () {\n    return this.xf['@@transducer/init']();\n  },\n  result: function (result) {\n    return this.xf['@@transducer/result'](result);\n  }\n};","var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar _reduce =\n/*#__PURE__*/\nrequire(\"./internal/_reduce\");\n\nvar keys =\n/*#__PURE__*/\nrequire(\"./keys\");\n/**\n * An Object-specific version of [`map`](#map). The function is applied to three\n * arguments: *(value, key, obj)*. If only the value is significant, use\n * [`map`](#map) instead.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Object\n * @sig ((*, String, Object) -> *) -> Object -> Object\n * @param {Function} fn\n * @param {Object} obj\n * @return {Object}\n * @see R.map\n * @example\n *\n *      const xyz = { x: 1, y: 2, z: 3 };\n *      const prependKeyAndDouble = (num, key, obj) => key + (num * 2);\n *\n *      R.mapObjIndexed(prependKeyAndDouble, xyz); //=> { x: 'x2', y: 'y4', z: 'z6' }\n */\n\n\nvar mapObjIndexed =\n/*#__PURE__*/\n_curry2(function mapObjIndexed(fn, obj) {\n  return _reduce(function (acc, key) {\n    acc[key] = fn(obj[key], key, obj);\n    return acc;\n  }, {}, keys(obj));\n});\n\nmodule.exports = mapObjIndexed;","var _curry1 =\n/*#__PURE__*/\nrequire(\"./internal/_curry1\");\n/**\n * Checks if the input value is `null` or `undefined`.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Type\n * @sig * -> Boolean\n * @param {*} x The value to test.\n * @return {Boolean} `true` if `x` is `undefined` or `null`, otherwise `false`.\n * @example\n *\n *      R.isNil(null); //=> true\n *      R.isNil(undefined); //=> true\n *      R.isNil(0); //=> false\n *      R.isNil([]); //=> false\n */\n\n\nvar isNil =\n/*#__PURE__*/\n_curry1(function isNil(x) {\n  return x == null;\n});\n\nmodule.exports = isNil;","var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar path =\n/*#__PURE__*/\nrequire(\"./path\");\n/**\n * Returns a function that when supplied an object returns the indicated\n * property of that object, if it exists.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig Idx -> {s: a} -> a | Undefined\n * @param {String|Number} p The property name or array index\n * @param {Object} obj The object to query\n * @return {*} The value at `obj.p`.\n * @see R.path, R.nth\n * @example\n *\n *      R.prop('x', {x: 100}); //=> 100\n *      R.prop('x', {}); //=> undefined\n *      R.prop(0, [100]); //=> 100\n *      R.compose(R.inc, R.prop('x'))({ x: 3 }) //=> 4\n */\n\n\nvar prop =\n/*#__PURE__*/\n_curry2(function prop(p, obj) {\n  return path([p], obj);\n});\n\nmodule.exports = prop;","module.exports = __WEBPACK_EXTERNAL_MODULE__32__;","function _arity(n, fn) {\n  /* eslint-disable no-unused-vars */\n  switch (n) {\n    case 0:\n      return function () {\n        return fn.apply(this, arguments);\n      };\n\n    case 1:\n      return function (a0) {\n        return fn.apply(this, arguments);\n      };\n\n    case 2:\n      return function (a0, a1) {\n        return fn.apply(this, arguments);\n      };\n\n    case 3:\n      return function (a0, a1, a2) {\n        return fn.apply(this, arguments);\n      };\n\n    case 4:\n      return function (a0, a1, a2, a3) {\n        return fn.apply(this, arguments);\n      };\n\n    case 5:\n      return function (a0, a1, a2, a3, a4) {\n        return fn.apply(this, arguments);\n      };\n\n    case 6:\n      return function (a0, a1, a2, a3, a4, a5) {\n        return fn.apply(this, arguments);\n      };\n\n    case 7:\n      return function (a0, a1, a2, a3, a4, a5, a6) {\n        return fn.apply(this, arguments);\n      };\n\n    case 8:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7) {\n        return fn.apply(this, arguments);\n      };\n\n    case 9:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8) {\n        return fn.apply(this, arguments);\n      };\n\n    case 10:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n        return fn.apply(this, arguments);\n      };\n\n    default:\n      throw new Error('First argument to _arity must be a non-negative integer no greater than ten');\n  }\n}\n\nmodule.exports = _arity;","var _isArrayLike =\n/*#__PURE__*/\nrequire(\"./_isArrayLike\");\n\nvar _xwrap =\n/*#__PURE__*/\nrequire(\"./_xwrap\");\n\nvar bind =\n/*#__PURE__*/\nrequire(\"../bind\");\n\nfunction _arrayReduce(xf, acc, list) {\n  var idx = 0;\n  var len = list.length;\n\n  while (idx < len) {\n    acc = xf['@@transducer/step'](acc, list[idx]);\n\n    if (acc && acc['@@transducer/reduced']) {\n      acc = acc['@@transducer/value'];\n      break;\n    }\n\n    idx += 1;\n  }\n\n  return xf['@@transducer/result'](acc);\n}\n\nfunction _iterableReduce(xf, acc, iter) {\n  var step = iter.next();\n\n  while (!step.done) {\n    acc = xf['@@transducer/step'](acc, step.value);\n\n    if (acc && acc['@@transducer/reduced']) {\n      acc = acc['@@transducer/value'];\n      break;\n    }\n\n    step = iter.next();\n  }\n\n  return xf['@@transducer/result'](acc);\n}\n\nfunction _methodReduce(xf, acc, obj, methodName) {\n  return xf['@@transducer/result'](obj[methodName](bind(xf['@@transducer/step'], xf), acc));\n}\n\nvar symIterator = typeof Symbol !== 'undefined' ? Symbol.iterator : '@@iterator';\n\nfunction _reduce(fn, acc, list) {\n  if (typeof fn === 'function') {\n    fn = _xwrap(fn);\n  }\n\n  if (_isArrayLike(list)) {\n    return _arrayReduce(fn, acc, list);\n  }\n\n  if (typeof list['fantasy-land/reduce'] === 'function') {\n    return _methodReduce(fn, acc, list, 'fantasy-land/reduce');\n  }\n\n  if (list[symIterator] != null) {\n    return _iterableReduce(fn, acc, list[symIterator]());\n  }\n\n  if (typeof list.next === 'function') {\n    return _iterableReduce(fn, acc, list);\n  }\n\n  if (typeof list.reduce === 'function') {\n    return _methodReduce(fn, acc, list, 'reduce');\n  }\n\n  throw new TypeError('reduce: list must be array or iterable');\n}\n\nmodule.exports = _reduce;","var _curry1 =\n/*#__PURE__*/\nrequire(\"./_curry1\");\n\nvar _curry2 =\n/*#__PURE__*/\nrequire(\"./_curry2\");\n\nvar _isPlaceholder =\n/*#__PURE__*/\nrequire(\"./_isPlaceholder\");\n/**\n * Optimized internal three-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\n\n\nfunction _curry3(fn) {\n  return function f3(a, b, c) {\n    switch (arguments.length) {\n      case 0:\n        return f3;\n\n      case 1:\n        return _isPlaceholder(a) ? f3 : _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        });\n\n      case 2:\n        return _isPlaceholder(a) && _isPlaceholder(b) ? f3 : _isPlaceholder(a) ? _curry2(function (_a, _c) {\n          return fn(_a, b, _c);\n        }) : _isPlaceholder(b) ? _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        }) : _curry1(function (_c) {\n          return fn(a, b, _c);\n        });\n\n      default:\n        return _isPlaceholder(a) && _isPlaceholder(b) && _isPlaceholder(c) ? f3 : _isPlaceholder(a) && _isPlaceholder(b) ? _curry2(function (_a, _b) {\n          return fn(_a, _b, c);\n        }) : _isPlaceholder(a) && _isPlaceholder(c) ? _curry2(function (_a, _c) {\n          return fn(_a, b, _c);\n        }) : _isPlaceholder(b) && _isPlaceholder(c) ? _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        }) : _isPlaceholder(a) ? _curry1(function (_a) {\n          return fn(_a, b, c);\n        }) : _isPlaceholder(b) ? _curry1(function (_b) {\n          return fn(a, _b, c);\n        }) : _isPlaceholder(c) ? _curry1(function (_c) {\n          return fn(a, b, _c);\n        }) : fn(a, b, c);\n    }\n  };\n}\n\nmodule.exports = _curry3;","var _complement =\n/*#__PURE__*/\nrequire(\"./internal/_complement\");\n\nvar _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar filter =\n/*#__PURE__*/\nrequire(\"./filter\");\n/**\n * The complement of [`filter`](#filter).\n *\n * Acts as a transducer if a transformer is given in list position. Filterable\n * objects include plain objects or any object that has a filter method such\n * as `Array`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> f a\n * @param {Function} pred\n * @param {Array} filterable\n * @return {Array}\n * @see R.filter, R.transduce, R.addIndex\n * @example\n *\n *      const isOdd = (n) => n % 2 === 1;\n *\n *      R.reject(isOdd, [1, 2, 3, 4]); //=> [2, 4]\n *\n *      R.reject(isOdd, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\n */\n\n\nvar reject =\n/*#__PURE__*/\n_curry2(function reject(pred, filterable) {\n  return filter(_complement(pred), filterable);\n});\n\nmodule.exports = reject;","var _curry1 =\n/*#__PURE__*/\nrequire(\"./internal/_curry1\");\n\nvar keys =\n/*#__PURE__*/\nrequire(\"./keys\");\n/**\n * Returns a list of all the enumerable own properties of the supplied object.\n * Note that the order of the output array is not guaranteed across different\n * JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> [v]\n * @param {Object} obj The object to extract values from\n * @return {Array} An array of the values of the object's own properties.\n * @see R.valuesIn, R.keys\n * @example\n *\n *      R.values({a: 1, b: 2, c: 3}); //=> [1, 2, 3]\n */\n\n\nvar values =\n/*#__PURE__*/\n_curry1(function values(obj) {\n  var props = keys(obj);\n  var len = props.length;\n  var vals = [];\n  var idx = 0;\n\n  while (idx < len) {\n    vals[idx] = obj[props[idx]];\n    idx += 1;\n  }\n\n  return vals;\n});\n\nmodule.exports = values;","var _curry1 =\n/*#__PURE__*/\nrequire(\"./internal/_curry1\");\n/**\n * Returns a function that always returns the given value. Note that for\n * non-primitives the value returned is a reference to the original value.\n *\n * This function is known as `const`, `constant`, or `K` (for K combinator) in\n * other languages and libraries.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig a -> (* -> a)\n * @param {*} val The value to wrap in a function\n * @return {Function} A Function :: * -> val.\n * @example\n *\n *      const t = R.always('Tee');\n *      t(); //=> 'Tee'\n */\n\n\nvar always =\n/*#__PURE__*/\n_curry1(function always(val) {\n  return function () {\n    return val;\n  };\n});\n\nmodule.exports = always;","var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n/**\n * Returns a partial copy of an object containing only the keys specified. If\n * the key does not exist, the property is ignored.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig [k] -> {k: v} -> {k: v}\n * @param {Array} names an array of String property names to copy onto a new object\n * @param {Object} obj The object to copy from\n * @return {Object} A new object with only properties from `names` on it.\n * @see R.omit, R.props\n * @example\n *\n *      R.pick(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, d: 4}\n *      R.pick(['a', 'e', 'f'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1}\n */\n\n\nvar pick =\n/*#__PURE__*/\n_curry2(function pick(names, obj) {\n  var result = {};\n  var idx = 0;\n\n  while (idx < names.length) {\n    if (names[idx] in obj) {\n      result[names[idx]] = obj[names[idx]];\n    }\n\n    idx += 1;\n  }\n\n  return result;\n});\n\nmodule.exports = pick;","module.exports = __WEBPACK_EXTERNAL_MODULE__40__;","function _isPlaceholder(a) {\n  return a != null && typeof a === 'object' && a['@@functional/placeholder'] === true;\n}\n\nmodule.exports = _isPlaceholder;","var _arity =\n/*#__PURE__*/\nrequire(\"./internal/_arity\");\n\nvar _curry1 =\n/*#__PURE__*/\nrequire(\"./internal/_curry1\");\n\nvar _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar _curryN =\n/*#__PURE__*/\nrequire(\"./internal/_curryN\");\n/**\n * Returns a curried equivalent of the provided function, with the specified\n * arity. The curried function has two unusual capabilities. First, its\n * arguments needn't be provided one at a time. If `g` is `R.curryN(3, f)`, the\n * following are equivalent:\n *\n *   - `g(1)(2)(3)`\n *   - `g(1)(2, 3)`\n *   - `g(1, 2)(3)`\n *   - `g(1, 2, 3)`\n *\n * Secondly, the special placeholder value [`R.__`](#__) may be used to specify\n * \"gaps\", allowing partial application of any combination of arguments,\n * regardless of their positions. If `g` is as above and `_` is [`R.__`](#__),\n * the following are equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @func\n * @memberOf R\n * @since v0.5.0\n * @category Function\n * @sig Number -> (* -> a) -> (* -> a)\n * @param {Number} length The arity for the returned function.\n * @param {Function} fn The function to curry.\n * @return {Function} A new, curried function.\n * @see R.curry\n * @example\n *\n *      const sumArgs = (...args) => R.sum(args);\n *\n *      const curriedAddFourNumbers = R.curryN(4, sumArgs);\n *      const f = curriedAddFourNumbers(1, 2);\n *      const g = f(3);\n *      g(4); //=> 10\n */\n\n\nvar curryN =\n/*#__PURE__*/\n_curry2(function curryN(length, fn) {\n  if (length === 1) {\n    return _curry1(fn);\n  }\n\n  return _arity(length, _curryN(length, [], fn));\n});\n\nmodule.exports = curryN;","var _indexOf =\n/*#__PURE__*/\nrequire(\"./_indexOf\");\n\nfunction _includes(a, list) {\n  return _indexOf(list, a, 0) >= 0;\n}\n\nmodule.exports = _includes;","var _curry1 =\n/*#__PURE__*/\nrequire(\"./internal/_curry1\");\n\nvar _makeFlat =\n/*#__PURE__*/\nrequire(\"./internal/_makeFlat\");\n/**\n * Returns a new list by pulling every item out of it (and all its sub-arrays)\n * and putting them in a new array, depth-first.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [b]\n * @param {Array} list The array to consider.\n * @return {Array} The flattened list.\n * @see R.unnest\n * @example\n *\n *      R.flatten([1, 2, [3, 4], 5, [6, [7, 8, [9, [10, 11], 12]]]]);\n *      //=> [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]\n */\n\n\nvar flatten =\n/*#__PURE__*/\n_curry1(\n/*#__PURE__*/\n_makeFlat(true));\n\nmodule.exports = flatten;","var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n/**\n * Creates a new object out of a list of keys and a list of values.\n * Key/value pairing is truncated to the length of the shorter of the two lists.\n * Note: `zipObj` is equivalent to `pipe(zip, fromPairs)`.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig [String] -> [*] -> {String: *}\n * @param {Array} keys The array that will be properties on the output object.\n * @param {Array} values The list of values on the output object.\n * @return {Object} The object made by pairing up same-indexed elements of `keys` and `values`.\n * @example\n *\n *      R.zipObj(['a', 'b', 'c'], [1, 2, 3]); //=> {a: 1, b: 2, c: 3}\n */\n\n\nvar zipObj =\n/*#__PURE__*/\n_curry2(function zipObj(keys, values) {\n  var idx = 0;\n  var len = Math.min(keys.length, values.length);\n  var out = {};\n\n  while (idx < len) {\n    out[keys[idx]] = values[idx];\n    idx += 1;\n  }\n\n  return out;\n});\n\nmodule.exports = zipObj;","var arrayWithHoles = require(\"./arrayWithHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar nonIterableRest = require(\"./nonIterableRest\");\n\nfunction _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || nonIterableRest();\n}\n\nmodule.exports = _toArray;","var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar _isString =\n/*#__PURE__*/\nrequire(\"./internal/_isString\");\n/**\n * Returns the nth element of the given list or string. If n is negative the\n * element at index length + n is returned.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> a | Undefined\n * @sig Number -> String -> String\n * @param {Number} offset\n * @param {*} list\n * @return {*}\n * @example\n *\n *      const list = ['foo', 'bar', 'baz', 'quux'];\n *      R.nth(1, list); //=> 'bar'\n *      R.nth(-1, list); //=> 'quux'\n *      R.nth(-99, list); //=> undefined\n *\n *      R.nth(2, 'abc'); //=> 'c'\n *      R.nth(3, 'abc'); //=> ''\n * @symb R.nth(-1, [a, b, c]) = c\n * @symb R.nth(0, [a, b, c]) = a\n * @symb R.nth(1, [a, b, c]) = b\n */\n\n\nvar nth =\n/*#__PURE__*/\n_curry2(function nth(offset, list) {\n  var idx = offset < 0 ? list.length + offset : offset;\n  return _isString(list) ? list.charAt(idx) : list[idx];\n});\n\nmodule.exports = nth;","/**\n * Tests whether or not an object is an array.\n *\n * @private\n * @param {*} val The object to test.\n * @return {Boolean} `true` if `val` is an array, `false` otherwise.\n * @example\n *\n *      _isArray([]); //=> true\n *      _isArray(null); //=> false\n *      _isArray({}); //=> false\n */\nmodule.exports = Array.isArray || function _isArray(val) {\n  return val != null && val.length >= 0 && Object.prototype.toString.call(val) === '[object Array]';\n};","var _arity =\n/*#__PURE__*/\nrequire(\"./_arity\");\n\nvar _isPlaceholder =\n/*#__PURE__*/\nrequire(\"./_isPlaceholder\");\n/**\n * Internal curryN function.\n *\n * @private\n * @category Function\n * @param {Number} length The arity of the curried function.\n * @param {Array} received An array of arguments received thus far.\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\n\n\nfunction _curryN(length, received, fn) {\n  return function () {\n    var combined = [];\n    var argsIdx = 0;\n    var left = length;\n    var combinedIdx = 0;\n\n    while (combinedIdx < received.length || argsIdx < arguments.length) {\n      var result;\n\n      if (combinedIdx < received.length && (!_isPlaceholder(received[combinedIdx]) || argsIdx >= arguments.length)) {\n        result = received[combinedIdx];\n      } else {\n        result = arguments[argsIdx];\n        argsIdx += 1;\n      }\n\n      combined[combinedIdx] = result;\n\n      if (!_isPlaceholder(result)) {\n        left -= 1;\n      }\n\n      combinedIdx += 1;\n    }\n\n    return left <= 0 ? fn.apply(this, combined) : _arity(left, _curryN(length, combined, fn));\n  };\n}\n\nmodule.exports = _curryN;","var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar _isFunction =\n/*#__PURE__*/\nrequire(\"./internal/_isFunction\");\n\nvar curryN =\n/*#__PURE__*/\nrequire(\"./curryN\");\n\nvar toString =\n/*#__PURE__*/\nrequire(\"./toString\");\n/**\n * Turns a named method with a specified arity into a function that can be\n * called directly supplied with arguments and a target object.\n *\n * The returned function is curried and accepts `arity + 1` parameters where\n * the final parameter is the target object.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig Number -> String -> (a -> b -> ... -> n -> Object -> *)\n * @param {Number} arity Number of arguments the returned function should take\n *        before the target object.\n * @param {String} method Name of any of the target object's methods to call.\n * @return {Function} A new curried function.\n * @see R.construct\n * @example\n *\n *      const sliceFrom = R.invoker(1, 'slice');\n *      sliceFrom(6, 'abcdefghijklm'); //=> 'ghijklm'\n *      const sliceFrom6 = R.invoker(2, 'slice')(6);\n *      sliceFrom6(8, 'abcdefghijklm'); //=> 'gh'\n *\n *      const dog = {\n *        speak: async () => 'Woof!'\n *      };\n *      const speak = R.invoker(0, 'speak');\n *      speak(dog).then(console.log) //~> 'Woof!'\n *\n * @symb R.invoker(0, 'method')(o) = o['method']()\n * @symb R.invoker(1, 'method')(a, o) = o['method'](a)\n * @symb R.invoker(2, 'method')(a, b, o) = o['method'](a, b)\n */\n\n\nvar invoker =\n/*#__PURE__*/\n_curry2(function invoker(arity, method) {\n  return curryN(arity + 1, function () {\n    var target = arguments[arity];\n\n    if (target != null && _isFunction(target[method])) {\n      return target[method].apply(target, Array.prototype.slice.call(arguments, 0, arity));\n    }\n\n    throw new TypeError(toString(target) + ' does not have a method named \"' + method + '\"');\n  });\n});\n\nmodule.exports = invoker;","var _curry3 =\n/*#__PURE__*/\nrequire(\"./internal/_curry3\");\n\nvar _reduce =\n/*#__PURE__*/\nrequire(\"./internal/_reduce\");\n/**\n * Returns a single item by iterating through the list, successively calling\n * the iterator function and passing it an accumulator value and the current\n * value from the array, and then passing the result to the next call.\n *\n * The iterator function receives two values: *(acc, value)*. It may use\n * [`R.reduced`](#reduced) to shortcut the iteration.\n *\n * The arguments' order of [`reduceRight`](#reduceRight)'s iterator function\n * is *(value, acc)*.\n *\n * Note: `R.reduce` does not skip deleted or unassigned indices (sparse\n * arrays), unlike the native `Array.prototype.reduce` method. For more details\n * on this behavior, see:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce#Description\n *\n * Dispatches to the `reduce` method of the third argument, if present. When\n * doing so, it is up to the user to handle the [`R.reduced`](#reduced)\n * shortcuting, as this is not implemented by `reduce`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig ((a, b) -> a) -> a -> [b] -> a\n * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n *        current element from the array.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduced, R.addIndex, R.reduceRight\n * @example\n *\n *      R.reduce(R.subtract, 0, [1, 2, 3, 4]) // => ((((0 - 1) - 2) - 3) - 4) = -10\n *      //          -               -10\n *      //         / \\              / \\\n *      //        -   4           -6   4\n *      //       / \\              / \\\n *      //      -   3   ==>     -3   3\n *      //     / \\              / \\\n *      //    -   2           -1   2\n *      //   / \\              / \\\n *      //  0   1            0   1\n *\n * @symb R.reduce(f, a, [b, c, d]) = f(f(f(a, b), c), d)\n */\n\n\nvar reduce =\n/*#__PURE__*/\n_curry3(_reduce);\n\nmodule.exports = reduce;","var _curry1 =\n/*#__PURE__*/\nrequire(\"./internal/_curry1\");\n\nvar curryN =\n/*#__PURE__*/\nrequire(\"./curryN\");\n/**\n * Returns a new function much like the supplied one, except that the first two\n * arguments' order is reversed.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig ((a, b, c, ...) -> z) -> (b -> a -> c -> ... -> z)\n * @param {Function} fn The function to invoke with its first two parameters reversed.\n * @return {*} The result of invoking `fn` with its first two parameters' order reversed.\n * @example\n *\n *      const mergeThree = (a, b, c) => [].concat(a, b, c);\n *\n *      mergeThree(1, 2, 3); //=> [1, 2, 3]\n *\n *      R.flip(mergeThree)(1, 2, 3); //=> [2, 1, 3]\n * @symb R.flip(f)(a, b, c) = f(b, a, c)\n */\n\n\nvar flip =\n/*#__PURE__*/\n_curry1(function flip(fn) {\n  return curryN(fn.length, function (a, b) {\n    var args = Array.prototype.slice.call(arguments, 0);\n    args[0] = b;\n    args[1] = a;\n    return fn.apply(this, args);\n  });\n});\n\nmodule.exports = flip;","var _curry1 =\n/*#__PURE__*/\nrequire(\"./internal/_curry1\");\n\nvar curryN =\n/*#__PURE__*/\nrequire(\"./curryN\");\n/**\n * Returns a curried equivalent of the provided function. The curried function\n * has two unusual capabilities. First, its arguments needn't be provided one\n * at a time. If `f` is a ternary function and `g` is `R.curry(f)`, the\n * following are equivalent:\n *\n *   - `g(1)(2)(3)`\n *   - `g(1)(2, 3)`\n *   - `g(1, 2)(3)`\n *   - `g(1, 2, 3)`\n *\n * Secondly, the special placeholder value [`R.__`](#__) may be used to specify\n * \"gaps\", allowing partial application of any combination of arguments,\n * regardless of their positions. If `g` is as above and `_` is [`R.__`](#__),\n * the following are equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (* -> a) -> (* -> a)\n * @param {Function} fn The function to curry.\n * @return {Function} A new, curried function.\n * @see R.curryN, R.partial\n * @example\n *\n *      const addFourNumbers = (a, b, c, d) => a + b + c + d;\n *\n *      const curriedAddFourNumbers = R.curry(addFourNumbers);\n *      const f = curriedAddFourNumbers(1, 2);\n *      const g = f(3);\n *      g(4); //=> 10\n */\n\n\nvar curry =\n/*#__PURE__*/\n_curry1(function curry(fn) {\n  return curryN(fn.length, fn);\n});\n\nmodule.exports = curry;","module.exports = __WEBPACK_EXTERNAL_MODULE__54__;","module.exports = __WEBPACK_EXTERNAL_MODULE__55__;","var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n/**\n * Returns `true` if the first argument is less than the second; `false`\n * otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @see R.gt\n * @example\n *\n *      R.lt(2, 1); //=> false\n *      R.lt(2, 2); //=> false\n *      R.lt(2, 3); //=> true\n *      R.lt('a', 'z'); //=> true\n *      R.lt('z', 'a'); //=> false\n */\n\n\nvar lt =\n/*#__PURE__*/\n_curry2(function lt(a, b) {\n  return a < b;\n});\n\nmodule.exports = lt;","var _curry1 =\n/*#__PURE__*/\nrequire(\"./internal/_curry1\");\n\nvar _has =\n/*#__PURE__*/\nrequire(\"./internal/_has\");\n/**\n * Converts an object into an array of key, value arrays. Only the object's\n * own properties are used.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.4.0\n * @category Object\n * @sig {String: *} -> [[String,*]]\n * @param {Object} obj The object to extract from\n * @return {Array} An array of key, value arrays from the object's own properties.\n * @see R.fromPairs\n * @example\n *\n *      R.toPairs({a: 1, b: 2, c: 3}); //=> [['a', 1], ['b', 2], ['c', 3]]\n */\n\n\nvar toPairs =\n/*#__PURE__*/\n_curry1(function toPairs(obj) {\n  var pairs = [];\n\n  for (var prop in obj) {\n    if (_has(prop, obj)) {\n      pairs[pairs.length] = [prop, obj[prop]];\n    }\n  }\n\n  return pairs;\n});\n\nmodule.exports = toPairs;","var invoker =\n/*#__PURE__*/\nrequire(\"./invoker\");\n/**\n * The upper case version of a string.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category String\n * @sig String -> String\n * @param {String} str The string to upper case.\n * @return {String} The upper case version of `str`.\n * @see R.toLower\n * @example\n *\n *      R.toUpper('abc'); //=> 'ABC'\n */\n\n\nvar toUpper =\n/*#__PURE__*/\ninvoker(0, 'toUpperCase');\nmodule.exports = toUpper;","var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar mergeDeepWithKey =\n/*#__PURE__*/\nrequire(\"./mergeDeepWithKey\");\n/**\n * Creates a new object with the own properties of the first object merged with\n * the own properties of the second object. If a key exists in both objects:\n * - and both values are objects, the two values will be recursively merged\n * - otherwise the value from the second object will be used.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Object\n * @sig {a} -> {a} -> {a}\n * @param {Object} lObj\n * @param {Object} rObj\n * @return {Object}\n * @see R.merge, R.mergeDeepLeft, R.mergeDeepWith, R.mergeDeepWithKey\n * @example\n *\n *      R.mergeDeepRight({ name: 'fred', age: 10, contact: { email: 'moo@example.com' }},\n *                       { age: 40, contact: { email: 'baa@example.com' }});\n *      //=> { name: 'fred', age: 40, contact: { email: 'baa@example.com' }}\n */\n\n\nvar mergeDeepRight =\n/*#__PURE__*/\n_curry2(function mergeDeepRight(lObj, rObj) {\n  return mergeDeepWithKey(function (k, lVal, rVal) {\n    return rVal;\n  }, lObj, rObj);\n});\n\nmodule.exports = mergeDeepRight;","var _checkForMethod =\n/*#__PURE__*/\nrequire(\"./internal/_checkForMethod\");\n\nvar _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar reduceBy =\n/*#__PURE__*/\nrequire(\"./reduceBy\");\n/**\n * Splits a list into sub-lists stored in an object, based on the result of\n * calling a String-returning function on each element, and grouping the\n * results according to values returned.\n *\n * Dispatches to the `groupBy` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> String) -> [a] -> {String: [a]}\n * @param {Function} fn Function :: a -> String\n * @param {Array} list The array to group\n * @return {Object} An object with the output of `fn` for keys, mapped to arrays of elements\n *         that produced that key when passed to `fn`.\n * @see R.reduceBy, R.transduce\n * @example\n *\n *      const byGrade = R.groupBy(function(student) {\n *        const score = student.score;\n *        return score < 65 ? 'F' :\n *               score < 70 ? 'D' :\n *               score < 80 ? 'C' :\n *               score < 90 ? 'B' : 'A';\n *      });\n *      const students = [{name: 'Abby', score: 84},\n *                      {name: 'Eddy', score: 58},\n *                      // ...\n *                      {name: 'Jack', score: 69}];\n *      byGrade(students);\n *      // {\n *      //   'A': [{name: 'Dianne', score: 99}],\n *      //   'B': [{name: 'Abby', score: 84}]\n *      //   // ...,\n *      //   'F': [{name: 'Eddy', score: 58}]\n *      // }\n */\n\n\nvar groupBy =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_checkForMethod('groupBy',\n/*#__PURE__*/\nreduceBy(function (acc, item) {\n  if (acc == null) {\n    acc = [];\n  }\n\n  acc.push(item);\n  return acc;\n}, null)));\n\nmodule.exports = groupBy;","var _curry1 =\n/*#__PURE__*/\nrequire(\"./internal/_curry1\");\n\nvar _identity =\n/*#__PURE__*/\nrequire(\"./internal/_identity\");\n/**\n * A function that does nothing but return the parameter supplied to it. Good\n * as a default or placeholder function.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig a -> a\n * @param {*} x The value to return.\n * @return {*} The input value, `x`.\n * @example\n *\n *      R.identity(1); //=> 1\n *\n *      const obj = {};\n *      R.identity(obj) === obj; //=> true\n * @symb R.identity(a) = a\n */\n\n\nvar identity =\n/*#__PURE__*/\n_curry1(_identity);\n\nmodule.exports = identity;","var reduceBy =\n/*#__PURE__*/\nrequire(\"./reduceBy\");\n/**\n * Given a function that generates a key, turns a list of objects into an\n * object indexing the objects by the given key. Note that if multiple\n * objects generate the same value for the indexing key only the last value\n * will be included in the generated object.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig (a -> String) -> [{k: v}] -> {k: {k: v}}\n * @param {Function} fn Function :: a -> String\n * @param {Array} array The array of objects to index\n * @return {Object} An object indexing each array element by the given property.\n * @example\n *\n *      const list = [{id: 'xyz', title: 'A'}, {id: 'abc', title: 'B'}];\n *      R.indexBy(R.prop('id'), list);\n *      //=> {abc: {id: 'abc', title: 'B'}, xyz: {id: 'xyz', title: 'A'}}\n */\n\n\nvar indexBy =\n/*#__PURE__*/\nreduceBy(function (acc, elem) {\n  return elem;\n}, null);\nmodule.exports = indexBy;","var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n/**\n * Returns the second argument if it is not `null`, `undefined` or `NaN`;\n * otherwise the first argument is returned.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Logic\n * @sig a -> b -> a | b\n * @param {a} default The default value.\n * @param {b} val `val` will be returned instead of `default` unless `val` is `null`, `undefined` or `NaN`.\n * @return {*} The second value if it is not `null`, `undefined` or `NaN`, otherwise the default value\n * @example\n *\n *      const defaultTo42 = R.defaultTo(42);\n *\n *      defaultTo42(null);  //=> 42\n *      defaultTo42(undefined);  //=> 42\n *      defaultTo42(false);  //=> false\n *      defaultTo42('Ramda');  //=> 'Ramda'\n *      // parseInt('string') results in NaN\n *      defaultTo42(parseInt('string')); //=> 42\n */\n\n\nvar defaultTo =\n/*#__PURE__*/\n_curry2(function defaultTo(d, v) {\n  return v == null || v !== v ? d : v;\n});\n\nmodule.exports = defaultTo;","module.exports = __WEBPACK_EXTERNAL_MODULE__64__;","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nmodule.exports = _nonIterableRest;","function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","function _isString(x) {\n  return Object.prototype.toString.call(x) === '[object String]';\n}\n\nmodule.exports = _isString;","var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar _dispatchable =\n/*#__PURE__*/\nrequire(\"./internal/_dispatchable\");\n\nvar _map =\n/*#__PURE__*/\nrequire(\"./internal/_map\");\n\nvar _reduce =\n/*#__PURE__*/\nrequire(\"./internal/_reduce\");\n\nvar _xmap =\n/*#__PURE__*/\nrequire(\"./internal/_xmap\");\n\nvar curryN =\n/*#__PURE__*/\nrequire(\"./curryN\");\n\nvar keys =\n/*#__PURE__*/\nrequire(\"./keys\");\n/**\n * Takes a function and\n * a [functor](https://github.com/fantasyland/fantasy-land#functor),\n * applies the function to each of the functor's values, and returns\n * a functor of the same shape.\n *\n * Ramda provides suitable `map` implementations for `Array` and `Object`,\n * so this function may be applied to `[1, 2, 3]` or `{x: 1, y: 2, z: 3}`.\n *\n * Dispatches to the `map` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * Also treats functions as functors and will compose them together.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Functor f => (a -> b) -> f a -> f b\n * @param {Function} fn The function to be called on every element of the input `list`.\n * @param {Array} list The list to be iterated over.\n * @return {Array} The new list.\n * @see R.transduce, R.addIndex\n * @example\n *\n *      const double = x => x * 2;\n *\n *      R.map(double, [1, 2, 3]); //=> [2, 4, 6]\n *\n *      R.map(double, {x: 1, y: 2, z: 3}); //=> {x: 2, y: 4, z: 6}\n * @symb R.map(f, [a, b]) = [f(a), f(b)]\n * @symb R.map(f, { x: a, y: b }) = { x: f(a), y: f(b) }\n * @symb R.map(f, functor_o) = functor_o.map(f)\n */\n\n\nvar map =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable(['fantasy-land/map', 'map'], _xmap, function map(fn, functor) {\n  switch (Object.prototype.toString.call(functor)) {\n    case '[object Function]':\n      return curryN(functor.length, function () {\n        return fn.call(this, functor.apply(this, arguments));\n      });\n\n    case '[object Object]':\n      return _reduce(function (acc, key) {\n        acc[key] = fn(functor[key]);\n        return acc;\n      }, {}, keys(functor));\n\n    default:\n      return _map(fn, functor);\n  }\n}));\n\nmodule.exports = map;","function _map(fn, functor) {\n  var idx = 0;\n  var len = functor.length;\n  var result = Array(len);\n\n  while (idx < len) {\n    result[idx] = fn(functor[idx]);\n    idx += 1;\n  }\n\n  return result;\n}\n\nmodule.exports = _map;","var _curry1 =\n/*#__PURE__*/\nrequire(\"./_curry1\");\n\nvar _isArray =\n/*#__PURE__*/\nrequire(\"./_isArray\");\n\nvar _isString =\n/*#__PURE__*/\nrequire(\"./_isString\");\n/**\n * Tests whether or not an object is similar to an array.\n *\n * @private\n * @category Type\n * @category List\n * @sig * -> Boolean\n * @param {*} x The object to test.\n * @return {Boolean} `true` if `x` has a numeric length property and extreme indices defined; `false` otherwise.\n * @example\n *\n *      _isArrayLike([]); //=> true\n *      _isArrayLike(true); //=> false\n *      _isArrayLike({}); //=> false\n *      _isArrayLike({length: 10}); //=> false\n *      _isArrayLike({0: 'zero', 9: 'nine', length: 10}); //=> true\n */\n\n\nvar _isArrayLike =\n/*#__PURE__*/\n_curry1(function isArrayLike(x) {\n  if (_isArray(x)) {\n    return true;\n  }\n\n  if (!x) {\n    return false;\n  }\n\n  if (typeof x !== 'object') {\n    return false;\n  }\n\n  if (_isString(x)) {\n    return false;\n  }\n\n  if (x.nodeType === 1) {\n    return !!x.length;\n  }\n\n  if (x.length === 0) {\n    return true;\n  }\n\n  if (x.length > 0) {\n    return x.hasOwnProperty(0) && x.hasOwnProperty(x.length - 1);\n  }\n\n  return false;\n});\n\nmodule.exports = _isArrayLike;","function _includesWith(pred, x, list) {\n  var idx = 0;\n  var len = list.length;\n\n  while (idx < len) {\n    if (pred(x, list[idx])) {\n      return true;\n    }\n\n    idx += 1;\n  }\n\n  return false;\n}\n\nmodule.exports = _includesWith;","// Based on https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\nfunction _objectIs(a, b) {\n  // SameValue algorithm\n  if (a === b) {\n    // Steps 1-5, 7-10\n    // Steps 6.b-6.e: +0 != -0\n    return a !== 0 || 1 / a === 1 / b;\n  } else {\n    // Step 6.a: NaN == NaN\n    return a !== a && b !== b;\n  }\n}\n\nmodule.exports = typeof Object.is === 'function' ? Object.is : _objectIs;","function _isObject(x) {\n  return Object.prototype.toString.call(x) === '[object Object]';\n}\n\nmodule.exports = _isObject;","var _has =\n/*#__PURE__*/\nrequire(\"./_has\"); // Based on https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n\n\nfunction _objectAssign(target) {\n  if (target == null) {\n    throw new TypeError('Cannot convert undefined or null to object');\n  }\n\n  var output = Object(target);\n  var idx = 1;\n  var length = arguments.length;\n\n  while (idx < length) {\n    var source = arguments[idx];\n\n    if (source != null) {\n      for (var nextKey in source) {\n        if (_has(nextKey, source)) {\n          output[nextKey] = source[nextKey];\n        }\n      }\n    }\n\n    idx += 1;\n  }\n\n  return output;\n}\n\nmodule.exports = typeof Object.assign === 'function' ? Object.assign : _objectAssign;","var _isArray =\n/*#__PURE__*/\nrequire(\"./_isArray\");\n/**\n * This checks whether a function has a [methodname] function. If it isn't an\n * array it will execute that function otherwise it will default to the ramda\n * implementation.\n *\n * @private\n * @param {Function} fn ramda implemtation\n * @param {String} methodname property to check for a custom implementation\n * @return {Object} Whatever the return value of the method is.\n */\n\n\nfunction _checkForMethod(methodname, fn) {\n  return function () {\n    var length = arguments.length;\n\n    if (length === 0) {\n      return fn();\n    }\n\n    var obj = arguments[length - 1];\n    return _isArray(obj) || typeof obj[methodname] !== 'function' ? fn.apply(this, arguments) : obj[methodname].apply(obj, Array.prototype.slice.call(arguments, 0, length - 1));\n  };\n}\n\nmodule.exports = _checkForMethod;","var _clone =\n/*#__PURE__*/\nrequire(\"./internal/_clone\");\n\nvar _curryN =\n/*#__PURE__*/\nrequire(\"./internal/_curryN\");\n\nvar _dispatchable =\n/*#__PURE__*/\nrequire(\"./internal/_dispatchable\");\n\nvar _has =\n/*#__PURE__*/\nrequire(\"./internal/_has\");\n\nvar _reduce =\n/*#__PURE__*/\nrequire(\"./internal/_reduce\");\n\nvar _xreduceBy =\n/*#__PURE__*/\nrequire(\"./internal/_xreduceBy\");\n/**\n * Groups the elements of the list according to the result of calling\n * the String-returning function `keyFn` on each element and reduces the elements\n * of each group to a single value via the reducer function `valueFn`.\n *\n * This function is basically a more general [`groupBy`](#groupBy) function.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category List\n * @sig ((a, b) -> a) -> a -> (b -> String) -> [b] -> {String: a}\n * @param {Function} valueFn The function that reduces the elements of each group to a single\n *        value. Receives two values, accumulator for a particular group and the current element.\n * @param {*} acc The (initial) accumulator value for each group.\n * @param {Function} keyFn The function that maps the list's element into a key.\n * @param {Array} list The array to group.\n * @return {Object} An object with the output of `keyFn` for keys, mapped to the output of\n *         `valueFn` for elements which produced that key when passed to `keyFn`.\n * @see R.groupBy, R.reduce\n * @example\n *\n *      const groupNames = (acc, {name}) => acc.concat(name)\n *      const toGrade = ({score}) =>\n *        score < 65 ? 'F' :\n *        score < 70 ? 'D' :\n *        score < 80 ? 'C' :\n *        score < 90 ? 'B' : 'A'\n *\n *      var students = [\n *        {name: 'Abby', score: 83},\n *        {name: 'Bart', score: 62},\n *        {name: 'Curt', score: 88},\n *        {name: 'Dora', score: 92},\n *      ]\n *\n *      reduceBy(groupNames, [], toGrade, students)\n *      //=> {\"A\": [\"Dora\"], \"B\": [\"Abby\", \"Curt\"], \"F\": [\"Bart\"]}\n */\n\n\nvar reduceBy =\n/*#__PURE__*/\n_curryN(4, [],\n/*#__PURE__*/\n_dispatchable([], _xreduceBy, function reduceBy(valueFn, valueAcc, keyFn, list) {\n  return _reduce(function (acc, elt) {\n    var key = keyFn(elt);\n    acc[key] = valueFn(_has(key, acc) ? acc[key] : _clone(valueAcc, [], [], false), elt);\n    return acc;\n  }, {}, list);\n}));\n\nmodule.exports = reduceBy;","var _checkForMethod =\n/*#__PURE__*/\nrequire(\"./internal/_checkForMethod\");\n\nvar _curry3 =\n/*#__PURE__*/\nrequire(\"./internal/_curry3\");\n/**\n * Returns the elements of the given list or string (or object with a `slice`\n * method) from `fromIndex` (inclusive) to `toIndex` (exclusive).\n *\n * Dispatches to the `slice` method of the third argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.4\n * @category List\n * @sig Number -> Number -> [a] -> [a]\n * @sig Number -> Number -> String -> String\n * @param {Number} fromIndex The start index (inclusive).\n * @param {Number} toIndex The end index (exclusive).\n * @param {*} list\n * @return {*}\n * @example\n *\n *      R.slice(1, 3, ['a', 'b', 'c', 'd']);        //=> ['b', 'c']\n *      R.slice(1, Infinity, ['a', 'b', 'c', 'd']); //=> ['b', 'c', 'd']\n *      R.slice(0, -1, ['a', 'b', 'c', 'd']);       //=> ['a', 'b', 'c']\n *      R.slice(-3, -1, ['a', 'b', 'c', 'd']);      //=> ['b', 'c']\n *      R.slice(0, 3, 'ramda');                     //=> 'ram'\n */\n\n\nvar slice =\n/*#__PURE__*/\n_curry3(\n/*#__PURE__*/\n_checkForMethod('slice', function slice(fromIndex, toIndex, list) {\n  return Array.prototype.slice.call(list, fromIndex, toIndex);\n}));\n\nmodule.exports = slice;","function _reduced(x) {\n  return x && x['@@transducer/reduced'] ? x : {\n    '@@transducer/value': x,\n    '@@transducer/reduced': true\n  };\n}\n\nmodule.exports = _reduced;","module.exports = __WEBPACK_EXTERNAL_MODULE__80__;","module.exports = __WEBPACK_EXTERNAL_MODULE__81__;","module.exports = __WEBPACK_EXTERNAL_MODULE__82__;","var _arity =\n/*#__PURE__*/\nrequire(\"./internal/_arity\");\n\nvar _curry1 =\n/*#__PURE__*/\nrequire(\"./internal/_curry1\");\n\nvar map =\n/*#__PURE__*/\nrequire(\"./map\");\n\nvar max =\n/*#__PURE__*/\nrequire(\"./max\");\n\nvar reduce =\n/*#__PURE__*/\nrequire(\"./reduce\");\n/**\n * Returns a function, `fn`, which encapsulates `if/else, if/else, ...` logic.\n * `R.cond` takes a list of [predicate, transformer] pairs. All of the arguments\n * to `fn` are applied to each of the predicates in turn until one returns a\n * \"truthy\" value, at which point `fn` returns the result of applying its\n * arguments to the corresponding transformer. If none of the predicates\n * matches, `fn` returns undefined.\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category Logic\n * @sig [[(*... -> Boolean),(*... -> *)]] -> (*... -> *)\n * @param {Array} pairs A list of [predicate, transformer]\n * @return {Function}\n * @see R.ifElse, R.unless, R.when\n * @example\n *\n *      const fn = R.cond([\n *        [R.equals(0),   R.always('water freezes at 0°C')],\n *        [R.equals(100), R.always('water boils at 100°C')],\n *        [R.T,           temp => 'nothing special happens at ' + temp + '°C']\n *      ]);\n *      fn(0); //=> 'water freezes at 0°C'\n *      fn(50); //=> 'nothing special happens at 50°C'\n *      fn(100); //=> 'water boils at 100°C'\n */\n\n\nvar cond =\n/*#__PURE__*/\n_curry1(function cond(pairs) {\n  var arity = reduce(max, 0, map(function (pair) {\n    return pair[0].length;\n  }, pairs));\n  return _arity(arity, function () {\n    var idx = 0;\n\n    while (idx < pairs.length) {\n      if (pairs[idx][0].apply(this, arguments)) {\n        return pairs[idx][1].apply(this, arguments);\n      }\n\n      idx += 1;\n    }\n  });\n});\n\nmodule.exports = cond;","var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n/**\n * Returns `true` if the first argument is less than or equal to the second;\n * `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> Boolean\n * @param {Number} a\n * @param {Number} b\n * @return {Boolean}\n * @see R.gte\n * @example\n *\n *      R.lte(2, 1); //=> false\n *      R.lte(2, 2); //=> true\n *      R.lte(2, 3); //=> true\n *      R.lte('a', 'z'); //=> true\n *      R.lte('z', 'a'); //=> false\n */\n\n\nvar lte =\n/*#__PURE__*/\n_curry2(function lte(a, b) {\n  return a <= b;\n});\n\nmodule.exports = lte;","/**\n * A function that always returns `true`. Any passed in parameters are ignored.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Function\n * @sig * -> Boolean\n * @param {*}\n * @return {Boolean}\n * @see R.F\n * @example\n *\n *      R.T(); //=> true\n */\nvar T = function () {\n  return true;\n};\n\nmodule.exports = T;","var _includes =\n/*#__PURE__*/\nrequire(\"./internal/_includes\");\n\nvar _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar flip =\n/*#__PURE__*/\nrequire(\"./flip\");\n\nvar reject =\n/*#__PURE__*/\nrequire(\"./reject\");\n/**\n * Returns a new list without values in the first argument.\n * [`R.equals`](#equals) is used to determine equality.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig [a] -> [a] -> [a]\n * @param {Array} list1 The values to be removed from `list2`.\n * @param {Array} list2 The array to remove values from.\n * @return {Array} The new array without values in `list1`.\n * @see R.transduce, R.difference, R.remove\n * @example\n *\n *      R.without([1, 2], [1, 2, 1, 3, 4]); //=> [3, 4]\n */\n\n\nvar without =\n/*#__PURE__*/\n_curry2(function (xs, list) {\n  return reject(flip(_includes)(xs), list);\n});\n\nmodule.exports = without;","var _includesWith =\n/*#__PURE__*/\nrequire(\"./internal/_includesWith\");\n\nvar _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n/**\n * Returns a new list containing only one copy of each element in the original\n * list, based upon the value returned by applying the supplied predicate to\n * two list elements. Prefers the first item if two items compare equal based\n * on the predicate.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category List\n * @sig ((a, a) -> Boolean) -> [a] -> [a]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list The array to consider.\n * @return {Array} The list of unique items.\n * @example\n *\n *      const strEq = R.eqBy(String);\n *      R.uniqWith(strEq)([1, '1', 2, 1]); //=> [1, 2]\n *      R.uniqWith(strEq)([{}, {}]);       //=> [{}]\n *      R.uniqWith(strEq)([1, '1', 1]);    //=> [1]\n *      R.uniqWith(strEq)(['1', 1, 1]);    //=> ['1']\n */\n\n\nvar uniqWith =\n/*#__PURE__*/\n_curry2(function uniqWith(pred, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [];\n  var item;\n\n  while (idx < len) {\n    item = list[idx];\n\n    if (!_includesWith(pred, item, result)) {\n      result[result.length] = item;\n    }\n\n    idx += 1;\n  }\n\n  return result;\n});\n\nmodule.exports = uniqWith;","var _objectIs =\n/*#__PURE__*/\nrequire(\"./internal/_objectIs\");\n\nvar _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n/**\n * Returns true if its arguments are identical, false otherwise. Values are\n * identical if they reference the same memory. `NaN` is identical to `NaN`;\n * `0` and `-0` are not identical.\n *\n * Note this is merely a curried version of ES6 `Object.is`.\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Relation\n * @sig a -> a -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @example\n *\n *      const o = {};\n *      R.identical(o, o); //=> true\n *      R.identical(1, 1); //=> true\n *      R.identical(1, '1'); //=> false\n *      R.identical([], []); //=> false\n *      R.identical(0, -0); //=> false\n *      R.identical(NaN, NaN); //=> true\n */\n\n\nvar identical =\n/*#__PURE__*/\n_curry2(_objectIs);\n\nmodule.exports = identical;","var invoker =\n/*#__PURE__*/\nrequire(\"./invoker\");\n/**\n * The lower case version of a string.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category String\n * @sig String -> String\n * @param {String} str The string to lower case.\n * @return {String} The lower case version of `str`.\n * @see R.toUpper\n * @example\n *\n *      R.toLower('XYZ'); //=> 'xyz'\n */\n\n\nvar toLower =\n/*#__PURE__*/\ninvoker(0, 'toLowerCase');\nmodule.exports = toLower;","var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar _Set =\n/*#__PURE__*/\nrequire(\"./internal/_Set\");\n/**\n * Finds the set (i.e. no duplicates) of all elements in the first list not\n * contained in the second list. Objects and Arrays are compared in terms of\n * value equality, not reference equality.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The elements in `list1` that are not in `list2`.\n * @see R.differenceWith, R.symmetricDifference, R.symmetricDifferenceWith, R.without\n * @example\n *\n *      R.difference([1,2,3,4], [7,6,5,4,3]); //=> [1,2]\n *      R.difference([7,6,5,4,3], [1,2,3,4]); //=> [7,6,5]\n *      R.difference([{a: 1}, {b: 2}], [{a: 1}, {c: 3}]) //=> [{b: 2}]\n */\n\n\nvar difference =\n/*#__PURE__*/\n_curry2(function difference(first, second) {\n  var out = [];\n  var idx = 0;\n  var firstLen = first.length;\n  var secondLen = second.length;\n  var toFilterOut = new _Set();\n\n  for (var i = 0; i < secondLen; i += 1) {\n    toFilterOut.add(second[i]);\n  }\n\n  while (idx < firstLen) {\n    if (toFilterOut.add(first[idx])) {\n      out[out.length] = first[idx];\n    }\n\n    idx += 1;\n  }\n\n  return out;\n});\n\nmodule.exports = difference;","var _objectAssign =\n/*#__PURE__*/\nrequire(\"./internal/_objectAssign\");\n\nvar _curry1 =\n/*#__PURE__*/\nrequire(\"./internal/_curry1\");\n/**\n * Merges a list of objects together into one object.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig [{k: v}] -> {k: v}\n * @param {Array} list An array of objects\n * @return {Object} A merged object.\n * @see R.reduce\n * @example\n *\n *      R.mergeAll([{foo:1},{bar:2},{baz:3}]); //=> {foo:1,bar:2,baz:3}\n *      R.mergeAll([{foo:1},{foo:2},{bar:2}]); //=> {foo:2,bar:2}\n * @symb R.mergeAll([{ x: 1 }, { y: 2 }, { z: 3 }]) = { x: 1, y: 2, z: 3 }\n */\n\n\nvar mergeAll =\n/*#__PURE__*/\n_curry1(function mergeAll(list) {\n  return _objectAssign.apply(null, [{}].concat(list));\n});\n\nmodule.exports = mergeAll;","var _curry3 =\n/*#__PURE__*/\nrequire(\"./internal/_curry3\");\n/**\n * Makes a shallow clone of an object, setting or overriding the specified\n * property with the given value. Note that this copies and flattens prototype\n * properties onto the new object as well. All non-primitive properties are\n * copied by reference.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @sig String -> a -> {k: v} -> {k: v}\n * @param {String} prop The property name to set\n * @param {*} val The new value\n * @param {Object} obj The object to clone\n * @return {Object} A new object equivalent to the original except for the changed property.\n * @see R.dissoc, R.pick\n * @example\n *\n *      R.assoc('c', 3, {a: 1, b: 2}); //=> {a: 1, b: 2, c: 3}\n */\n\n\nvar assoc =\n/*#__PURE__*/\n_curry3(function assoc(prop, val, obj) {\n  var result = {};\n\n  for (var p in obj) {\n    result[p] = obj[p];\n  }\n\n  result[prop] = val;\n  return result;\n});\n\nmodule.exports = assoc;","var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar hasPath =\n/*#__PURE__*/\nrequire(\"./hasPath\");\n/**\n * Returns whether or not an object has an own property with the specified name\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Object\n * @sig s -> {s: x} -> Boolean\n * @param {String} prop The name of the property to check for.\n * @param {Object} obj The object to query.\n * @return {Boolean} Whether the property exists.\n * @example\n *\n *      const hasName = R.has('name');\n *      hasName({name: 'alice'});   //=> true\n *      hasName({name: 'bob'});     //=> true\n *      hasName({});                //=> false\n *\n *      const point = {x: 0, y: 0};\n *      const pointHas = R.has(R.__, point);\n *      pointHas('x');  //=> true\n *      pointHas('y');  //=> true\n *      pointHas('z');  //=> false\n */\n\n\nvar has =\n/*#__PURE__*/\n_curry2(function has(prop, obj) {\n  return hasPath([prop], obj);\n});\n\nmodule.exports = has;","var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar _dispatchable =\n/*#__PURE__*/\nrequire(\"./internal/_dispatchable\");\n\nvar _xdrop =\n/*#__PURE__*/\nrequire(\"./internal/_xdrop\");\n\nvar slice =\n/*#__PURE__*/\nrequire(\"./slice\");\n/**\n * Returns all but the first `n` elements of the given list, string, or\n * transducer/transformer (or object with a `drop` method).\n *\n * Dispatches to the `drop` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n\n * @param {*} list\n * @return {*} A copy of list without the first `n` elements\n * @see R.take, R.transduce, R.dropLast, R.dropWhile\n * @example\n *\n *      R.drop(1, ['foo', 'bar', 'baz']); //=> ['bar', 'baz']\n *      R.drop(2, ['foo', 'bar', 'baz']); //=> ['baz']\n *      R.drop(3, ['foo', 'bar', 'baz']); //=> []\n *      R.drop(4, ['foo', 'bar', 'baz']); //=> []\n *      R.drop(3, 'ramda');               //=> 'da'\n */\n\n\nvar drop =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable(['drop'], _xdrop, function drop(n, xs) {\n  return slice(Math.max(0, n), Infinity, xs);\n}));\n\nmodule.exports = drop;","var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar _dispatchable =\n/*#__PURE__*/\nrequire(\"./internal/_dispatchable\");\n\nvar _dropLast =\n/*#__PURE__*/\nrequire(\"./internal/_dropLast\");\n\nvar _xdropLast =\n/*#__PURE__*/\nrequire(\"./internal/_xdropLast\");\n/**\n * Returns a list containing all but the last `n` elements of the given `list`.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n The number of elements of `list` to skip.\n * @param {Array} list The list of elements to consider.\n * @return {Array} A copy of the list with only the first `list.length - n` elements\n * @see R.takeLast, R.drop, R.dropWhile, R.dropLastWhile\n * @example\n *\n *      R.dropLast(1, ['foo', 'bar', 'baz']); //=> ['foo', 'bar']\n *      R.dropLast(2, ['foo', 'bar', 'baz']); //=> ['foo']\n *      R.dropLast(3, ['foo', 'bar', 'baz']); //=> []\n *      R.dropLast(4, ['foo', 'bar', 'baz']); //=> []\n *      R.dropLast(3, 'ramda');               //=> 'ra'\n */\n\n\nvar dropLast =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable([], _xdropLast, _dropLast));\n\nmodule.exports = dropLast;","var curry =\n/*#__PURE__*/\nrequire(\"./curry\");\n/**\n * Returns the result of calling its first argument with the remaining\n * arguments. This is occasionally useful as a converging function for\n * [`R.converge`](#converge): the first branch can produce a function while the\n * remaining branches produce values to be passed to that function as its\n * arguments.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Function\n * @sig (*... -> a),*... -> a\n * @param {Function} fn The function to apply to the remaining arguments.\n * @param {...*} args Any number of positional arguments.\n * @return {*}\n * @see R.apply\n * @example\n *\n *      R.call(R.add, 1, 2); //=> 3\n *\n *      const indentN = R.pipe(R.repeat(' '),\n *                           R.join(''),\n *                           R.replace(/^(?!$)/gm));\n *\n *      const format = R.converge(R.call, [\n *                                  R.pipe(R.prop('indent'), indentN),\n *                                  R.prop('value')\n *                              ]);\n *\n *      format({indent: 2, value: 'foo\\nbar\\nbaz\\n'}); //=> '  foo\\n  bar\\n  baz\\n'\n * @symb R.call(f, a, b) = f(a, b)\n */\n\n\nvar call =\n/*#__PURE__*/\ncurry(function call(fn) {\n  return fn.apply(this, Array.prototype.slice.call(arguments, 1));\n});\nmodule.exports = call;","var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar _dispatchable =\n/*#__PURE__*/\nrequire(\"./internal/_dispatchable\");\n\nvar _xfind =\n/*#__PURE__*/\nrequire(\"./internal/_xfind\");\n/**\n * Returns the first element of the list which matches the predicate, or\n * `undefined` if no element matches.\n *\n * Dispatches to the `find` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> a | undefined\n * @param {Function} fn The predicate function used to determine if the element is the\n *        desired one.\n * @param {Array} list The array to consider.\n * @return {Object} The element found, or `undefined`.\n * @see R.transduce\n * @example\n *\n *      const xs = [{a: 1}, {a: 2}, {a: 3}];\n *      R.find(R.propEq('a', 2))(xs); //=> {a: 2}\n *      R.find(R.propEq('a', 4))(xs); //=> undefined\n */\n\n\nvar find =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable(['find'], _xfind, function find(fn, list) {\n  var idx = 0;\n  var len = list.length;\n\n  while (idx < len) {\n    if (fn(list[idx])) {\n      return list[idx];\n    }\n\n    idx += 1;\n  }\n}));\n\nmodule.exports = find;","module.exports = __WEBPACK_EXTERNAL_MODULE__98__;","module.exports = require(\"events\");","var _arity =\n/*#__PURE__*/\nrequire(\"./internal/_arity\");\n\nvar _curry1 =\n/*#__PURE__*/\nrequire(\"./internal/_curry1\");\n/**\n * Accepts a function `fn` and returns a function that guards invocation of\n * `fn` such that `fn` can only ever be called once, no matter how many times\n * the returned function is invoked. The first value calculated is returned in\n * subsequent invocations.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (a... -> b) -> (a... -> b)\n * @param {Function} fn The function to wrap in a call-only-once wrapper.\n * @return {Function} The wrapped function.\n * @example\n *\n *      const addOneOnce = R.once(x => x + 1);\n *      addOneOnce(10); //=> 11\n *      addOneOnce(addOneOnce(50)); //=> 11\n */\n\n\nvar once =\n/*#__PURE__*/\n_curry1(function once(fn) {\n  var called = false;\n  var result;\n  return _arity(fn.length, function () {\n    if (called) {\n      return result;\n    }\n\n    called = true;\n    result = fn.apply(this, arguments);\n    return result;\n  });\n});\n\nmodule.exports = once;","var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n/**\n * Returns a partial copy of an object containing only the keys that satisfy\n * the supplied predicate.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @sig ((v, k) -> Boolean) -> {k: v} -> {k: v}\n * @param {Function} pred A predicate to determine whether or not a key\n *        should be included on the output object.\n * @param {Object} obj The object to copy from\n * @return {Object} A new object with only properties that satisfy `pred`\n *         on it.\n * @see R.pick, R.filter\n * @example\n *\n *      const isUpperCase = (val, key) => key.toUpperCase() === key;\n *      R.pickBy(isUpperCase, {a: 1, b: 2, A: 3, B: 4}); //=> {A: 3, B: 4}\n */\n\n\nvar pickBy =\n/*#__PURE__*/\n_curry2(function pickBy(test, obj) {\n  var result = {};\n\n  for (var prop in obj) {\n    if (test(obj[prop], prop, obj)) {\n      result[prop] = obj[prop];\n    }\n  }\n\n  return result;\n});\n\nmodule.exports = pickBy;","module.exports = __WEBPACK_EXTERNAL_MODULE__102__;","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","function _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit;","function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nmodule.exports = _arrayWithoutHoles;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nmodule.exports = _nonIterableSpread;","function _isTransformer(obj) {\n  return obj != null && typeof obj['@@transducer/step'] === 'function';\n}\n\nmodule.exports = _isTransformer;","var XWrap =\n/*#__PURE__*/\nfunction () {\n  function XWrap(fn) {\n    this.f = fn;\n  }\n\n  XWrap.prototype['@@transducer/init'] = function () {\n    throw new Error('init not implemented on XWrap');\n  };\n\n  XWrap.prototype['@@transducer/result'] = function (acc) {\n    return acc;\n  };\n\n  XWrap.prototype['@@transducer/step'] = function (acc, x) {\n    return this.f(acc, x);\n  };\n\n  return XWrap;\n}();\n\nfunction _xwrap(fn) {\n  return new XWrap(fn);\n}\n\nmodule.exports = _xwrap;","var _arity =\n/*#__PURE__*/\nrequire(\"./internal/_arity\");\n\nvar _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n/**\n * Creates a function that is bound to a context.\n * Note: `R.bind` does not provide the additional argument-binding capabilities of\n * [Function.prototype.bind](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind).\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category Function\n * @category Object\n * @sig (* -> *) -> {*} -> (* -> *)\n * @param {Function} fn The function to bind to context\n * @param {Object} thisObj The context to bind `fn` to\n * @return {Function} A function that will execute in the context of `thisObj`.\n * @see R.partial\n * @example\n *\n *      const log = R.bind(console.log, console);\n *      R.pipe(R.assoc('a', 2), R.tap(log), R.assoc('a', 3))({a: 1}); //=> {a: 3}\n *      // logs {a: 2}\n * @symb R.bind(f, o)(a, b) = f.call(o, a, b)\n */\n\n\nvar bind =\n/*#__PURE__*/\n_curry2(function bind(fn, thisObj) {\n  return _arity(fn.length, function () {\n    return fn.apply(thisObj, arguments);\n  });\n});\n\nmodule.exports = bind;","var _curry2 =\n/*#__PURE__*/\nrequire(\"./_curry2\");\n\nvar _xfBase =\n/*#__PURE__*/\nrequire(\"./_xfBase\");\n\nvar XMap =\n/*#__PURE__*/\nfunction () {\n  function XMap(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n\n  XMap.prototype['@@transducer/init'] = _xfBase.init;\n  XMap.prototype['@@transducer/result'] = _xfBase.result;\n\n  XMap.prototype['@@transducer/step'] = function (result, input) {\n    return this.xf['@@transducer/step'](result, this.f(input));\n  };\n\n  return XMap;\n}();\n\nvar _xmap =\n/*#__PURE__*/\n_curry2(function _xmap(f, xf) {\n  return new XMap(f, xf);\n});\n\nmodule.exports = _xmap;","var _has =\n/*#__PURE__*/\nrequire(\"./_has\");\n\nvar toString = Object.prototype.toString;\n\nvar _isArguments =\n/*#__PURE__*/\nfunction () {\n  return toString.call(arguments) === '[object Arguments]' ? function _isArguments(x) {\n    return toString.call(x) === '[object Arguments]';\n  } : function _isArguments(x) {\n    return _has('callee', x);\n  };\n}();\n\nmodule.exports = _isArguments;","var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n/**\n * Returns the larger of its two arguments.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> a\n * @param {*} a\n * @param {*} b\n * @return {*}\n * @see R.maxBy, R.min\n * @example\n *\n *      R.max(789, 123); //=> 789\n *      R.max('a', 'b'); //=> 'b'\n */\n\n\nvar max =\n/*#__PURE__*/\n_curry2(function max(a, b) {\n  return b > a ? b : a;\n});\n\nmodule.exports = max;","var equals =\n/*#__PURE__*/\nrequire(\"../equals\");\n\nfunction _indexOf(list, a, idx) {\n  var inf, item; // Array.prototype.indexOf doesn't exist below IE9\n\n  if (typeof list.indexOf === 'function') {\n    switch (typeof a) {\n      case 'number':\n        if (a === 0) {\n          // manually crawl the list to distinguish between +0 and -0\n          inf = 1 / a;\n\n          while (idx < list.length) {\n            item = list[idx];\n\n            if (item === 0 && 1 / item === inf) {\n              return idx;\n            }\n\n            idx += 1;\n          }\n\n          return -1;\n        } else if (a !== a) {\n          // NaN\n          while (idx < list.length) {\n            item = list[idx];\n\n            if (typeof item === 'number' && item !== item) {\n              return idx;\n            }\n\n            idx += 1;\n          }\n\n          return -1;\n        } // non-zero numbers can utilise Set\n\n\n        return list.indexOf(a, idx);\n      // all these types can utilise Set\n\n      case 'string':\n      case 'boolean':\n      case 'function':\n      case 'undefined':\n        return list.indexOf(a, idx);\n\n      case 'object':\n        if (a === null) {\n          // null can utilise Set\n          return list.indexOf(a, idx);\n        }\n\n    }\n  } // anything else not covered above, defer to R.equals\n\n\n  while (idx < list.length) {\n    if (equals(list[idx], a)) {\n      return idx;\n    }\n\n    idx += 1;\n  }\n\n  return -1;\n}\n\nmodule.exports = _indexOf;","var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar _equals =\n/*#__PURE__*/\nrequire(\"./internal/_equals\");\n/**\n * Returns `true` if its arguments are equivalent, `false` otherwise. Handles\n * cyclical data structures.\n *\n * Dispatches symmetrically to the `equals` methods of both arguments, if\n * present.\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Relation\n * @sig a -> b -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @example\n *\n *      R.equals(1, 1); //=> true\n *      R.equals(1, '1'); //=> false\n *      R.equals([1, 2, 3], [1, 2, 3]); //=> true\n *\n *      const a = {}; a.v = a;\n *      const b = {}; b.v = b;\n *      R.equals(a, b); //=> true\n */\n\n\nvar equals =\n/*#__PURE__*/\n_curry2(function equals(a, b) {\n  return _equals(a, b, [], []);\n});\n\nmodule.exports = equals;","var _arrayFromIterator =\n/*#__PURE__*/\nrequire(\"./_arrayFromIterator\");\n\nvar _includesWith =\n/*#__PURE__*/\nrequire(\"./_includesWith\");\n\nvar _functionName =\n/*#__PURE__*/\nrequire(\"./_functionName\");\n\nvar _has =\n/*#__PURE__*/\nrequire(\"./_has\");\n\nvar _objectIs =\n/*#__PURE__*/\nrequire(\"./_objectIs\");\n\nvar keys =\n/*#__PURE__*/\nrequire(\"../keys\");\n\nvar type =\n/*#__PURE__*/\nrequire(\"../type\");\n/**\n * private _uniqContentEquals function.\n * That function is checking equality of 2 iterator contents with 2 assumptions\n * - iterators lengths are the same\n * - iterators values are unique\n *\n * false-positive result will be returned for comparision of, e.g.\n * - [1,2,3] and [1,2,3,4]\n * - [1,1,1] and [1,2,3]\n * */\n\n\nfunction _uniqContentEquals(aIterator, bIterator, stackA, stackB) {\n  var a = _arrayFromIterator(aIterator);\n\n  var b = _arrayFromIterator(bIterator);\n\n  function eq(_a, _b) {\n    return _equals(_a, _b, stackA.slice(), stackB.slice());\n  } // if *a* array contains any element that is not included in *b*\n\n\n  return !_includesWith(function (b, aItem) {\n    return !_includesWith(eq, aItem, b);\n  }, b, a);\n}\n\nfunction _equals(a, b, stackA, stackB) {\n  if (_objectIs(a, b)) {\n    return true;\n  }\n\n  var typeA = type(a);\n\n  if (typeA !== type(b)) {\n    return false;\n  }\n\n  if (a == null || b == null) {\n    return false;\n  }\n\n  if (typeof a['fantasy-land/equals'] === 'function' || typeof b['fantasy-land/equals'] === 'function') {\n    return typeof a['fantasy-land/equals'] === 'function' && a['fantasy-land/equals'](b) && typeof b['fantasy-land/equals'] === 'function' && b['fantasy-land/equals'](a);\n  }\n\n  if (typeof a.equals === 'function' || typeof b.equals === 'function') {\n    return typeof a.equals === 'function' && a.equals(b) && typeof b.equals === 'function' && b.equals(a);\n  }\n\n  switch (typeA) {\n    case 'Arguments':\n    case 'Array':\n    case 'Object':\n      if (typeof a.constructor === 'function' && _functionName(a.constructor) === 'Promise') {\n        return a === b;\n      }\n\n      break;\n\n    case 'Boolean':\n    case 'Number':\n    case 'String':\n      if (!(typeof a === typeof b && _objectIs(a.valueOf(), b.valueOf()))) {\n        return false;\n      }\n\n      break;\n\n    case 'Date':\n      if (!_objectIs(a.valueOf(), b.valueOf())) {\n        return false;\n      }\n\n      break;\n\n    case 'Error':\n      return a.name === b.name && a.message === b.message;\n\n    case 'RegExp':\n      if (!(a.source === b.source && a.global === b.global && a.ignoreCase === b.ignoreCase && a.multiline === b.multiline && a.sticky === b.sticky && a.unicode === b.unicode)) {\n        return false;\n      }\n\n      break;\n  }\n\n  var idx = stackA.length - 1;\n\n  while (idx >= 0) {\n    if (stackA[idx] === a) {\n      return stackB[idx] === b;\n    }\n\n    idx -= 1;\n  }\n\n  switch (typeA) {\n    case 'Map':\n      if (a.size !== b.size) {\n        return false;\n      }\n\n      return _uniqContentEquals(a.entries(), b.entries(), stackA.concat([a]), stackB.concat([b]));\n\n    case 'Set':\n      if (a.size !== b.size) {\n        return false;\n      }\n\n      return _uniqContentEquals(a.values(), b.values(), stackA.concat([a]), stackB.concat([b]));\n\n    case 'Arguments':\n    case 'Array':\n    case 'Object':\n    case 'Boolean':\n    case 'Number':\n    case 'String':\n    case 'Date':\n    case 'Error':\n    case 'RegExp':\n    case 'Int8Array':\n    case 'Uint8Array':\n    case 'Uint8ClampedArray':\n    case 'Int16Array':\n    case 'Uint16Array':\n    case 'Int32Array':\n    case 'Uint32Array':\n    case 'Float32Array':\n    case 'Float64Array':\n    case 'ArrayBuffer':\n      break;\n\n    default:\n      // Values of other types are only equal if identical.\n      return false;\n  }\n\n  var keysA = keys(a);\n\n  if (keysA.length !== keys(b).length) {\n    return false;\n  }\n\n  var extendedStackA = stackA.concat([a]);\n  var extendedStackB = stackB.concat([b]);\n  idx = keysA.length - 1;\n\n  while (idx >= 0) {\n    var key = keysA[idx];\n\n    if (!(_has(key, b) && _equals(b[key], a[key], extendedStackA, extendedStackB))) {\n      return false;\n    }\n\n    idx -= 1;\n  }\n\n  return true;\n}\n\nmodule.exports = _equals;","function _arrayFromIterator(iter) {\n  var list = [];\n  var next;\n\n  while (!(next = iter.next()).done) {\n    list.push(next.value);\n  }\n\n  return list;\n}\n\nmodule.exports = _arrayFromIterator;","function _functionName(f) {\n  // String(x => x) evaluates to \"x => x\", so the pattern may not match.\n  var match = String(f).match(/^function (\\w*)/);\n  return match == null ? '' : match[1];\n}\n\nmodule.exports = _functionName;","var _includes =\n/*#__PURE__*/\nrequire(\"./_includes\");\n\nvar _map =\n/*#__PURE__*/\nrequire(\"./_map\");\n\nvar _quote =\n/*#__PURE__*/\nrequire(\"./_quote\");\n\nvar _toISOString =\n/*#__PURE__*/\nrequire(\"./_toISOString\");\n\nvar keys =\n/*#__PURE__*/\nrequire(\"../keys\");\n\nvar reject =\n/*#__PURE__*/\nrequire(\"../reject\");\n\nfunction _toString(x, seen) {\n  var recur = function recur(y) {\n    var xs = seen.concat([x]);\n    return _includes(y, xs) ? '<Circular>' : _toString(y, xs);\n  }; //  mapPairs :: (Object, [String]) -> [String]\n\n\n  var mapPairs = function (obj, keys) {\n    return _map(function (k) {\n      return _quote(k) + ': ' + recur(obj[k]);\n    }, keys.slice().sort());\n  };\n\n  switch (Object.prototype.toString.call(x)) {\n    case '[object Arguments]':\n      return '(function() { return arguments; }(' + _map(recur, x).join(', ') + '))';\n\n    case '[object Array]':\n      return '[' + _map(recur, x).concat(mapPairs(x, reject(function (k) {\n        return /^\\d+$/.test(k);\n      }, keys(x)))).join(', ') + ']';\n\n    case '[object Boolean]':\n      return typeof x === 'object' ? 'new Boolean(' + recur(x.valueOf()) + ')' : x.toString();\n\n    case '[object Date]':\n      return 'new Date(' + (isNaN(x.valueOf()) ? recur(NaN) : _quote(_toISOString(x))) + ')';\n\n    case '[object Null]':\n      return 'null';\n\n    case '[object Number]':\n      return typeof x === 'object' ? 'new Number(' + recur(x.valueOf()) + ')' : 1 / x === -Infinity ? '-0' : x.toString(10);\n\n    case '[object String]':\n      return typeof x === 'object' ? 'new String(' + recur(x.valueOf()) + ')' : _quote(x);\n\n    case '[object Undefined]':\n      return 'undefined';\n\n    default:\n      if (typeof x.toString === 'function') {\n        var repr = x.toString();\n\n        if (repr !== '[object Object]') {\n          return repr;\n        }\n      }\n\n      return '{' + mapPairs(x, keys(x)).join(', ') + '}';\n  }\n}\n\nmodule.exports = _toString;","function _quote(s) {\n  var escaped = s.replace(/\\\\/g, '\\\\\\\\').replace(/[\\b]/g, '\\\\b') // \\b matches word boundary; [\\b] matches backspace\n  .replace(/\\f/g, '\\\\f').replace(/\\n/g, '\\\\n').replace(/\\r/g, '\\\\r').replace(/\\t/g, '\\\\t').replace(/\\v/g, '\\\\v').replace(/\\0/g, '\\\\0');\n  return '\"' + escaped.replace(/\"/g, '\\\\\"') + '\"';\n}\n\nmodule.exports = _quote;","/**\n * Polyfill from <https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString>.\n */\nvar pad = function pad(n) {\n  return (n < 10 ? '0' : '') + n;\n};\n\nvar _toISOString = typeof Date.prototype.toISOString === 'function' ? function _toISOString(d) {\n  return d.toISOString();\n} : function _toISOString(d) {\n  return d.getUTCFullYear() + '-' + pad(d.getUTCMonth() + 1) + '-' + pad(d.getUTCDate()) + 'T' + pad(d.getUTCHours()) + ':' + pad(d.getUTCMinutes()) + ':' + pad(d.getUTCSeconds()) + '.' + (d.getUTCMilliseconds() / 1000).toFixed(3).slice(2, 5) + 'Z';\n};\n\nmodule.exports = _toISOString;","function _complement(f) {\n  return function () {\n    return !f.apply(this, arguments);\n  };\n}\n\nmodule.exports = _complement;","var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar _dispatchable =\n/*#__PURE__*/\nrequire(\"./internal/_dispatchable\");\n\nvar _filter =\n/*#__PURE__*/\nrequire(\"./internal/_filter\");\n\nvar _isObject =\n/*#__PURE__*/\nrequire(\"./internal/_isObject\");\n\nvar _reduce =\n/*#__PURE__*/\nrequire(\"./internal/_reduce\");\n\nvar _xfilter =\n/*#__PURE__*/\nrequire(\"./internal/_xfilter\");\n\nvar keys =\n/*#__PURE__*/\nrequire(\"./keys\");\n/**\n * Takes a predicate and a `Filterable`, and returns a new filterable of the\n * same type containing the members of the given filterable which satisfy the\n * given predicate. Filterable objects include plain objects or any object\n * that has a filter method such as `Array`.\n *\n * Dispatches to the `filter` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> f a\n * @param {Function} pred\n * @param {Array} filterable\n * @return {Array} Filterable\n * @see R.reject, R.transduce, R.addIndex\n * @example\n *\n *      const isEven = n => n % 2 === 0;\n *\n *      R.filter(isEven, [1, 2, 3, 4]); //=> [2, 4]\n *\n *      R.filter(isEven, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\n */\n\n\nvar filter =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable(['filter'], _xfilter, function (pred, filterable) {\n  return _isObject(filterable) ? _reduce(function (acc, key) {\n    if (pred(filterable[key])) {\n      acc[key] = filterable[key];\n    }\n\n    return acc;\n  }, {}, keys(filterable)) : // else\n  _filter(pred, filterable);\n}));\n\nmodule.exports = filter;","function _filter(fn, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [];\n\n  while (idx < len) {\n    if (fn(list[idx])) {\n      result[result.length] = list[idx];\n    }\n\n    idx += 1;\n  }\n\n  return result;\n}\n\nmodule.exports = _filter;","var _curry2 =\n/*#__PURE__*/\nrequire(\"./_curry2\");\n\nvar _xfBase =\n/*#__PURE__*/\nrequire(\"./_xfBase\");\n\nvar XFilter =\n/*#__PURE__*/\nfunction () {\n  function XFilter(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n\n  XFilter.prototype['@@transducer/init'] = _xfBase.init;\n  XFilter.prototype['@@transducer/result'] = _xfBase.result;\n\n  XFilter.prototype['@@transducer/step'] = function (result, input) {\n    return this.f(input) ? this.xf['@@transducer/step'](result, input) : result;\n  };\n\n  return XFilter;\n}();\n\nvar _xfilter =\n/*#__PURE__*/\n_curry2(function _xfilter(f, xf) {\n  return new XFilter(f, xf);\n});\n\nmodule.exports = _xfilter;","var _isArrayLike =\n/*#__PURE__*/\nrequire(\"./_isArrayLike\");\n/**\n * `_makeFlat` is a helper function that returns a one-level or fully recursive\n * function based on the flag passed in.\n *\n * @private\n */\n\n\nfunction _makeFlat(recursive) {\n  return function flatt(list) {\n    var value, jlen, j;\n    var result = [];\n    var idx = 0;\n    var ilen = list.length;\n\n    while (idx < ilen) {\n      if (_isArrayLike(list[idx])) {\n        value = recursive ? flatt(list[idx]) : list[idx];\n        j = 0;\n        jlen = value.length;\n\n        while (j < jlen) {\n          result[result.length] = value[j];\n          j += 1;\n        }\n      } else {\n        result[result.length] = list[idx];\n      }\n\n      idx += 1;\n    }\n\n    return result;\n  };\n}\n\nmodule.exports = _makeFlat;","var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar _isInteger =\n/*#__PURE__*/\nrequire(\"./internal/_isInteger\");\n\nvar nth =\n/*#__PURE__*/\nrequire(\"./nth\");\n/**\n * Retrieves the values at given paths of an object.\n *\n * @func\n * @memberOf R\n * @since v0.27.0\n * @category Object\n * @typedefn Idx = [String | Int]\n * @sig [Idx] -> {a} -> [a | Undefined]\n * @param {Array} pathsArray The array of paths to be fetched.\n * @param {Object} obj The object to retrieve the nested properties from.\n * @return {Array} A list consisting of values at paths specified by \"pathsArray\".\n * @see R.path\n * @example\n *\n *      R.paths([['a', 'b'], ['p', 0, 'q']], {a: {b: 2}, p: [{q: 3}]}); //=> [2, 3]\n *      R.paths([['a', 'b'], ['p', 'r']], {a: {b: 2}, p: [{q: 3}]}); //=> [2, undefined]\n */\n\n\nvar paths =\n/*#__PURE__*/\n_curry2(function paths(pathsArray, obj) {\n  return pathsArray.map(function (paths) {\n    var val = obj;\n    var idx = 0;\n    var p;\n\n    while (idx < paths.length) {\n      if (val == null) {\n        return;\n      }\n\n      p = paths[idx];\n      val = _isInteger(p) ? nth(p, val) : val[p];\n      idx += 1;\n    }\n\n    return val;\n  });\n});\n\nmodule.exports = paths;","/**\n * Determine if the passed argument is an integer.\n *\n * @private\n * @param {*} n\n * @category Type\n * @return {Boolean}\n */\nmodule.exports = Number.isInteger || function _isInteger(n) {\n  return n << 0 === n;\n};","function _isFunction(x) {\n  var type = Object.prototype.toString.call(x);\n  return type === '[object Function]' || type === '[object AsyncFunction]' || type === '[object GeneratorFunction]' || type === '[object AsyncGeneratorFunction]';\n}\n\nmodule.exports = _isFunction;","var _includes =\n/*#__PURE__*/\nrequire(\"./_includes\");\n\nvar _Set =\n/*#__PURE__*/\nfunction () {\n  function _Set() {\n    /* globals Set */\n    this._nativeSet = typeof Set === 'function' ? new Set() : null;\n    this._items = {};\n  }\n\n  // until we figure out why jsdoc chokes on this\n  // @param item The item to add to the Set\n  // @returns {boolean} true if the item did not exist prior, otherwise false\n  //\n  _Set.prototype.add = function (item) {\n    return !hasOrAdd(item, true, this);\n  }; //\n  // @param item The item to check for existence in the Set\n  // @returns {boolean} true if the item exists in the Set, otherwise false\n  //\n\n\n  _Set.prototype.has = function (item) {\n    return hasOrAdd(item, false, this);\n  }; //\n  // Combines the logic for checking whether an item is a member of the set and\n  // for adding a new item to the set.\n  //\n  // @param item       The item to check or add to the Set instance.\n  // @param shouldAdd  If true, the item will be added to the set if it doesn't\n  //                   already exist.\n  // @param set        The set instance to check or add to.\n  // @return {boolean} true if the item already existed, otherwise false.\n  //\n\n\n  return _Set;\n}();\n\nfunction hasOrAdd(item, shouldAdd, set) {\n  var type = typeof item;\n  var prevSize, newSize;\n\n  switch (type) {\n    case 'string':\n    case 'number':\n      // distinguish between +0 and -0\n      if (item === 0 && 1 / item === -Infinity) {\n        if (set._items['-0']) {\n          return true;\n        } else {\n          if (shouldAdd) {\n            set._items['-0'] = true;\n          }\n\n          return false;\n        }\n      } // these types can all utilise the native Set\n\n\n      if (set._nativeSet !== null) {\n        if (shouldAdd) {\n          prevSize = set._nativeSet.size;\n\n          set._nativeSet.add(item);\n\n          newSize = set._nativeSet.size;\n          return newSize === prevSize;\n        } else {\n          return set._nativeSet.has(item);\n        }\n      } else {\n        if (!(type in set._items)) {\n          if (shouldAdd) {\n            set._items[type] = {};\n            set._items[type][item] = true;\n          }\n\n          return false;\n        } else if (item in set._items[type]) {\n          return true;\n        } else {\n          if (shouldAdd) {\n            set._items[type][item] = true;\n          }\n\n          return false;\n        }\n      }\n\n    case 'boolean':\n      // set._items['boolean'] holds a two element array\n      // representing [ falseExists, trueExists ]\n      if (type in set._items) {\n        var bIdx = item ? 1 : 0;\n\n        if (set._items[type][bIdx]) {\n          return true;\n        } else {\n          if (shouldAdd) {\n            set._items[type][bIdx] = true;\n          }\n\n          return false;\n        }\n      } else {\n        if (shouldAdd) {\n          set._items[type] = item ? [false, true] : [true, false];\n        }\n\n        return false;\n      }\n\n    case 'function':\n      // compare functions for reference equality\n      if (set._nativeSet !== null) {\n        if (shouldAdd) {\n          prevSize = set._nativeSet.size;\n\n          set._nativeSet.add(item);\n\n          newSize = set._nativeSet.size;\n          return newSize === prevSize;\n        } else {\n          return set._nativeSet.has(item);\n        }\n      } else {\n        if (!(type in set._items)) {\n          if (shouldAdd) {\n            set._items[type] = [item];\n          }\n\n          return false;\n        }\n\n        if (!_includes(item, set._items[type])) {\n          if (shouldAdd) {\n            set._items[type].push(item);\n          }\n\n          return false;\n        }\n\n        return true;\n      }\n\n    case 'undefined':\n      if (set._items[type]) {\n        return true;\n      } else {\n        if (shouldAdd) {\n          set._items[type] = true;\n        }\n\n        return false;\n      }\n\n    case 'object':\n      if (item === null) {\n        if (!set._items['null']) {\n          if (shouldAdd) {\n            set._items['null'] = true;\n          }\n\n          return false;\n        }\n\n        return true;\n      }\n\n    /* falls through */\n\n    default:\n      // reduce the search size of heterogeneous sets by creating buckets\n      // for each type.\n      type = Object.prototype.toString.call(item);\n\n      if (!(type in set._items)) {\n        if (shouldAdd) {\n          set._items[type] = [item];\n        }\n\n        return false;\n      } // scan through all previously applied items\n\n\n      if (!_includes(item, set._items[type])) {\n        if (shouldAdd) {\n          set._items[type].push(item);\n        }\n\n        return false;\n      }\n\n      return true;\n  }\n} // A simple Set type that honours R.equals semantics\n\n\nmodule.exports = _Set;","var _curry3 =\n/*#__PURE__*/\nrequire(\"./internal/_curry3\");\n\nvar _isObject =\n/*#__PURE__*/\nrequire(\"./internal/_isObject\");\n\nvar mergeWithKey =\n/*#__PURE__*/\nrequire(\"./mergeWithKey\");\n/**\n * Creates a new object with the own properties of the two provided objects.\n * If a key exists in both objects:\n * - and both associated values are also objects then the values will be\n *   recursively merged.\n * - otherwise the provided function is applied to the key and associated values\n *   using the resulting value as the new value associated with the key.\n * If a key only exists in one object, the value will be associated with the key\n * of the resulting object.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Object\n * @sig ((String, a, a) -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} lObj\n * @param {Object} rObj\n * @return {Object}\n * @see R.mergeWithKey, R.mergeDeepWith\n * @example\n *\n *      let concatValues = (k, l, r) => k == 'values' ? R.concat(l, r) : r\n *      R.mergeDeepWithKey(concatValues,\n *                         { a: true, c: { thing: 'foo', values: [10, 20] }},\n *                         { b: true, c: { thing: 'bar', values: [15, 35] }});\n *      //=> { a: true, b: true, c: { thing: 'bar', values: [10, 20, 15, 35] }}\n */\n\n\nvar mergeDeepWithKey =\n/*#__PURE__*/\n_curry3(function mergeDeepWithKey(fn, lObj, rObj) {\n  return mergeWithKey(function (k, lVal, rVal) {\n    if (_isObject(lVal) && _isObject(rVal)) {\n      return mergeDeepWithKey(fn, lVal, rVal);\n    } else {\n      return fn(k, lVal, rVal);\n    }\n  }, lObj, rObj);\n});\n\nmodule.exports = mergeDeepWithKey;","var _curry3 =\n/*#__PURE__*/\nrequire(\"./internal/_curry3\");\n\nvar _has =\n/*#__PURE__*/\nrequire(\"./internal/_has\");\n/**\n * Creates a new object with the own properties of the two provided objects. If\n * a key exists in both objects, the provided function is applied to the key\n * and the values associated with the key in each object, with the result being\n * used as the value associated with the key in the returned object.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Object\n * @sig ((String, a, a) -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.mergeDeepWithKey, R.merge, R.mergeWith\n * @example\n *\n *      let concatValues = (k, l, r) => k == 'values' ? R.concat(l, r) : r\n *      R.mergeWithKey(concatValues,\n *                     { a: true, thing: 'foo', values: [10, 20] },\n *                     { b: true, thing: 'bar', values: [15, 35] });\n *      //=> { a: true, b: true, thing: 'bar', values: [10, 20, 15, 35] }\n * @symb R.mergeWithKey(f, { x: 1, y: 2 }, { y: 5, z: 3 }) = { x: 1, y: f('y', 2, 5), z: 3 }\n */\n\n\nvar mergeWithKey =\n/*#__PURE__*/\n_curry3(function mergeWithKey(fn, l, r) {\n  var result = {};\n  var k;\n\n  for (k in l) {\n    if (_has(k, l)) {\n      result[k] = _has(k, r) ? fn(k, l[k], r[k]) : l[k];\n    }\n  }\n\n  for (k in r) {\n    if (_has(k, r) && !_has(k, result)) {\n      result[k] = r[k];\n    }\n  }\n\n  return result;\n});\n\nmodule.exports = mergeWithKey;","var _cloneRegExp =\n/*#__PURE__*/\nrequire(\"./_cloneRegExp\");\n\nvar type =\n/*#__PURE__*/\nrequire(\"../type\");\n/**\n * Copies an object.\n *\n * @private\n * @param {*} value The value to be copied\n * @param {Array} refFrom Array containing the source references\n * @param {Array} refTo Array containing the copied source references\n * @param {Boolean} deep Whether or not to perform deep cloning.\n * @return {*} The copied value.\n */\n\n\nfunction _clone(value, refFrom, refTo, deep) {\n  var copy = function copy(copiedValue) {\n    var len = refFrom.length;\n    var idx = 0;\n\n    while (idx < len) {\n      if (value === refFrom[idx]) {\n        return refTo[idx];\n      }\n\n      idx += 1;\n    }\n\n    refFrom[idx + 1] = value;\n    refTo[idx + 1] = copiedValue;\n\n    for (var key in value) {\n      copiedValue[key] = deep ? _clone(value[key], refFrom, refTo, true) : value[key];\n    }\n\n    return copiedValue;\n  };\n\n  switch (type(value)) {\n    case 'Object':\n      return copy({});\n\n    case 'Array':\n      return copy([]);\n\n    case 'Date':\n      return new Date(value.valueOf());\n\n    case 'RegExp':\n      return _cloneRegExp(value);\n\n    default:\n      return value;\n  }\n}\n\nmodule.exports = _clone;","function _cloneRegExp(pattern) {\n  return new RegExp(pattern.source, (pattern.global ? 'g' : '') + (pattern.ignoreCase ? 'i' : '') + (pattern.multiline ? 'm' : '') + (pattern.sticky ? 'y' : '') + (pattern.unicode ? 'u' : ''));\n}\n\nmodule.exports = _cloneRegExp;","var _curryN =\n/*#__PURE__*/\nrequire(\"./_curryN\");\n\nvar _has =\n/*#__PURE__*/\nrequire(\"./_has\");\n\nvar _xfBase =\n/*#__PURE__*/\nrequire(\"./_xfBase\");\n\nvar XReduceBy =\n/*#__PURE__*/\nfunction () {\n  function XReduceBy(valueFn, valueAcc, keyFn, xf) {\n    this.valueFn = valueFn;\n    this.valueAcc = valueAcc;\n    this.keyFn = keyFn;\n    this.xf = xf;\n    this.inputs = {};\n  }\n\n  XReduceBy.prototype['@@transducer/init'] = _xfBase.init;\n\n  XReduceBy.prototype['@@transducer/result'] = function (result) {\n    var key;\n\n    for (key in this.inputs) {\n      if (_has(key, this.inputs)) {\n        result = this.xf['@@transducer/step'](result, this.inputs[key]);\n\n        if (result['@@transducer/reduced']) {\n          result = result['@@transducer/value'];\n          break;\n        }\n      }\n    }\n\n    this.inputs = null;\n    return this.xf['@@transducer/result'](result);\n  };\n\n  XReduceBy.prototype['@@transducer/step'] = function (result, input) {\n    var key = this.keyFn(input);\n    this.inputs[key] = this.inputs[key] || [key, this.valueAcc];\n    this.inputs[key][1] = this.valueFn(this.inputs[key][1], input);\n    return result;\n  };\n\n  return XReduceBy;\n}();\n\nvar _xreduceBy =\n/*#__PURE__*/\n_curryN(4, [], function _xreduceBy(valueFn, valueAcc, keyFn, xf) {\n  return new XReduceBy(valueFn, valueAcc, keyFn, xf);\n});\n\nmodule.exports = _xreduceBy;","function _identity(x) {\n  return x;\n}\n\nmodule.exports = _identity;","var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar _has =\n/*#__PURE__*/\nrequire(\"./internal/_has\");\n\nvar isNil =\n/*#__PURE__*/\nrequire(\"./isNil\");\n/**\n * Returns whether or not a path exists in an object. Only the object's\n * own properties are checked.\n *\n * @func\n * @memberOf R\n * @since v0.26.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig [Idx] -> {a} -> Boolean\n * @param {Array} path The path to use.\n * @param {Object} obj The object to check the path in.\n * @return {Boolean} Whether the path exists.\n * @see R.has\n * @example\n *\n *      R.hasPath(['a', 'b'], {a: {b: 2}});         // => true\n *      R.hasPath(['a', 'b'], {a: {b: undefined}}); // => true\n *      R.hasPath(['a', 'b'], {a: {c: 2}});         // => false\n *      R.hasPath(['a', 'b'], {});                  // => false\n */\n\n\nvar hasPath =\n/*#__PURE__*/\n_curry2(function hasPath(_path, obj) {\n  if (_path.length === 0 || isNil(obj)) {\n    return false;\n  }\n\n  var val = obj;\n  var idx = 0;\n\n  while (idx < _path.length) {\n    if (!isNil(val) && _has(_path[idx], val)) {\n      val = val[_path[idx]];\n      idx += 1;\n    } else {\n      return false;\n    }\n  }\n\n  return true;\n});\n\nmodule.exports = hasPath;","var _curry2 =\n/*#__PURE__*/\nrequire(\"./_curry2\");\n\nvar _xfBase =\n/*#__PURE__*/\nrequire(\"./_xfBase\");\n\nvar XDrop =\n/*#__PURE__*/\nfunction () {\n  function XDrop(n, xf) {\n    this.xf = xf;\n    this.n = n;\n  }\n\n  XDrop.prototype['@@transducer/init'] = _xfBase.init;\n  XDrop.prototype['@@transducer/result'] = _xfBase.result;\n\n  XDrop.prototype['@@transducer/step'] = function (result, input) {\n    if (this.n > 0) {\n      this.n -= 1;\n      return result;\n    }\n\n    return this.xf['@@transducer/step'](result, input);\n  };\n\n  return XDrop;\n}();\n\nvar _xdrop =\n/*#__PURE__*/\n_curry2(function _xdrop(n, xf) {\n  return new XDrop(n, xf);\n});\n\nmodule.exports = _xdrop;","var take =\n/*#__PURE__*/\nrequire(\"../take\");\n\nfunction dropLast(n, xs) {\n  return take(n < xs.length ? xs.length - n : 0, xs);\n}\n\nmodule.exports = dropLast;","var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar _dispatchable =\n/*#__PURE__*/\nrequire(\"./internal/_dispatchable\");\n\nvar _xtake =\n/*#__PURE__*/\nrequire(\"./internal/_xtake\");\n\nvar slice =\n/*#__PURE__*/\nrequire(\"./slice\");\n/**\n * Returns the first `n` elements of the given list, string, or\n * transducer/transformer (or object with a `take` method).\n *\n * Dispatches to the `take` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n\n * @param {*} list\n * @return {*}\n * @see R.drop\n * @example\n *\n *      R.take(1, ['foo', 'bar', 'baz']); //=> ['foo']\n *      R.take(2, ['foo', 'bar', 'baz']); //=> ['foo', 'bar']\n *      R.take(3, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.take(4, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.take(3, 'ramda');               //=> 'ram'\n *\n *      const personnel = [\n *        'Dave Brubeck',\n *        'Paul Desmond',\n *        'Eugene Wright',\n *        'Joe Morello',\n *        'Gerry Mulligan',\n *        'Bob Bates',\n *        'Joe Dodge',\n *        'Ron Crotty'\n *      ];\n *\n *      const takeFive = R.take(5);\n *      takeFive(personnel);\n *      //=> ['Dave Brubeck', 'Paul Desmond', 'Eugene Wright', 'Joe Morello', 'Gerry Mulligan']\n * @symb R.take(-1, [a, b]) = [a, b]\n * @symb R.take(0, [a, b]) = []\n * @symb R.take(1, [a, b]) = [a]\n * @symb R.take(2, [a, b]) = [a, b]\n */\n\n\nvar take =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable(['take'], _xtake, function take(n, xs) {\n  return slice(0, n < 0 ? Infinity : n, xs);\n}));\n\nmodule.exports = take;","var _curry2 =\n/*#__PURE__*/\nrequire(\"./_curry2\");\n\nvar _reduced =\n/*#__PURE__*/\nrequire(\"./_reduced\");\n\nvar _xfBase =\n/*#__PURE__*/\nrequire(\"./_xfBase\");\n\nvar XTake =\n/*#__PURE__*/\nfunction () {\n  function XTake(n, xf) {\n    this.xf = xf;\n    this.n = n;\n    this.i = 0;\n  }\n\n  XTake.prototype['@@transducer/init'] = _xfBase.init;\n  XTake.prototype['@@transducer/result'] = _xfBase.result;\n\n  XTake.prototype['@@transducer/step'] = function (result, input) {\n    this.i += 1;\n    var ret = this.n === 0 ? result : this.xf['@@transducer/step'](result, input);\n    return this.n >= 0 && this.i >= this.n ? _reduced(ret) : ret;\n  };\n\n  return XTake;\n}();\n\nvar _xtake =\n/*#__PURE__*/\n_curry2(function _xtake(n, xf) {\n  return new XTake(n, xf);\n});\n\nmodule.exports = _xtake;","var _curry2 =\n/*#__PURE__*/\nrequire(\"./_curry2\");\n\nvar _xfBase =\n/*#__PURE__*/\nrequire(\"./_xfBase\");\n\nvar XDropLast =\n/*#__PURE__*/\nfunction () {\n  function XDropLast(n, xf) {\n    this.xf = xf;\n    this.pos = 0;\n    this.full = false;\n    this.acc = new Array(n);\n  }\n\n  XDropLast.prototype['@@transducer/init'] = _xfBase.init;\n\n  XDropLast.prototype['@@transducer/result'] = function (result) {\n    this.acc = null;\n    return this.xf['@@transducer/result'](result);\n  };\n\n  XDropLast.prototype['@@transducer/step'] = function (result, input) {\n    if (this.full) {\n      result = this.xf['@@transducer/step'](result, this.acc[this.pos]);\n    }\n\n    this.store(input);\n    return result;\n  };\n\n  XDropLast.prototype.store = function (input) {\n    this.acc[this.pos] = input;\n    this.pos += 1;\n\n    if (this.pos === this.acc.length) {\n      this.pos = 0;\n      this.full = true;\n    }\n  };\n\n  return XDropLast;\n}();\n\nvar _xdropLast =\n/*#__PURE__*/\n_curry2(function _xdropLast(n, xf) {\n  return new XDropLast(n, xf);\n});\n\nmodule.exports = _xdropLast;","var _curry2 =\n/*#__PURE__*/\nrequire(\"./_curry2\");\n\nvar _reduced =\n/*#__PURE__*/\nrequire(\"./_reduced\");\n\nvar _xfBase =\n/*#__PURE__*/\nrequire(\"./_xfBase\");\n\nvar XFind =\n/*#__PURE__*/\nfunction () {\n  function XFind(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.found = false;\n  }\n\n  XFind.prototype['@@transducer/init'] = _xfBase.init;\n\n  XFind.prototype['@@transducer/result'] = function (result) {\n    if (!this.found) {\n      result = this.xf['@@transducer/step'](result, void 0);\n    }\n\n    return this.xf['@@transducer/result'](result);\n  };\n\n  XFind.prototype['@@transducer/step'] = function (result, input) {\n    if (this.f(input)) {\n      this.found = true;\n      result = _reduced(this.xf['@@transducer/step'](result, input));\n    }\n\n    return result;\n  };\n\n  return XFind;\n}();\n\nvar _xfind =\n/*#__PURE__*/\n_curry2(function _xfind(f, xf) {\n  return new XFind(f, xf);\n});\n\nmodule.exports = _xfind;","module.exports = __WEBPACK_EXTERNAL_MODULE__143__;","/*\n * ISC License (ISC)\n * Copyright 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\nimport { BigNumber } from 'bignumber.js'\n\n/**\n * Bytes module\n * @module @aeternity/aepp-sdk/es/utils/bytes\n * @example import * as Crypto from '@aeternity/aepp-sdk/es/utils/bytes'\n */\n\n/**\n * Left pad the input data with 0 bytes\n * @param length to pad to\n * @param inputBuffer data to pad\n * @return the padded data\n */\nexport function leftPad (length, inputBuffer) {\n  const fill = length - inputBuffer.length\n  if (fill > 0) {\n    const fillArray = new Uint8Array(fill)\n    fillArray.fill(0, fill)\n    return Buffer.concat([fillArray, inputBuffer])\n  } else {\n    return inputBuffer\n  }\n}\n\n/**\n * Right pad the input data with 0 bytes\n * @param length to pad to\n * @param inputBuffer data to pad\n * @return the padded data\n */\nexport function rightPad (length, inputBuffer) {\n  const fill = length - inputBuffer.length\n  if (fill > 0) {\n    const fillArray = new Uint8Array(fill)\n    fillArray.fill(0, fill)\n    return Buffer.concat([inputBuffer, fillArray])\n  } else {\n    return inputBuffer\n  }\n}\n\n/**\n * Convert bignumber to byte array\n * @param x bignumber instance\n * @return Buffer\n */\nexport function bigNumberToByteArray (x) {\n  let hexString = x.toString(16)\n  if (hexString.length % 2 > 0) hexString = '0' + hexString\n  return Buffer.from(hexString, 'hex')\n}\nexport function toBytes (val, big = false) {\n  // \"\"\"\n  // Encode a value to bytes.\n  // If the value is an int it will be encoded as bytes big endian\n  // Raises ValueError if the input is not an int or string\n\n  if (val === undefined || val === null) return Buffer.from([])\n  if (Number.isInteger(val) || BigNumber.isBigNumber(val) || big) {\n    if (!BigNumber.isBigNumber(val)) val = BigNumber(val)\n    return bigNumberToByteArray(val)\n  }\n  if (typeof val === 'string') {\n    return val.toString('utf-8')\n  }\n  throw new Error('Byte serialization not supported')\n}\n","/**\n * Transaction Schema for TxBuilder\n * @module @aeternity/aepp-sdk/es/tx/builder/schema\n * @export TxSchema\n * @example import TxSchema from '@aeternity/aepp-sdk/es/tx/builder/schema'\n */\n// # RLP version number\n// # https://github.com/aeternity/protocol/blob/master/serializations.md#binary-serialization\n\nimport BigNumber from 'bignumber.js'\n\nexport const VSN = 1\nexport const VSN_2 = 2\n\n// # TRANSACTION DEFAULT TTL\nexport const TX_TTL = 0\n// # ORACLE\nexport const QUERY_FEE = 30000\nexport const ORACLE_TTL = { type: 'delta', value: 500 }\nexport const QUERY_TTL = { type: 'delta', value: 10 }\nexport const RESPONSE_TTL = { type: 'delta', value: 10 }\n// # CONTRACT\nexport const DEPOSIT = 0\nexport const AMOUNT = 0\nexport const GAS = 1600000 - 21000\nexport const MIN_GAS_PRICE = 1000000000 // min gasPrice 1e9\nexport const MAX_AUTH_FUN_GAS = 50000\nexport const DRY_RUN_ACCOUNT = { pub: 'ak_11111111111111111111111111111111273Yts', amount: '100000000000000000000000000000000000' }\n// # AENS\nexport const AENS_NAME_DOMAINS = ['chain', 'test']\nexport const NAME_TTL = 50000\n// # max number of block into the future that the name is going to be available\n// # https://github.com/aeternity/protocol/blob/epoch-v0.22.0/AENS.md#update\n// # https://github.com/aeternity/protocol/blob/44a93d3aab957ca820183c3520b9daf6b0fedff4/AENS.md#aens-entry\nexport const NAME_MAX_TTL = 36000\nexport const NAME_MAX_CLIENT_TTL = 84600\nexport const CLIENT_TTL = NAME_MAX_CLIENT_TTL\nexport const NAME_FEE = 0\n// # see https://github.com/aeternity/aeternity/blob/72e440b8731422e335f879a31ecbbee7ac23a1cf/apps/aecore/src/aec_governance.erl#L67\nexport const NAME_FEE_MULTIPLIER = 100000000000000\nexport const NAME_FEE_BID_INCREMENT = 0.05 // # the increment is in percentage\n// # see https://github.com/aeternity/aeternity/blob/72e440b8731422e335f879a31ecbbee7ac23a1cf/apps/aecore/src/aec_governance.erl#L272\nexport const NAME_BID_TIMEOUT_BLOCKS = 480 // # ~1 day\nexport const NAME_BID_MAX_LENGTH = 12 // # this is the max length for a domain to be part of a bid\n// # ref: https://github.com/aeternity/aeternity/blob/72e440b8731422e335f879a31ecbbee7ac23a1cf/apps/aecore/src/aec_governance.erl#L290\n// # bid ranges:\nexport const NAME_BID_RANGES = {\n  31: BigNumber(3).times(NAME_FEE_MULTIPLIER),\n  30: BigNumber(5).times(NAME_FEE_MULTIPLIER),\n  29: BigNumber(8).times(NAME_FEE_MULTIPLIER),\n  28: BigNumber(13).times(NAME_FEE_MULTIPLIER),\n  27: BigNumber(21).times(NAME_FEE_MULTIPLIER),\n  26: BigNumber(34).times(NAME_FEE_MULTIPLIER),\n  25: BigNumber(55).times(NAME_FEE_MULTIPLIER),\n  24: BigNumber(89).times(NAME_FEE_MULTIPLIER),\n  23: BigNumber(144).times(NAME_FEE_MULTIPLIER),\n  22: BigNumber(233).times(NAME_FEE_MULTIPLIER),\n  21: BigNumber(377).times(NAME_FEE_MULTIPLIER),\n  20: BigNumber(610).times(NAME_FEE_MULTIPLIER),\n  19: BigNumber(987).times(NAME_FEE_MULTIPLIER),\n  18: BigNumber(1597).times(NAME_FEE_MULTIPLIER),\n  17: BigNumber(2584).times(NAME_FEE_MULTIPLIER),\n  16: BigNumber(4181).times(NAME_FEE_MULTIPLIER),\n  15: BigNumber(6765).times(NAME_FEE_MULTIPLIER),\n  14: BigNumber(10946).times(NAME_FEE_MULTIPLIER),\n  13: BigNumber(17711).times(NAME_FEE_MULTIPLIER),\n  12: BigNumber(28657).times(NAME_FEE_MULTIPLIER),\n  11: BigNumber(46368).times(NAME_FEE_MULTIPLIER),\n  10: BigNumber(75025).times(NAME_FEE_MULTIPLIER),\n  9: BigNumber(121393).times(NAME_FEE_MULTIPLIER),\n  8: BigNumber(196418).times(NAME_FEE_MULTIPLIER),\n  7: BigNumber(317811).times(NAME_FEE_MULTIPLIER),\n  6: BigNumber(514229).times(NAME_FEE_MULTIPLIER),\n  5: BigNumber(832040).times(NAME_FEE_MULTIPLIER),\n  4: BigNumber(1346269).times(NAME_FEE_MULTIPLIER),\n  3: BigNumber(2178309).times(NAME_FEE_MULTIPLIER),\n  2: BigNumber(3524578).times(NAME_FEE_MULTIPLIER),\n  1: BigNumber(5702887).times(NAME_FEE_MULTIPLIER)\n}\n\n// # ref: https://github.com/aeternity/aeternity/blob/72e440b8731422e335f879a31ecbbee7ac23a1cf/apps/aecore/src/aec_governance.erl#L273\n// # name bid timeouts\nexport const NAME_BID_TIMEOUTS = {\n  13: BigNumber(0),\n  12: BigNumber(NAME_BID_TIMEOUT_BLOCKS), // # 480 blocks\n  8: BigNumber(31).times(NAME_BID_TIMEOUT_BLOCKS), // # 14880 blocks\n  4: BigNumber(62).times(NAME_BID_TIMEOUT_BLOCKS) // # 29760 blocks\n}\n\n// # Tag constant for ids (type uint8)\n// # see https://github.com/aeternity/protocol/blob/master/serializations.md#the-id-type\n// # <<Tag:1/unsigned-integer-unit:8, Hash:32/binary-unit:8>>\nconst ID_TAG_ACCOUNT = 1\nconst ID_TAG_NAME = 2\nconst ID_TAG_COMMITMENT = 3\nconst ID_TAG_ORACLE = 4\nconst ID_TAG_CONTRACT = 5\nconst ID_TAG_CHANNEL = 6\n\n// # OBJECT tags\n// # see https://github.com/aeternity/protocol/blob/master/serializations.md#binary-serialization\nconst OBJECT_TAG_ACCOUNT = 10\nexport const OBJECT_TAG_SIGNED_TRANSACTION = 11\nconst OBJECT_TAG_SPEND_TRANSACTION = 12\nconst OBJECT_TAG_ORACLE_REGISTER_TRANSACTION = 22\nconst OBJECT_TAG_ORACLE_QUERY_TRANSACTION = 23\nconst OBJECT_TAG_ORACLE_RESPONSE_TRANSACTION = 24\nconst OBJECT_TAG_ORACLE_EXTEND_TRANSACTION = 25\nconst OBJECT_TAG_NAME_SERVICE_CLAIM_TRANSACTION = 32\nconst OBJECT_TAG_NAME_SERVICE_PRECLAIM_TRANSACTION = 33\nconst OBJECT_TAG_NAME_SERVICE_UPDATE_TRANSACTION = 34\nconst OBJECT_TAG_NAME_SERVICE_REVOKE_TRANSACTION = 35\nconst OBJECT_TAG_NAME_SERVICE_TRANSFER_TRANSACTION = 36\nconst OBJECT_TAG_CONTRACT = 40\nconst OBJECT_TAG_CONTRACT_CALL = 41\nconst OBJECT_TAG_CONTRACT_CREATE_TRANSACTION = 42\nconst OBJECT_TAG_CONTRACT_CALL_TRANSACTION = 43\nconst OBJECT_TAG_CHANNEL_CREATE_TX = 50\nconst OBJECT_TAG_CHANNEL_DEPOSIT_TX = 51\nconst OBJECT_TAG_CHANNEL_WITHRAW_TX = 52\nconst OBJECT_TAG_CHANNEL_CLOSE_MUTUAL_TX = 53\nconst OBJECT_TAG_CHANNEL_CLOSE_SOLO_TX = 54\nconst OBJECT_TAG_CHANNEL_SLASH_TX = 55\nconst OBJECT_TAG_CHANNEL_SETTLE_TX = 56\nconst OBJECT_TAG_CHANNEL_OFFCHAIN_TX = 57\nconst OBJECT_TAG_CHANNEL = 58\nconst OBJECT_TAG_CHANNEL_SNAPSHOT_SOLO_TX = 59\nconst OBJECT_TAG_CHANNEL_OFFCHAIN_UPDATE_TRANSFER_TX = 570\nconst OBJECT_TAG_CHANNEL_OFFCHAIN_UPDATE_DEPOSIT_TX = 571\nconst OBJECT_TAG_CHANNEL_OFFCHAIN_UPDATE_WITHDRAWAL_TX = 572\nconst OBJECT_TAG_CHANNEL_OFFCHAIN_CREATE_CONTRACT_TX = 573\nconst OBJECT_TAG_CHANNEL_OFFCHAIN_CALL_CONTRACT_TX = 574\nconst OBJECT_TAG_CHANNEL_RECONNECT_TX = 575\nconst OBJECT_TAG_PROOF_OF_INCLUSION = 60\nconst OBJECT_TAG_STATE_TREES = 62\nconst OBJECT_TAG_MERKLE_PATRICIA_TREE = 63\nconst OBJECT_TAG_MERKLE_PATRICIA_TREE_VALUE = 64\nconst OBJECT_TAG_CONTRACTS_TREE = 621\nconst OBJECT_TAG_CONTRACT_CALLS_TREE = 622\nconst OBJECT_TAG_CHANNELS_TREE = 623\nconst OBJECT_TAG_NAMESERVICE_TREE = 624\nconst OBJECT_TAG_ORACLES_TREE = 625\nconst OBJECT_TAG_ACCOUNTS_TREE = 626\nconst OBJECT_TAG_GA_ATTACH = 80\nconst OBJECT_TAG_GA_META = 81\nconst OBJECT_TAG_SOPHIA_BYTE_CODE = 70\n\nconst TX_FIELD = (name, type, prefix) => [name, type, prefix]\nconst TX_SCHEMA_FIELD = (schema, objectId) => [schema, objectId]\n\nconst revertObject = (obj) => Object.entries(obj).reduce((acc, [key, v]) => (acc[v] = key) && acc, {})\n\n/**\n * @constant\n * @description Object with transaction types\n * @type {Object} TX_TYPE\n * @alias module:@aeternity/aepp-sdk/es/tx/builder/schema\n * @property {String} signed\n * @property {String} spend\n * @property {String} nameClaim\n * @property {String} namePreClaim\n * @property {String} nameUpdate\n * @property {String} nameRevoke\n * @property {String} nameTransfer\n * @property {String} contractCreate\n * @property {String} contractCall\n * @property {String} oracleRegister\n * @property {String} oracleExtend\n * @property {String} oracleQuery\n * @property {String} oracleResponse\n */\nexport const TX_TYPE = {\n  account: 'account',\n  signed: 'signedTx',\n  spend: 'spendTx',\n  // AENS\n  nameClaim: 'nameClaimTx',\n  namePreClaim: 'namePreClaimTx',\n  nameUpdate: 'nameUpdateTx',\n  nameRevoke: 'nameRevokeTx',\n  nameTransfer: 'nameTransfer',\n  // CONTRACT\n  contract: 'contract',\n  contractCreate: 'contractCreateTx',\n  contractCall: 'contractCallTx',\n  contractCallResult: 'contractCallResult',\n  // ORACLE\n  oracleRegister: 'oracleRegister',\n  oracleExtend: 'oracleExtend',\n  oracleQuery: 'oracleQuery',\n  oracleResponse: 'oracleResponse',\n  // STATE CHANNEL\n  channelCreate: 'channelCreate',\n  channelCloseMutual: 'channelCloseMutual',\n  channelCloseSolo: 'channelCloseSolo',\n  channelSlash: 'channelSlash',\n  channelDeposit: 'channelDeposit',\n  channelWithdraw: 'channelWithdraw',\n  channelSettle: 'channelSettle',\n  channelOffChain: 'channelOffChain',\n  channel: 'channel',\n  channelSnapshotSolo: 'channelSnapshotSolo',\n  channelOffChainUpdateTransfer: 'channelOffChainUpdateTransfer',\n  channelOffChainUpdateDeposit: 'channelOffChainUpdateDeposit',\n  channelOffChainUpdateWithdrawal: 'channelOffChainUpdateWithdrawal',\n  channelOffChainCreateContract: 'channelOffChainCreateContract',\n  channelOffChainCallContract: 'channelOffChainCallContract',\n  channelReconnect: 'channelReconnect',\n  proofOfInclusion: 'proofOfInclusion',\n  stateTrees: 'stateTrees',\n  merklePatriciaTree: 'merklePatriciaTree',\n  merklePatriciaTreeValue: 'merklePatriciaTreeValue',\n  contractsTree: 'contractsTree',\n  contractCallsTree: 'contractCallsTree',\n  channelsTree: 'channelsTree',\n  nameserviceTree: 'nameserviceTree',\n  oraclesTree: 'oraclesTree',\n  accountsTree: 'accountsTree',\n  // GA ACCOUNTS\n  gaAttach: 'gaAttach',\n  gaMeta: 'gaMeta',\n  sophiaByteCode: 'sophiaByteCode'\n}\n\n// # see https://github.com/aeternity/protocol/blob/minerva/contracts/contract_vms.md#virtual-machines-on-the-%C3%A6ternity-blockchain\nexport const VM_VERSIONS = {\n  NO_VM: 0,\n  SOPHIA: 1,\n  SOLIDITY: 2,\n  SOPHIA_IMPROVEMENTS_MINERVA: 3,\n  SOPHIA_IMPROVEMENTS_FORTUNA: 4,\n  FATE: 5,\n  SOPHIA_IMPROVEMENTS_LIMA: 6\n}\n// # see https://github.com/aeternity/protocol/blob/minerva/contracts/contract_vms.md#virtual-machines-on-the-%C3%A6ternity-blockchain\nexport const ABI_VERSIONS = {\n  NO_ABI: 0,\n  SOPHIA: 1,\n  SOLIDITY: 2,\n  FATE: 3\n}\n\nexport const VM_TYPE = { FATE: 'fate', AEVM: 'aevm' }\nexport const FATE_ABI = [3]\n\n// First abi/vm by default\nexport const VM_ABI_MAP_ROMA = {\n  [TX_TYPE.contractCreate]: { vmVersion: [VM_VERSIONS.SOPHIA], abiVersion: [ABI_VERSIONS.SOPHIA] },\n  [TX_TYPE.contractCall]: { vmVersion: [VM_VERSIONS.SOPHIA], abiVersion: [ABI_VERSIONS.SOPHIA] },\n  [TX_TYPE.oracleRegister]: { vmVersion: [VM_VERSIONS.SOPHIA], abiVersion: [ABI_VERSIONS.NO_ABI, ABI_VERSIONS.SOPHIA] }\n}\n\nexport const VM_ABI_MAP_MINERVA = {\n  [TX_TYPE.contractCreate]: { vmVersion: [VM_VERSIONS.SOPHIA_IMPROVEMENTS_MINERVA], abiVersion: [ABI_VERSIONS.SOPHIA] },\n  [TX_TYPE.contractCall]: { vmVersion: [VM_VERSIONS.SOPHIA_IMPROVEMENTS_MINERVA, VM_VERSIONS.SOPHIA], abiVersion: [ABI_VERSIONS.SOPHIA] },\n  [TX_TYPE.oracleRegister]: { vmVersion: [VM_VERSIONS.SOPHIA_IMPROVEMENTS_MINERVA], abiVersion: [ABI_VERSIONS.NO_ABI, ABI_VERSIONS.SOPHIA] }\n}\n\nexport const VM_ABI_MAP_FORTUNA = {\n  [TX_TYPE.contractCreate]: { vmVersion: [VM_VERSIONS.SOPHIA_IMPROVEMENTS_FORTUNA], abiVersion: [ABI_VERSIONS.SOPHIA] },\n  [TX_TYPE.contractCall]: { vmVersion: [VM_VERSIONS.SOPHIA_IMPROVEMENTS_FORTUNA, VM_VERSIONS.SOPHIA, VM_VERSIONS.SOPHIA_IMPROVEMENTS_MINERVA], abiVersion: [ABI_VERSIONS.SOPHIA] },\n  [TX_TYPE.oracleRegister]: { vmVersion: [], abiVersion: [ABI_VERSIONS.NO_ABI, ABI_VERSIONS.SOPHIA] }\n}\n\nexport const VM_ABI_MAP_LIMA = {\n  [TX_TYPE.contractCreate]: { vmVersion: [VM_VERSIONS.FATE, VM_VERSIONS.SOPHIA_IMPROVEMENTS_LIMA], abiVersion: [ABI_VERSIONS.FATE, ABI_VERSIONS.SOPHIA] },\n  [TX_TYPE.contractCall]: { vmVersion: [VM_VERSIONS.FATE, VM_VERSIONS.SOPHIA_IMPROVEMENTS_LIMA, VM_VERSIONS.SOPHIA_IMPROVEMENTS_FORTUNA, VM_VERSIONS.SOPHIA, VM_VERSIONS.SOPHIA_IMPROVEMENTS_MINERVA], abiVersion: [ABI_VERSIONS.FATE, ABI_VERSIONS.SOPHIA] },\n  [TX_TYPE.oracleRegister]: { vmVersion: [], abiVersion: [ABI_VERSIONS.NO_ABI, ABI_VERSIONS.SOPHIA] }\n}\n\nexport const PROTOCOL_VM_ABI = {\n  // Roma\n  1: VM_ABI_MAP_ROMA,\n  // Minerva\n  2: VM_ABI_MAP_MINERVA,\n  // Fortuna\n  3: VM_ABI_MAP_FORTUNA,\n  // Lima\n  4: VM_ABI_MAP_LIMA\n}\n\nexport const OBJECT_ID_TX_TYPE = {\n  [OBJECT_TAG_ACCOUNT]: TX_TYPE.account,\n  [OBJECT_TAG_SIGNED_TRANSACTION]: TX_TYPE.signed,\n  [OBJECT_TAG_SPEND_TRANSACTION]: TX_TYPE.spend,\n  // AENS\n  [OBJECT_TAG_NAME_SERVICE_CLAIM_TRANSACTION]: TX_TYPE.nameClaim,\n  [OBJECT_TAG_NAME_SERVICE_PRECLAIM_TRANSACTION]: TX_TYPE.namePreClaim,\n  [OBJECT_TAG_NAME_SERVICE_UPDATE_TRANSACTION]: TX_TYPE.nameUpdate,\n  [OBJECT_TAG_NAME_SERVICE_REVOKE_TRANSACTION]: TX_TYPE.nameRevoke,\n  [OBJECT_TAG_NAME_SERVICE_TRANSFER_TRANSACTION]: TX_TYPE.nameTransfer,\n  // CONTRACT\n  [OBJECT_TAG_CONTRACT]: TX_TYPE.contract,\n  [OBJECT_TAG_CONTRACT_CREATE_TRANSACTION]: TX_TYPE.contractCreate,\n  [OBJECT_TAG_CONTRACT_CALL_TRANSACTION]: TX_TYPE.contractCall,\n  [OBJECT_TAG_CONTRACT_CALL]: TX_TYPE.contractCallResult,\n  // ORACLE\n  [OBJECT_TAG_ORACLE_REGISTER_TRANSACTION]: TX_TYPE.oracleRegister,\n  [OBJECT_TAG_ORACLE_EXTEND_TRANSACTION]: TX_TYPE.oracleExtend,\n  [OBJECT_TAG_ORACLE_QUERY_TRANSACTION]: TX_TYPE.oracleQuery,\n  [OBJECT_TAG_ORACLE_RESPONSE_TRANSACTION]: TX_TYPE.oracleResponse,\n  // STATE CHANNEL\n  [OBJECT_TAG_CHANNEL_CREATE_TX]: TX_TYPE.channelCreate,\n  [OBJECT_TAG_CHANNEL_CLOSE_MUTUAL_TX]: TX_TYPE.channelCloseMutual,\n  [OBJECT_TAG_CHANNEL_CLOSE_SOLO_TX]: TX_TYPE.channelCloseSolo,\n  [OBJECT_TAG_CHANNEL_SLASH_TX]: TX_TYPE.channelSlash,\n  [OBJECT_TAG_CHANNEL_DEPOSIT_TX]: TX_TYPE.channelDeposit,\n  [OBJECT_TAG_CHANNEL_WITHRAW_TX]: TX_TYPE.channelWithdraw,\n  [OBJECT_TAG_CHANNEL_SETTLE_TX]: TX_TYPE.channelSettle,\n  [OBJECT_TAG_CHANNEL_OFFCHAIN_TX]: TX_TYPE.channelOffChain,\n  [OBJECT_TAG_CHANNEL]: TX_TYPE.channel,\n  [OBJECT_TAG_CHANNEL_SNAPSHOT_SOLO_TX]: TX_TYPE.channelSnapshotSolo,\n  [OBJECT_TAG_CHANNEL_OFFCHAIN_UPDATE_TRANSFER_TX]: TX_TYPE.channelOffChainUpdateTransfer,\n  [OBJECT_TAG_CHANNEL_OFFCHAIN_UPDATE_DEPOSIT_TX]: TX_TYPE.channelOffChainUpdateDeposit,\n  [OBJECT_TAG_CHANNEL_OFFCHAIN_UPDATE_WITHDRAWAL_TX]: TX_TYPE.channelOffChainUpdateWithdrawal,\n  [OBJECT_TAG_CHANNEL_OFFCHAIN_CREATE_CONTRACT_TX]: TX_TYPE.channelOffChainCreateContract,\n  [OBJECT_TAG_CHANNEL_OFFCHAIN_CALL_CONTRACT_TX]: TX_TYPE.channelOffChainCallContract,\n  [OBJECT_TAG_CHANNEL_RECONNECT_TX]: TX_TYPE.channelReconnect,\n  [OBJECT_TAG_PROOF_OF_INCLUSION]: TX_TYPE.proofOfInclusion,\n  [OBJECT_TAG_STATE_TREES]: TX_TYPE.stateTrees,\n  [OBJECT_TAG_MERKLE_PATRICIA_TREE]: TX_TYPE.merklePatriciaTree,\n  [OBJECT_TAG_MERKLE_PATRICIA_TREE_VALUE]: TX_TYPE.merklePatriciaTreeValue,\n  [OBJECT_TAG_CONTRACTS_TREE]: TX_TYPE.contractsTree,\n  [OBJECT_TAG_CONTRACT_CALLS_TREE]: TX_TYPE.contractCallsTree,\n  [OBJECT_TAG_CHANNELS_TREE]: TX_TYPE.channelsTree,\n  [OBJECT_TAG_NAMESERVICE_TREE]: TX_TYPE.nameserviceTree,\n  [OBJECT_TAG_ORACLES_TREE]: TX_TYPE.oraclesTree,\n  [OBJECT_TAG_ACCOUNTS_TREE]: TX_TYPE.accountsTree,\n  // GA Accounts\n  [OBJECT_TAG_GA_ATTACH]: TX_TYPE.gaAttach,\n  [OBJECT_TAG_GA_META]: TX_TYPE.gaMeta,\n  [OBJECT_TAG_SOPHIA_BYTE_CODE]: TX_TYPE.sophiaByteCode\n}\n\nexport const FIELD_TYPES = {\n  int: 'int',\n  amount: 'amount',\n  id: 'id',\n  ids: 'ids',\n  string: 'string',\n  binary: 'binary',\n  rlpBinary: 'rlpBinary',\n  rlpBinaries: 'rlpBinaries',\n  rawBinary: 'rawBinary',\n  bool: 'bool',\n  hex: 'hex',\n  signatures: 'signatures',\n  pointers: 'pointers',\n  offChainUpdates: 'offChainUpdates',\n  callStack: 'callStack',\n  proofOfInclusion: 'proofOfInclusion',\n  mptree: 'mptree',\n  callReturnType: 'callReturnType',\n  ctVersion: 'ctVersion',\n  sophiaCodeTypeInfo: 'sophiaCodeTypeInfo',\n  payload: 'payload'\n}\n\n// FEE CALCULATION\nexport const BASE_GAS = 15000\nexport const GAS_PER_BYTE = 20\nexport const DEFAULT_FEE = 20000\nexport const KEY_BLOCK_INTERVAL = 3\n\n// MAP WITH FEE CALCULATION https://github.com/aeternity/protocol/blob/master/consensus/consensus.md#gas\nexport const TX_FEE_BASE_GAS = (txType, { backend = VM_TYPE.FATE }) => {\n  switch (txType) {\n    // case TX_TYPE.gaMeta: // TODO investigate MetaTx calculation\n    case TX_TYPE.gaAttach:\n    case TX_TYPE.contractCreate:\n      return BigNumber(5 * BASE_GAS)\n    // Todo Implement meta tx fee calculation\n    case TX_TYPE.gaMeta:\n    case TX_TYPE.contractCall:\n      return BigNumber((backend === VM_TYPE.FATE ? 12 : 30) * BASE_GAS)\n    default:\n      return BigNumber(BASE_GAS)\n  }\n}\n\nexport const TX_FEE_OTHER_GAS = (txType) => ({ txSize, relativeTtl }) => {\n  switch (txType) {\n    case TX_TYPE.oracleRegister:\n    case TX_TYPE.oracleExtend:\n    case TX_TYPE.oracleQuery:\n    case TX_TYPE.oracleResponse:\n      return BigNumber(txSize)\n        .times(GAS_PER_BYTE)\n        .plus(\n          Math.ceil(32000 * relativeTtl / Math.floor(60 * 24 * 365 / KEY_BLOCK_INTERVAL))\n        )\n    default:\n      return BigNumber(txSize).times(GAS_PER_BYTE)\n  }\n}\n\nexport const ID_TAG = {\n  account: ID_TAG_ACCOUNT,\n  name: ID_TAG_NAME,\n  commitment: ID_TAG_COMMITMENT,\n  oracle: ID_TAG_ORACLE,\n  contract: ID_TAG_CONTRACT,\n  channel: ID_TAG_CHANNEL\n}\nexport const PREFIX_ID_TAG = {\n  ak: ID_TAG.account,\n  nm: ID_TAG.name,\n  cm: ID_TAG.commitment,\n  ok: ID_TAG.oracle,\n  ct: ID_TAG.contract,\n  ch: ID_TAG.channel\n}\nexport const ID_TAG_PREFIX = revertObject(PREFIX_ID_TAG)\nconst VALIDATION_ERROR = (msg) => msg\n\nexport const VALIDATION_MESSAGE = {\n  [FIELD_TYPES.int]: ({ value, isMinusValue }) => isMinusValue ? VALIDATION_ERROR(`${value} must be >= 0`) : VALIDATION_ERROR(`${value} is not of type Number or BigNumber`),\n  [FIELD_TYPES.amount]: ({ value, isMinusValue }) => isMinusValue ? VALIDATION_ERROR(`${value} must be >= 0`) : VALIDATION_ERROR(`${value} is not of type Number or BigNumber`),\n  [FIELD_TYPES.id]: ({ value, prefix }) => VALIDATION_ERROR(`'${value}' prefix doesn't match expected prefix '${prefix}' or ID_TAG for prefix not found`),\n  [FIELD_TYPES.binary]: ({ prefix, value }) => VALIDATION_ERROR(`'${value}' prefix doesn't match expected prefix '${prefix}'`),\n  [FIELD_TYPES.string]: ({ value }) => VALIDATION_ERROR('Not a string'),\n  [FIELD_TYPES.pointers]: ({ value }) => VALIDATION_ERROR('Value must be of type Array and contains only object\\'s like \\'{key: \"account_pubkey\", id: \"ak_lkamsflkalsdalksdlasdlasdlamd\"}\\''),\n  [FIELD_TYPES.ctVersion]: ({ value }) => VALIDATION_ERROR('Value must be an object with \"vmVersion\" and \"abiVersion\" fields')\n}\n\nconst BASE_TX = [\n  TX_FIELD('tag', FIELD_TYPES.int),\n  TX_FIELD('VSN', FIELD_TYPES.int)\n]\n\nconst ACCOUNT_TX = [\n  ...BASE_TX,\n  TX_FIELD('nonce', FIELD_TYPES.int),\n  TX_FIELD('balance', FIELD_TYPES.int)\n]\n\nexport const CONTRACT_BYTE_CODE_LIMA = [\n  ...BASE_TX,\n  TX_FIELD('sourceCodeHash', FIELD_TYPES.rawBinary),\n  TX_FIELD('typeInfo', FIELD_TYPES.sophiaCodeTypeInfo),\n  TX_FIELD('byteCode', FIELD_TYPES.rawBinary),\n  TX_FIELD('compilerVersion', FIELD_TYPES.string),\n  TX_FIELD('payable', FIELD_TYPES.bool)\n]\n\nexport const CONTRACT_BYTE_CODE_MINERVA = [\n  ...BASE_TX,\n  TX_FIELD('sourceCodeHash', FIELD_TYPES.rawBinary),\n  TX_FIELD('typeInfo', FIELD_TYPES.sophiaCodeTypeInfo),\n  TX_FIELD('byteCode', FIELD_TYPES.rawBinary),\n  TX_FIELD('compilerVersion', FIELD_TYPES.string)\n]\n\nexport const CONTRACT_BYTE_CODE_ROMA = [\n  ...BASE_TX,\n  TX_FIELD('sourceCodeHash', FIELD_TYPES.rawBinary),\n  TX_FIELD('typeInfo', FIELD_TYPES.sophiaCodeTypeInfo),\n  TX_FIELD('byteCode', FIELD_TYPES.rawBinary)\n]\n\nconst ACCOUNT_TX_2 = [\n  ...BASE_TX,\n  TX_FIELD('flags', FIELD_TYPES.int),\n  TX_FIELD('nonce', FIELD_TYPES.int),\n  TX_FIELD('balance', FIELD_TYPES.int),\n  TX_FIELD('gaContract', FIELD_TYPES.id, ['ct', 'nm']),\n  TX_FIELD('gaAuthFun', FIELD_TYPES.binary, 'cb')\n]\n\nconst SPEND_TX = [\n  ...BASE_TX,\n  TX_FIELD('senderId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('recipientId', FIELD_TYPES.id, ['ak', 'nm']),\n  TX_FIELD('amount', FIELD_TYPES.amount),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int),\n  TX_FIELD('nonce', FIELD_TYPES.int),\n  TX_FIELD('payload', FIELD_TYPES.payload)\n]\n\nconst SIGNED_TX = [\n  ...BASE_TX,\n  TX_FIELD('signatures', FIELD_TYPES.signatures),\n  TX_FIELD('encodedTx', FIELD_TYPES.rlpBinary)\n]\n\nconst NAME_PRE_CLAIM_TX = [\n  ...BASE_TX,\n  TX_FIELD('accountId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('nonce', FIELD_TYPES.int),\n  TX_FIELD('commitmentId', FIELD_TYPES.id, 'cm'),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int)\n]\n\nconst NAME_CLAIM_TX = [\n  ...BASE_TX,\n  TX_FIELD('accountId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('nonce', FIELD_TYPES.int),\n  TX_FIELD('name', FIELD_TYPES.binary, 'nm'),\n  TX_FIELD('nameSalt', FIELD_TYPES.int),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int)\n]\n\nconst NAME_CLAIM_TX_2 = [\n  ...BASE_TX,\n  TX_FIELD('accountId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('nonce', FIELD_TYPES.int),\n  TX_FIELD('name', FIELD_TYPES.binary, 'nm'),\n  TX_FIELD('nameSalt', FIELD_TYPES.int),\n  TX_FIELD('nameFee', FIELD_TYPES.amount),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int)\n]\n\nconst NAME_UPDATE_TX = [\n  ...BASE_TX,\n  TX_FIELD('accountId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('nonce', FIELD_TYPES.int),\n  TX_FIELD('nameId', FIELD_TYPES.id, 'nm'),\n  TX_FIELD('nameTtl', FIELD_TYPES.int),\n  TX_FIELD('pointers', FIELD_TYPES.pointers),\n  TX_FIELD('clientTtl', FIELD_TYPES.int),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int)\n]\n\nconst NAME_TRANSFER_TX = [\n  ...BASE_TX,\n  TX_FIELD('accountId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('nonce', FIELD_TYPES.int),\n  TX_FIELD('nameId', FIELD_TYPES.id, 'nm'),\n  TX_FIELD('recipientId', FIELD_TYPES.id, ['ak', 'nm']),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int)\n]\n\nconst NAME_REVOKE_TX = [\n  ...BASE_TX,\n  TX_FIELD('accountId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('nonce', FIELD_TYPES.int),\n  TX_FIELD('nameId', FIELD_TYPES.id, 'nm'),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int)\n]\n\nconst CONTRACT_TX = [\n  ...BASE_TX,\n  TX_FIELD('owner', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('ctVersion', FIELD_TYPES.int),\n  TX_FIELD('code', FIELD_TYPES.binary, 'cb'),\n  TX_FIELD('log', FIELD_TYPES.binary, 'cb'),\n  TX_FIELD('active', FIELD_TYPES.bool),\n  TX_FIELD('referers', FIELD_TYPES.ids, 'ak'),\n  TX_FIELD('deposit', FIELD_TYPES.amount)\n]\n\nconst GA_ATTACH_TX = [\n  ...BASE_TX,\n  TX_FIELD('ownerId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('nonce', FIELD_TYPES.int),\n  TX_FIELD('code', FIELD_TYPES.binary, 'cb'),\n  TX_FIELD('authFun', FIELD_TYPES.rawBinary),\n  TX_FIELD('ctVersion', FIELD_TYPES.ctVersion),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int),\n  TX_FIELD('gas', FIELD_TYPES.int),\n  TX_FIELD('gasPrice', FIELD_TYPES.int),\n  TX_FIELD('callData', FIELD_TYPES.binary, 'cb')\n]\n\nconst GA_META_TX = [\n  ...BASE_TX,\n  TX_FIELD('gaId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('authData', FIELD_TYPES.binary, 'cb'),\n  TX_FIELD('abiVersion', FIELD_TYPES.int),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('gas', FIELD_TYPES.int),\n  TX_FIELD('gasPrice', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int),\n  TX_FIELD('tx', FIELD_TYPES.rlpBinary)\n]\n\nconst CONTRACT_CREATE_TX = [\n  ...BASE_TX,\n  TX_FIELD('ownerId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('nonce', FIELD_TYPES.int),\n  TX_FIELD('code', FIELD_TYPES.binary, 'cb'),\n  TX_FIELD('ctVersion', FIELD_TYPES.ctVersion),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int),\n  TX_FIELD('deposit', FIELD_TYPES.amount),\n  TX_FIELD('amount', FIELD_TYPES.amount),\n  TX_FIELD('gas', FIELD_TYPES.int),\n  TX_FIELD('gasPrice', FIELD_TYPES.int),\n  TX_FIELD('callData', FIELD_TYPES.binary, 'cb')\n]\n\nconst CONTRACT_CALL_TX = [\n  ...BASE_TX,\n  TX_FIELD('callerId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('nonce', FIELD_TYPES.int),\n  TX_FIELD('contractId', FIELD_TYPES.id, ['ct', 'nm']),\n  TX_FIELD('abiVersion', FIELD_TYPES.int),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int),\n  TX_FIELD('amount', FIELD_TYPES.amount),\n  TX_FIELD('gas', FIELD_TYPES.int),\n  TX_FIELD('gasPrice', FIELD_TYPES.int),\n  TX_FIELD('callData', FIELD_TYPES.binary, 'cb')\n]\n\nconst CONTRACT_CALL_RESULT_TX = [\n  ...BASE_TX,\n  TX_FIELD('callerId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('callerNonce', FIELD_TYPES.int),\n  TX_FIELD('height', FIELD_TYPES.int),\n  TX_FIELD('contractId', FIELD_TYPES.id, 'ct'),\n  TX_FIELD('gasPrice', FIELD_TYPES.int),\n  TX_FIELD('gasUsed', FIELD_TYPES.int),\n  TX_FIELD('returnValue', FIELD_TYPES.binary, 'cb'),\n  TX_FIELD('returnType', FIELD_TYPES.callReturnType),\n  // TODO: add serialization for <log> :: [ { <address> :: id, [ <topics> :: binary() ], <data> :: binary() } ]\n  TX_FIELD('log', FIELD_TYPES.rawBinary)\n]\n\nconst ORACLE_REGISTER_TX = [\n  ...BASE_TX,\n  TX_FIELD('accountId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('nonce', FIELD_TYPES.int),\n  TX_FIELD('queryFormat', FIELD_TYPES.string),\n  TX_FIELD('responseFormat', FIELD_TYPES.string),\n  TX_FIELD('queryFee', FIELD_TYPES.amount),\n  TX_FIELD('oracleTtlType', FIELD_TYPES.int),\n  TX_FIELD('oracleTtlValue', FIELD_TYPES.int),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int),\n  TX_FIELD('abiVersion', FIELD_TYPES.int)\n]\n\nconst ORACLE_EXTEND_TX = [\n  ...BASE_TX,\n  TX_FIELD('oracleId', FIELD_TYPES.id, ['ok', 'nm']),\n  TX_FIELD('nonce', FIELD_TYPES.int),\n  TX_FIELD('oracleTtlType', FIELD_TYPES.int),\n  TX_FIELD('oracleTtlValue', FIELD_TYPES.int),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int)\n]\n\nconst ORACLE_QUERY_TX = [\n  ...BASE_TX,\n  TX_FIELD('senderId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('nonce', FIELD_TYPES.int),\n  TX_FIELD('oracleId', FIELD_TYPES.id, ['ok', 'nm']),\n  TX_FIELD('query', FIELD_TYPES.string),\n  TX_FIELD('queryFee', FIELD_TYPES.amount),\n  TX_FIELD('queryTtlType', FIELD_TYPES.int),\n  TX_FIELD('queryTtlValue', FIELD_TYPES.int),\n  TX_FIELD('responseTtlType', FIELD_TYPES.int),\n  TX_FIELD('responseTtlValue', FIELD_TYPES.int),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int)\n]\nconst ORACLE_RESPOND_TX = [\n  ...BASE_TX,\n  TX_FIELD('oracleId', FIELD_TYPES.id, 'ok'),\n  TX_FIELD('nonce', FIELD_TYPES.int),\n  TX_FIELD('queryId', FIELD_TYPES.binary, 'oq'),\n  TX_FIELD('response', FIELD_TYPES.string),\n  TX_FIELD('responseTtlType', FIELD_TYPES.int),\n  TX_FIELD('responseTtlValue', FIELD_TYPES.int),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int)\n]\n\nconst CHANNEL_CREATE_TX = [\n  ...BASE_TX,\n  TX_FIELD('initiator', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('initiatorAmount', FIELD_TYPES.int),\n  TX_FIELD('responder', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('responderAmount', FIELD_TYPES.int),\n  TX_FIELD('channelReserve', FIELD_TYPES.int),\n  TX_FIELD('lockPeriod', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('delegateIds', FIELD_TYPES.string),\n  TX_FIELD('stateHash', FIELD_TYPES.binary, 'st'),\n  TX_FIELD('nonce', FIELD_TYPES.int)\n]\n\nconst CHANNEL_DEPOSIT_TX = [\n  ...BASE_TX,\n  TX_FIELD('channelId', FIELD_TYPES.id, 'ch'),\n  TX_FIELD('fromId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('amount', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('stateHash', FIELD_TYPES.binary, 'st'),\n  TX_FIELD('round', FIELD_TYPES.int),\n  TX_FIELD('nonce', FIELD_TYPES.int)\n]\n\nconst CHANNEL_WITHDRAW_TX = [\n  ...BASE_TX,\n  TX_FIELD('channelId', FIELD_TYPES.id, 'ch'),\n  TX_FIELD('toId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('amount', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('stateHash', FIELD_TYPES.binary, 'st'),\n  TX_FIELD('round', FIELD_TYPES.int),\n  TX_FIELD('nonce', FIELD_TYPES.int)\n]\n\nconst CHANNEL_CLOSE_MUTUAL_TX = [\n  ...BASE_TX,\n  TX_FIELD('channelId', FIELD_TYPES.id, 'ch'),\n  TX_FIELD('fromId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('initiatorAmountFinal', FIELD_TYPES.int),\n  TX_FIELD('responderAmountFinal', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('nonce', FIELD_TYPES.int)\n]\n\nconst CHANNEL_CLOSE_SOLO_TX = [\n  ...BASE_TX,\n  TX_FIELD('channelId', FIELD_TYPES.id, 'ch'),\n  TX_FIELD('fromId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('payload', FIELD_TYPES.binary, 'tx'),\n  TX_FIELD('poi', FIELD_TYPES.binary, 'pi'),\n  TX_FIELD('ttl', FIELD_TYPES.int),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('nonce', FIELD_TYPES.int)\n]\n\nconst CHANNEL_SLASH_TX = [\n  ...BASE_TX,\n  TX_FIELD('channelId', FIELD_TYPES.id, 'ch'),\n  TX_FIELD('fromId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('payload', FIELD_TYPES.binary, 'tx'),\n  TX_FIELD('poi', FIELD_TYPES.binary, 'pi'),\n  TX_FIELD('ttl', FIELD_TYPES.int),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('nonce', FIELD_TYPES.int)\n]\n\nconst CHANNEL_SETTLE_TX = [\n  ...BASE_TX,\n  TX_FIELD('channelId', FIELD_TYPES.id, 'ch'),\n  TX_FIELD('fromId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('initiatorAmountFinal', FIELD_TYPES.int),\n  TX_FIELD('responderAmountFinal', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('nonce', FIELD_TYPES.int)\n]\n\nconst CHANNEL_OFFCHAIN_TX = [\n  ...BASE_TX,\n  TX_FIELD('channelId', FIELD_TYPES.id, 'ch'),\n  TX_FIELD('round', FIELD_TYPES.int),\n  TX_FIELD('updates', FIELD_TYPES.offChainUpdates),\n  TX_FIELD('stateHash', FIELD_TYPES.binary, 'st')\n]\n\nconst CHANNEL_OFFCHAIN_TX_2 = [\n  ...BASE_TX,\n  TX_FIELD('channelId', FIELD_TYPES.id, 'ch'),\n  TX_FIELD('round', FIELD_TYPES.int),\n  TX_FIELD('stateHash', FIELD_TYPES.binary, 'st')\n]\n\nconst CHANNEL_TX = [\n  ...BASE_TX,\n  TX_FIELD('initiator', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('responder', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('channelAmount', FIELD_TYPES.int),\n  TX_FIELD('initiatorAmount', FIELD_TYPES.int),\n  TX_FIELD('responderAmount', FIELD_TYPES.int),\n  TX_FIELD('channelReserve', FIELD_TYPES.int),\n  TX_FIELD('delegateIds', FIELD_TYPES.ids),\n  TX_FIELD('stateHash', FIELD_TYPES.hex),\n  TX_FIELD('round', FIELD_TYPES.int),\n  TX_FIELD('soloRound', FIELD_TYPES.int),\n  TX_FIELD('lockPeriod', FIELD_TYPES.int),\n  TX_FIELD('lockedUntil', FIELD_TYPES.int)\n]\n\nconst CHANNEL_TX_2 = [\n  ...BASE_TX,\n  TX_FIELD('initiator', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('responder', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('channelAmount', FIELD_TYPES.int),\n  TX_FIELD('initiatorAmount', FIELD_TYPES.int),\n  TX_FIELD('responderAmount', FIELD_TYPES.int),\n  TX_FIELD('channelReserve', FIELD_TYPES.int),\n  TX_FIELD('delegateIds', FIELD_TYPES.ids),\n  TX_FIELD('stateHash', FIELD_TYPES.hex),\n  TX_FIELD('round', FIELD_TYPES.int),\n  TX_FIELD('soloRound', FIELD_TYPES.int),\n  TX_FIELD('lockPeriod', FIELD_TYPES.int),\n  TX_FIELD('lockedUntil', FIELD_TYPES.int),\n  TX_FIELD('initiatorAuth', FIELD_TYPES.binary, 'cb'),\n  TX_FIELD('responderAuth', FIELD_TYPES.binary, 'cb')\n]\n\nconst CHANNEL_SNAPSHOT_SOLO_TX = [\n  ...BASE_TX,\n  TX_FIELD('channelId', FIELD_TYPES.id, 'ch'),\n  TX_FIELD('fromId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('payload', FIELD_TYPES.binary, 'tx'),\n  TX_FIELD('ttl', FIELD_TYPES.int),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('nonce', FIELD_TYPES.int)\n]\n\nconst CHANNEL_OFFCHAIN_CREATE_CONTRACT_TX = [\n  ...BASE_TX,\n  TX_FIELD('owner', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('ctVersion', FIELD_TYPES.int),\n  TX_FIELD('code', FIELD_TYPES.binary, 'cb'),\n  TX_FIELD('deposit', FIELD_TYPES.int),\n  TX_FIELD('callData', FIELD_TYPES.binary, 'cb')\n]\n\nconst CHANNEL_OFFCHAIN_CALL_CONTRACT_TX = [\n  ...BASE_TX,\n  TX_FIELD('caller', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('contract', FIELD_TYPES.id, 'ct'),\n  TX_FIELD('abiVersion', FIELD_TYPES.int),\n  TX_FIELD('amount', FIELD_TYPES.int),\n  TX_FIELD('callData', FIELD_TYPES.binary, 'cb'),\n  TX_FIELD('callStack', FIELD_TYPES.callStack),\n  TX_FIELD('gasPrice', FIELD_TYPES.int),\n  TX_FIELD('gasLimit', FIELD_TYPES.int)\n]\n\nconst CHANNEL_RECONNECT_TX = [\n  ...BASE_TX,\n  TX_FIELD('channelId', FIELD_TYPES.id, 'ch'),\n  TX_FIELD('round', FIELD_TYPES.int),\n  TX_FIELD('role', FIELD_TYPES.string),\n  TX_FIELD('pubkey', FIELD_TYPES.id, 'ak')\n]\n\nconst CHANNEL_OFFCHAIN_UPDATE_TRANSFER_TX = [\n  ...BASE_TX,\n  TX_FIELD('from', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('to', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('amount', FIELD_TYPES.int)\n]\n\nconst CHANNEL_OFFCHAIN_UPDATE_DEPOSIT_TX = [\n  ...BASE_TX,\n  TX_FIELD('from', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('amount', FIELD_TYPES.int)\n]\n\nconst CHANNEL_OFFCHAIN_UPDATE_WITHDRAWAL_TX = [\n  ...BASE_TX,\n  TX_FIELD('from', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('amount', FIELD_TYPES.int)\n]\n\nconst PROOF_OF_INCLUSION_TX = [\n  ...BASE_TX,\n  TX_FIELD('accounts', FIELD_TYPES.mptrees),\n  TX_FIELD('calls', FIELD_TYPES.mptrees),\n  TX_FIELD('channels', FIELD_TYPES.mptrees),\n  TX_FIELD('contracts', FIELD_TYPES.mptrees),\n  TX_FIELD('ns', FIELD_TYPES.mptrees),\n  TX_FIELD('oracles', FIELD_TYPES.mptrees)\n]\n\nconst STATE_TREES_TX = [\n  ...BASE_TX,\n  TX_FIELD('contracts', FIELD_TYPES.rlpBinary),\n  TX_FIELD('calls', FIELD_TYPES.rlpBinary),\n  TX_FIELD('channels', FIELD_TYPES.rlpBinary),\n  TX_FIELD('ns', FIELD_TYPES.rlpBinary),\n  TX_FIELD('oracles', FIELD_TYPES.rlpBinary),\n  TX_FIELD('accounts', FIELD_TYPES.rlpBinary)\n]\n\nconst MERKLE_PATRICIA_TREE_TX = [\n  ...BASE_TX,\n  TX_FIELD('values', FIELD_TYPES.rlpBinaries)\n]\n\nconst MERKLE_PATRICIA_TREE_VALUE_TX = [\n  ...BASE_TX,\n  TX_FIELD('key', FIELD_TYPES.hex),\n  TX_FIELD('value', FIELD_TYPES.rawBinary)\n]\n\nconst CONTRACTS_TREE_TX = [\n  ...BASE_TX,\n  TX_FIELD('contracts', FIELD_TYPES.rlpBinary)\n]\n\nconst CONTRACT_CALLS_TREE_TX = [\n  ...BASE_TX,\n  TX_FIELD('calls', FIELD_TYPES.rlpBinary)\n]\n\nconst CHANNELS_TREE_TX = [\n  ...BASE_TX,\n  TX_FIELD('channels', FIELD_TYPES.rlpBinary)\n]\n\nconst NAMESERVICE_TREE_TX = [\n  ...BASE_TX,\n  TX_FIELD('mtree', FIELD_TYPES.rlpBinary)\n]\n\nconst ORACLES_TREE_TX = [\n  ...BASE_TX,\n  TX_FIELD('otree', FIELD_TYPES.rlpBinary)\n]\n\nconst ACCOUNTS_TREE_TX = [\n  ...BASE_TX,\n  TX_FIELD('accounts', FIELD_TYPES.rlpBinary)\n]\n\nexport const TX_SERIALIZATION_SCHEMA = {\n  [TX_TYPE.account]: {\n    1: TX_SCHEMA_FIELD(ACCOUNT_TX, OBJECT_TAG_ACCOUNT),\n    2: TX_SCHEMA_FIELD(ACCOUNT_TX_2, OBJECT_TAG_ACCOUNT)\n  },\n  [TX_TYPE.signed]: {\n    1: TX_SCHEMA_FIELD(SIGNED_TX, OBJECT_TAG_SIGNED_TRANSACTION)\n  },\n  [TX_TYPE.spend]: {\n    1: TX_SCHEMA_FIELD(SPEND_TX, OBJECT_TAG_SPEND_TRANSACTION)\n  },\n  [TX_TYPE.namePreClaim]: {\n    1: TX_SCHEMA_FIELD(NAME_PRE_CLAIM_TX, OBJECT_TAG_NAME_SERVICE_PRECLAIM_TRANSACTION)\n  },\n  [TX_TYPE.nameClaim]: {\n    1: TX_SCHEMA_FIELD(NAME_CLAIM_TX, OBJECT_TAG_NAME_SERVICE_CLAIM_TRANSACTION),\n    2: TX_SCHEMA_FIELD(NAME_CLAIM_TX_2, OBJECT_TAG_NAME_SERVICE_CLAIM_TRANSACTION)\n  },\n  [TX_TYPE.nameUpdate]: {\n    1: TX_SCHEMA_FIELD(NAME_UPDATE_TX, OBJECT_TAG_NAME_SERVICE_UPDATE_TRANSACTION)\n  },\n  [TX_TYPE.nameTransfer]: {\n    1: TX_SCHEMA_FIELD(NAME_TRANSFER_TX, OBJECT_TAG_NAME_SERVICE_TRANSFER_TRANSACTION)\n  },\n  [TX_TYPE.nameRevoke]: {\n    1: TX_SCHEMA_FIELD(NAME_REVOKE_TX, OBJECT_TAG_NAME_SERVICE_REVOKE_TRANSACTION)\n  },\n  [TX_TYPE.contract]: {\n    1: TX_SCHEMA_FIELD(CONTRACT_TX, OBJECT_TAG_CONTRACT)\n  },\n  [TX_TYPE.contractCreate]: {\n    1: TX_SCHEMA_FIELD(CONTRACT_CREATE_TX, OBJECT_TAG_CONTRACT_CREATE_TRANSACTION)\n  },\n  [TX_TYPE.contractCall]: {\n    1: TX_SCHEMA_FIELD(CONTRACT_CALL_TX, OBJECT_TAG_CONTRACT_CALL_TRANSACTION)\n  },\n  [TX_TYPE.contractCallResult]: {\n    1: TX_SCHEMA_FIELD(CONTRACT_CALL_RESULT_TX, OBJECT_TAG_CONTRACT_CALL)\n  },\n  [TX_TYPE.oracleRegister]: {\n    1: TX_SCHEMA_FIELD(ORACLE_REGISTER_TX, OBJECT_TAG_ORACLE_REGISTER_TRANSACTION)\n  },\n  [TX_TYPE.oracleExtend]: {\n    1: TX_SCHEMA_FIELD(ORACLE_EXTEND_TX, OBJECT_TAG_ORACLE_EXTEND_TRANSACTION)\n  },\n  [TX_TYPE.oracleQuery]: {\n    1: TX_SCHEMA_FIELD(ORACLE_QUERY_TX, OBJECT_TAG_ORACLE_QUERY_TRANSACTION)\n  },\n  [TX_TYPE.oracleResponse]: {\n    1: TX_SCHEMA_FIELD(ORACLE_RESPOND_TX, OBJECT_TAG_ORACLE_RESPONSE_TRANSACTION)\n  },\n  [TX_TYPE.channelCreate]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_CREATE_TX, OBJECT_TAG_CHANNEL_CREATE_TX)\n  },\n  [TX_TYPE.channelCloseMutual]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_CLOSE_MUTUAL_TX, OBJECT_TAG_CHANNEL_CLOSE_MUTUAL_TX)\n  },\n  [TX_TYPE.channelCloseSolo]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_CLOSE_SOLO_TX, OBJECT_TAG_CHANNEL_CLOSE_SOLO_TX)\n  },\n  [TX_TYPE.channelSlash]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_SLASH_TX, OBJECT_TAG_CHANNEL_SLASH_TX)\n  },\n  [TX_TYPE.channelDeposit]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_DEPOSIT_TX, OBJECT_TAG_CHANNEL_DEPOSIT_TX)\n  },\n  [TX_TYPE.channelWithdraw]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_WITHDRAW_TX, OBJECT_TAG_CHANNEL_WITHRAW_TX)\n  },\n  [TX_TYPE.channelSettle]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_SETTLE_TX, OBJECT_TAG_CHANNEL_SETTLE_TX)\n  },\n  [TX_TYPE.channelOffChain]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_OFFCHAIN_TX, OBJECT_TAG_CHANNEL_OFFCHAIN_TX),\n    2: TX_SCHEMA_FIELD(CHANNEL_OFFCHAIN_TX_2, OBJECT_TAG_CHANNEL_OFFCHAIN_TX)\n  },\n  [TX_TYPE.channel]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_TX, OBJECT_TAG_CHANNEL),\n    2: TX_SCHEMA_FIELD(CHANNEL_TX_2, OBJECT_TAG_CHANNEL)\n  },\n  [TX_TYPE.channelSnapshotSolo]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_SNAPSHOT_SOLO_TX, OBJECT_TAG_CHANNEL_SNAPSHOT_SOLO_TX)\n  },\n  [TX_TYPE.channelOffChainUpdateTransfer]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_OFFCHAIN_UPDATE_TRANSFER_TX, OBJECT_TAG_CHANNEL_OFFCHAIN_UPDATE_TRANSFER_TX)\n  },\n  [TX_TYPE.channelOffChainUpdateDeposit]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_OFFCHAIN_UPDATE_DEPOSIT_TX, OBJECT_TAG_CHANNEL_OFFCHAIN_UPDATE_DEPOSIT_TX)\n  },\n  [TX_TYPE.channelOffChainUpdateWithdrawal]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_OFFCHAIN_UPDATE_WITHDRAWAL_TX, OBJECT_TAG_CHANNEL_OFFCHAIN_UPDATE_WITHDRAWAL_TX)\n  },\n  [TX_TYPE.channelOffChainCreateContract]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_OFFCHAIN_CREATE_CONTRACT_TX, OBJECT_TAG_CHANNEL_OFFCHAIN_CREATE_CONTRACT_TX)\n  },\n  [TX_TYPE.channelOffChainCallContract]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_OFFCHAIN_CALL_CONTRACT_TX, OBJECT_TAG_CHANNEL_OFFCHAIN_CALL_CONTRACT_TX)\n  },\n  [TX_TYPE.channelReconnect]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_RECONNECT_TX, OBJECT_TAG_CHANNEL_RECONNECT_TX)\n  },\n  [TX_TYPE.proofOfInclusion]: {\n    1: TX_SCHEMA_FIELD(PROOF_OF_INCLUSION_TX, OBJECT_TAG_PROOF_OF_INCLUSION)\n  },\n  [TX_TYPE.stateTrees]: {\n    1: TX_SCHEMA_FIELD(STATE_TREES_TX, OBJECT_TAG_STATE_TREES)\n  },\n  [TX_TYPE.merklePatriciaTree]: {\n    1: TX_SCHEMA_FIELD(MERKLE_PATRICIA_TREE_TX, OBJECT_TAG_MERKLE_PATRICIA_TREE)\n  },\n  [TX_TYPE.merklePatriciaTreeValue]: {\n    1: TX_SCHEMA_FIELD(MERKLE_PATRICIA_TREE_VALUE_TX, OBJECT_TAG_MERKLE_PATRICIA_TREE_VALUE)\n  },\n  [TX_TYPE.contractsTree]: {\n    1: TX_SCHEMA_FIELD(CONTRACTS_TREE_TX, OBJECT_TAG_CONTRACTS_TREE)\n  },\n  [TX_TYPE.contractCallsTree]: {\n    1: TX_SCHEMA_FIELD(CONTRACT_CALLS_TREE_TX, OBJECT_TAG_CONTRACT_CALLS_TREE)\n  },\n  [TX_TYPE.channelsTree]: {\n    1: TX_SCHEMA_FIELD(CHANNELS_TREE_TX, OBJECT_TAG_CHANNELS_TREE)\n  },\n  [TX_TYPE.nameserviceTree]: {\n    1: TX_SCHEMA_FIELD(NAMESERVICE_TREE_TX, OBJECT_TAG_NAMESERVICE_TREE)\n  },\n  [TX_TYPE.oraclesTree]: {\n    1: TX_SCHEMA_FIELD(ORACLES_TREE_TX, OBJECT_TAG_ORACLES_TREE)\n  },\n  [TX_TYPE.accountsTree]: {\n    1: TX_SCHEMA_FIELD(ACCOUNTS_TREE_TX, OBJECT_TAG_ACCOUNTS_TREE)\n  },\n  [TX_TYPE.gaAttach]: {\n    1: TX_SCHEMA_FIELD(GA_ATTACH_TX, OBJECT_TAG_GA_ATTACH)\n  },\n  [TX_TYPE.gaMeta]: {\n    1: TX_SCHEMA_FIELD(GA_META_TX, OBJECT_TAG_GA_META)\n  }\n}\n\nexport const TX_DESERIALIZATION_SCHEMA = {\n  [OBJECT_TAG_ACCOUNT]: {\n    1: TX_SCHEMA_FIELD(ACCOUNT_TX, OBJECT_TAG_ACCOUNT),\n    2: TX_SCHEMA_FIELD(ACCOUNT_TX_2, OBJECT_TAG_ACCOUNT)\n  },\n  [OBJECT_TAG_SIGNED_TRANSACTION]: {\n    1: TX_SCHEMA_FIELD(SIGNED_TX, OBJECT_TAG_SIGNED_TRANSACTION)\n  },\n  [OBJECT_TAG_SPEND_TRANSACTION]: {\n    1: TX_SCHEMA_FIELD(SPEND_TX, OBJECT_TAG_SPEND_TRANSACTION)\n  },\n  [OBJECT_TAG_NAME_SERVICE_PRECLAIM_TRANSACTION]: {\n    1: TX_SCHEMA_FIELD(NAME_PRE_CLAIM_TX, OBJECT_TAG_NAME_SERVICE_PRECLAIM_TRANSACTION)\n  },\n  [OBJECT_TAG_NAME_SERVICE_CLAIM_TRANSACTION]: {\n    1: TX_SCHEMA_FIELD(NAME_CLAIM_TX, OBJECT_TAG_NAME_SERVICE_CLAIM_TRANSACTION),\n    2: TX_SCHEMA_FIELD(NAME_CLAIM_TX_2, OBJECT_TAG_NAME_SERVICE_CLAIM_TRANSACTION)\n  },\n  [OBJECT_TAG_NAME_SERVICE_UPDATE_TRANSACTION]: {\n    1: TX_SCHEMA_FIELD(NAME_UPDATE_TX, OBJECT_TAG_NAME_SERVICE_UPDATE_TRANSACTION)\n  },\n  [OBJECT_TAG_NAME_SERVICE_TRANSFER_TRANSACTION]: {\n    1: TX_SCHEMA_FIELD(NAME_TRANSFER_TX, OBJECT_TAG_NAME_SERVICE_TRANSFER_TRANSACTION)\n  },\n  [OBJECT_TAG_NAME_SERVICE_REVOKE_TRANSACTION]: {\n    1: TX_SCHEMA_FIELD(NAME_REVOKE_TX, OBJECT_TAG_NAME_SERVICE_REVOKE_TRANSACTION)\n  },\n  [OBJECT_TAG_CONTRACT]: {\n    1: TX_SCHEMA_FIELD(CONTRACT_TX, OBJECT_TAG_CONTRACT)\n  },\n  [OBJECT_TAG_CONTRACT_CREATE_TRANSACTION]: {\n    1: TX_SCHEMA_FIELD(CONTRACT_CREATE_TX, OBJECT_TAG_CONTRACT_CREATE_TRANSACTION)\n  },\n  [OBJECT_TAG_CONTRACT_CALL_TRANSACTION]: {\n    1: TX_SCHEMA_FIELD(CONTRACT_CALL_TX, OBJECT_TAG_CONTRACT_CALL_TRANSACTION)\n  },\n  [OBJECT_TAG_CONTRACT_CALL]: {\n    1: TX_SCHEMA_FIELD(CONTRACT_CALL_RESULT_TX, OBJECT_TAG_CONTRACT_CALL)\n  },\n  [OBJECT_TAG_ORACLE_REGISTER_TRANSACTION]: {\n    1: TX_SCHEMA_FIELD(ORACLE_REGISTER_TX, OBJECT_TAG_ORACLE_REGISTER_TRANSACTION)\n  },\n  [OBJECT_TAG_ORACLE_EXTEND_TRANSACTION]: {\n    1: TX_SCHEMA_FIELD(ORACLE_EXTEND_TX, OBJECT_TAG_ORACLE_EXTEND_TRANSACTION)\n  },\n  [OBJECT_TAG_ORACLE_QUERY_TRANSACTION]: {\n    1: TX_SCHEMA_FIELD(ORACLE_QUERY_TX, OBJECT_TAG_ORACLE_QUERY_TRANSACTION)\n  },\n  [OBJECT_TAG_ORACLE_RESPONSE_TRANSACTION]: {\n    1: TX_SCHEMA_FIELD(ORACLE_RESPOND_TX, OBJECT_TAG_ORACLE_RESPONSE_TRANSACTION)\n  },\n  [OBJECT_TAG_CHANNEL_CREATE_TX]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_CREATE_TX, OBJECT_TAG_CHANNEL_CREATE_TX)\n  },\n  [OBJECT_TAG_CHANNEL_CLOSE_MUTUAL_TX]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_CLOSE_MUTUAL_TX, OBJECT_TAG_CHANNEL_CLOSE_MUTUAL_TX)\n  },\n  [OBJECT_TAG_CHANNEL_CLOSE_SOLO_TX]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_CLOSE_SOLO_TX, OBJECT_TAG_CHANNEL_CLOSE_SOLO_TX)\n  },\n  [OBJECT_TAG_CHANNEL_SLASH_TX]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_SLASH_TX, OBJECT_TAG_CHANNEL_SLASH_TX)\n  },\n  [OBJECT_TAG_CHANNEL_DEPOSIT_TX]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_DEPOSIT_TX, OBJECT_TAG_CHANNEL_DEPOSIT_TX)\n  },\n  [OBJECT_TAG_CHANNEL_WITHRAW_TX]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_WITHDRAW_TX, OBJECT_TAG_CHANNEL_WITHRAW_TX)\n  },\n  [OBJECT_TAG_CHANNEL_SETTLE_TX]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_SETTLE_TX, OBJECT_TAG_CHANNEL_SETTLE_TX)\n  },\n  [OBJECT_TAG_CHANNEL_OFFCHAIN_TX]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_OFFCHAIN_TX, OBJECT_TAG_CHANNEL_OFFCHAIN_TX),\n    2: TX_SCHEMA_FIELD(CHANNEL_OFFCHAIN_TX_2, OBJECT_TAG_CHANNEL_OFFCHAIN_TX)\n  },\n  [OBJECT_TAG_CHANNEL]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_TX, OBJECT_TAG_CHANNEL),\n    2: TX_SCHEMA_FIELD(CHANNEL_TX_2, OBJECT_TAG_CHANNEL)\n  },\n  [OBJECT_TAG_CHANNEL_SNAPSHOT_SOLO_TX]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_SNAPSHOT_SOLO_TX, OBJECT_TAG_CHANNEL_SNAPSHOT_SOLO_TX)\n  },\n  [OBJECT_TAG_CHANNEL_OFFCHAIN_UPDATE_TRANSFER_TX]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_OFFCHAIN_UPDATE_TRANSFER_TX, OBJECT_TAG_CHANNEL_OFFCHAIN_UPDATE_TRANSFER_TX)\n  },\n  [OBJECT_TAG_CHANNEL_OFFCHAIN_UPDATE_DEPOSIT_TX]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_OFFCHAIN_UPDATE_DEPOSIT_TX, OBJECT_TAG_CHANNEL_OFFCHAIN_UPDATE_DEPOSIT_TX)\n  },\n  [OBJECT_TAG_CHANNEL_OFFCHAIN_UPDATE_WITHDRAWAL_TX]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_OFFCHAIN_UPDATE_WITHDRAWAL_TX, OBJECT_TAG_CHANNEL_OFFCHAIN_UPDATE_WITHDRAWAL_TX)\n  },\n  [OBJECT_TAG_CHANNEL_OFFCHAIN_CREATE_CONTRACT_TX]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_OFFCHAIN_CREATE_CONTRACT_TX, OBJECT_TAG_CHANNEL_OFFCHAIN_CREATE_CONTRACT_TX)\n  },\n  [OBJECT_TAG_CHANNEL_OFFCHAIN_CALL_CONTRACT_TX]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_OFFCHAIN_CALL_CONTRACT_TX, OBJECT_TAG_CHANNEL_OFFCHAIN_CALL_CONTRACT_TX)\n  },\n  [OBJECT_TAG_CHANNEL_RECONNECT_TX]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_RECONNECT_TX, OBJECT_TAG_CHANNEL_RECONNECT_TX)\n  },\n  [OBJECT_TAG_PROOF_OF_INCLUSION]: {\n    1: TX_SCHEMA_FIELD(PROOF_OF_INCLUSION_TX, OBJECT_TAG_PROOF_OF_INCLUSION)\n  },\n  [OBJECT_TAG_STATE_TREES]: {\n    1: TX_SCHEMA_FIELD(STATE_TREES_TX, OBJECT_TAG_STATE_TREES)\n  },\n  [OBJECT_TAG_MERKLE_PATRICIA_TREE]: {\n    1: TX_SCHEMA_FIELD(MERKLE_PATRICIA_TREE_TX, OBJECT_TAG_MERKLE_PATRICIA_TREE)\n  },\n  [OBJECT_TAG_MERKLE_PATRICIA_TREE_VALUE]: {\n    1: TX_SCHEMA_FIELD(MERKLE_PATRICIA_TREE_VALUE_TX, OBJECT_TAG_MERKLE_PATRICIA_TREE_VALUE)\n  },\n  [OBJECT_TAG_CONTRACTS_TREE]: {\n    1: TX_SCHEMA_FIELD(CONTRACTS_TREE_TX, OBJECT_TAG_CONTRACTS_TREE)\n  },\n  [OBJECT_TAG_CONTRACT_CALLS_TREE]: {\n    1: TX_SCHEMA_FIELD(CONTRACT_CALLS_TREE_TX, OBJECT_TAG_CONTRACT_CALLS_TREE)\n  },\n  [OBJECT_TAG_CHANNELS_TREE]: {\n    1: TX_SCHEMA_FIELD(CHANNELS_TREE_TX, OBJECT_TAG_CHANNELS_TREE)\n  },\n  [OBJECT_TAG_NAMESERVICE_TREE]: {\n    1: TX_SCHEMA_FIELD(NAMESERVICE_TREE_TX, OBJECT_TAG_NAMESERVICE_TREE)\n  },\n  [OBJECT_TAG_ORACLES_TREE]: {\n    1: TX_SCHEMA_FIELD(ORACLES_TREE_TX, OBJECT_TAG_ORACLES_TREE)\n  },\n  [OBJECT_TAG_ACCOUNTS_TREE]: {\n    1: TX_SCHEMA_FIELD(ACCOUNTS_TREE_TX, OBJECT_TAG_ACCOUNTS_TREE)\n  },\n  [OBJECT_TAG_GA_ATTACH]: {\n    1: TX_SCHEMA_FIELD(GA_ATTACH_TX, OBJECT_TAG_GA_ATTACH)\n  },\n  [OBJECT_TAG_GA_META]: {\n    1: TX_SCHEMA_FIELD(GA_META_TX, OBJECT_TAG_GA_META)\n  },\n  [OBJECT_TAG_SOPHIA_BYTE_CODE]: {\n    1: TX_SCHEMA_FIELD(CONTRACT_BYTE_CODE_ROMA, OBJECT_TAG_SOPHIA_BYTE_CODE),\n    2: TX_SCHEMA_FIELD(CONTRACT_BYTE_CODE_MINERVA, OBJECT_TAG_SOPHIA_BYTE_CODE),\n    3: TX_SCHEMA_FIELD(CONTRACT_BYTE_CODE_LIMA, OBJECT_TAG_SOPHIA_BYTE_CODE)\n  }\n}\n\n// VERIFICATION SCHEMA\n\nconst ERROR_TYPE = { ERROR: 'error', WARNING: 'warning' }\nconst VERIFICATION_FIELD = (msg, verificationFn, error) => [msg, verificationFn, error]\n\nconst VALIDATORS = {\n  signature: 'signature',\n  insufficientFee: 'insufficientFee',\n  expiredTTL: 'expiredTTL',\n  insufficientBalanceForAmountFee: 'insufficientBalanceForAmountFee',\n  insufficientBalanceForAmount: 'insufficientBalanceForAmount',\n  nonceUsed: 'nonceUsed',\n  nonceHigh: 'nonceHigh',\n  minGasPrice: 'minGasPrice',\n  vmAndAbiVersion: 'vmAndAbiVersion',\n  insufficientBalanceForFeeNameFee: 'insufficientBalanceForFeeNameFee'\n}\n\nconst ERRORS = {\n  invalidSignature: { key: 'InvalidSignature', type: ERROR_TYPE.ERROR, txKey: 'signature' },\n  insufficientFee: { key: 'InsufficientFee', type: ERROR_TYPE.ERROR, txKey: 'fee' },\n  expiredTTL: { key: 'ExpiredTTL', type: ERROR_TYPE.ERROR, txKey: 'ttl' },\n  insufficientBalanceForAmountFee: { key: 'InsufficientBalanceForAmountFee', type: ERROR_TYPE.WARNING, txKey: 'fee' },\n  insufficientBalanceForAmount: { key: 'InsufficientBalanceForAmount', type: ERROR_TYPE.WARNING, txKey: 'amount' },\n  nonceUsed: { key: 'NonceUsed', type: ERROR_TYPE.ERROR, txKey: 'nonce' },\n  nonceHigh: { key: 'NonceHigh', type: ERROR_TYPE.WARNING, txKey: 'nonce' },\n  minGasPrice: { key: 'minGasPrice', type: ERROR_TYPE.ERROR, txKey: 'gasPrice' },\n  vmAndAbiVersion: { key: 'vmAndAbiVersion', type: ERROR_TYPE.ERROR, txKey: 'ctVersion' },\n  insufficientBalanceForFeeNameFee: { key: 'insufficientBalanceForFeeNameFee', type: ERROR_TYPE.ERROR, txKey: 'nameFee' }\n}\n\nexport const SIGNATURE_VERIFICATION_SCHEMA = [\n  VERIFICATION_FIELD(\n    () => 'The signature cannot be verified, please verify that you used the correct network id and the correct private key for the sender address',\n    VALIDATORS.signature,\n    ERRORS.invalidSignature\n  )\n]\nexport const CONTRACT_VERIFICATION_SCHEMA = [\n  VERIFICATION_FIELD(\n    ({ ctVersion, consensusProtocolVersion, txType }) => `Wrong abi/vm version, Supported is: ${PROTOCOL_VM_ABI[consensusProtocolVersion] ? JSON.stringify(PROTOCOL_VM_ABI[consensusProtocolVersion][txType]) : ' None for this protocol ' + consensusProtocolVersion}`,\n    VALIDATORS.vmAndAbiVersion,\n    ERRORS.vmAndAbiVersion\n  ),\n  VERIFICATION_FIELD(\n    () => `The gasPrice must be bigger then ${MIN_GAS_PRICE}`,\n    VALIDATORS.minGasPrice,\n    ERRORS.minGasPrice\n  )\n]\nexport const NAME_CLAIM_VERIFICATION_SCHEMA = [\n  VERIFICATION_FIELD(\n    ({ balance }) => `The account balance ${balance} is not enough to execute the transaction`,\n    VALIDATORS.insufficientBalanceForFeeNameFee,\n    ERRORS.insufficientBalanceForFeeNameFee\n  )\n]\nexport const BASE_VERIFICATION_SCHEMA = [\n  VERIFICATION_FIELD(\n    ({ minFee }) => `The fee for the transaction is too low, the minimum fee for this transaction is ${minFee}`,\n    VALIDATORS.insufficientFee,\n    ERRORS.insufficientFee\n  ),\n  VERIFICATION_FIELD(\n    ({ height }) => `The TTL is already expired, the current height is ${height}`,\n    VALIDATORS.expiredTTL,\n    ERRORS.expiredTTL\n  ),\n  VERIFICATION_FIELD(\n    ({ balance }) => `The account balance ${balance} is not enough to execute the transaction`,\n    VALIDATORS.insufficientBalanceForAmountFee,\n    ERRORS.insufficientBalanceForAmountFee\n  ),\n  VERIFICATION_FIELD(\n    ({ balance }) => `The account balance ${balance} is not enough to execute the transaction`,\n    VALIDATORS.insufficientBalanceForAmount,\n    ERRORS.insufficientBalanceForAmount\n  ),\n  VERIFICATION_FIELD(\n    ({ accountNonce }) => `The nonce is invalid(already used). Next valid nonce is ${accountNonce + 1})`,\n    VALIDATORS.nonceUsed,\n    ERRORS.nonceUsed\n  ),\n  VERIFICATION_FIELD(\n    ({ accountNonce }) => `The nonce is technically valid but will not be processed immediately by the node (next valid nonce is ${accountNonce + 1})`,\n    VALIDATORS.nonceHigh,\n    ERRORS.nonceHigh\n  )\n]\n","/**\n * Big Number Helpers\n * @module @aeternity/aepp-sdk/es/utils/bignumber\n * @example import { parseBigNumber, asBigNumber, isBigNumber, ceil } from '@aeternity/aepp-sdk/es/utils/bignumber'\n */\nimport { BigNumber } from 'bignumber.js'\n\n/**\n * Convert number to string\n * @param {String|Number|BigNumber} number number to convert\n * @return {String}\n */\nexport function parseBigNumber (number) {\n  return BigNumber(number.toString()).toString(10)\n}\n\n/**\n * Convert number to BigNumber instance\n * @param {String|Number|BigNumber} number number to convert\n * @return {BigNumber}\n */\nexport function asBigNumber (number) {\n  return BigNumber(number.toString())\n}\n\n/**\n * Check if value is BigNumber, Number or number string representation\n * @param {String|Number|BigNumber} number number to convert\n * @return {Boolean}\n */\nexport function isBigNumber (number) {\n  return !isNaN(number) || Number.isInteger(number) || BigNumber.isBigNumber(number)\n}\n\n/**\n * BigNumber ceil operation\n * @param {String|Number|BigNumber} bigNumber\n * @return {BigNumber}\n */\nexport function ceil (bigNumber) {\n  return bigNumber.integerValue(BigNumber.ROUND_CEIL)\n}\n\nexport default { ceil, isBigNumber, asBigNumber, parseBigNumber }\n","import * as R from 'ramda'\nimport BigNumber from 'bignumber.js'\n\nimport {\n  assertedType,\n  decodeBase58Check,\n  decodeBase64Check,\n  encodeBase58Check, encodeBase64Check,\n  hash,\n  salt\n} from '../../utils/crypto'\nimport { toBytes } from '../../utils/bytes'\nimport {\n  ID_TAG_PREFIX,\n  PREFIX_ID_TAG,\n  AENS_NAME_DOMAINS,\n  NAME_BID_RANGES,\n  NAME_BID_MAX_LENGTH,\n  NAME_FEE,\n  NAME_FEE_BID_INCREMENT,\n  NAME_BID_TIMEOUTS,\n  FATE_ABI,\n  VM_TYPE\n} from './schema'\nimport { ceil } from '../../utils/bignumber'\n\n/**\n * JavaScript-based Transaction builder helper function's\n * @module @aeternity/aepp-sdk/es/tx/builder/helpers\n * @export TxBuilderHelper\n * @example import TxBuilderHelper from '@aeternity/aepp-sdk/es/tx/builder/helpers'\n */\n\nexport const createSalt = salt\n\nconst base64Types = ['tx', 'st', 'ss', 'pi', 'ov', 'or', 'cb', 'cs', 'ba']\n\n/**\n * Build a contract public key\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder/helpers\n * @param {string} ownerId The public key of the owner account\n * @param {number} nonce the nonce of the transaction\n * @return {string} Contract public key\n */\nexport function buildContractId (ownerId, nonce) {\n  const ownerIdAndNonce = Buffer.from([...decode(ownerId, 'ak'), ...toBytes(nonce)])\n  const b2bHash = hash(ownerIdAndNonce)\n  return encode(b2bHash, 'ct')\n}\n\n/**\n * Build hash\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder/helpers\n * @param {String} prefix Transaction hash prefix\n * @param {Buffer} data Rlp encoded transaction buffer\n * @return {String} Transaction hash\n */\nexport function buildHash (prefix, data) {\n  return encode(hash(data), prefix)\n}\n\n/**\n * Build a oracle query id\n * @function\n * @function* @alias module:@aeternity/aepp-sdk/es/tx/builder/helpers\n * @param {String} senderId The public key of the sender account\n * @param {Number} nonce the nonce of the transaction\n * @param {Number} oracleId The oracle public key\n * @return {string} Contract public key\n */\nexport function oracleQueryId (senderId, nonce, oracleId) {\n  function _int32 (val) {\n    const nonceBE = toBytes(val, true)\n    return Buffer.concat([Buffer.alloc(32 - nonceBE.length), nonceBE])\n  }\n\n  const b2bHash = hash(Buffer.from([...decode(senderId, 'ak'), ..._int32(nonce), ...decode(oracleId, 'ok')]))\n  return encode(b2bHash, 'oq')\n}\n\n/**\n * Format the salt into a 64-byte hex string\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder/helpers\n * @param {number} salt\n * @return {string} Zero-padded hex string of salt\n */\nexport function formatSalt (salt) {\n  return Buffer.from(salt.toString(16).padStart(64, '0'), 'hex')\n}\n\n/**\n * Calculate 256bits Blake2b nameId of `input`\n * as defined in https://github.com/aeternity/protocol/blob/master/AENS.md#hashing\n * @rtype (input: String) => hash: String\n * @param {String} input - Data to hash\n * @return {Buffer} Hash\n */\nexport function nameHash (input) {\n  let buf = Buffer.allocUnsafe(32).fill(0)\n  if (!input) {\n    return buf\n  } else {\n    const labels = input.split('.')\n    for (let i = 0; i < labels.length; i++) {\n      buf = hash(Buffer.concat([buf, hash(labels[i])]))\n    }\n    return buf\n  }\n}\n\n/**\n * Encode a domain name\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder/helpers\n * @param {String} name Name to encode\n * @return {String} `nm_` prefixed encoded domain name\n */\nexport function produceNameId (name) {\n  const namespace = R.last(name.split('.'))\n  if (namespace === 'chain') return encode(hash(name.toLowerCase()), 'nm')\n  return encode(nameHash(name), 'nm')\n}\n\n/**\n * Generate the commitment hash by hashing the formatted salt and\n * name, base 58 encoding the result and prepending 'cm_'\n *\n * @alias module:@aeternity/aepp-sdk/es/tx/builder/helpers\n * @function commitmentHash\n * @category async\n * @rtype (name: String, salt?: String) => hash: Promise[String]\n * @param {String} name - Name to be registered\n * @param {Number} salt Random salt\n * @return {String} Commitment hash\n */\nexport function commitmentHash (name, salt = createSalt()) {\n  const namespace = R.last(name.split('.'))\n  if (namespace === 'chain') return `cm_${encodeBase58Check(hash(Buffer.concat([Buffer.from(name.toLowerCase()), formatSalt(salt)])))}`\n  return `cm_${encodeBase58Check(hash(Buffer.concat([nameHash(name.toLowerCase()), formatSalt(salt)])))}`\n}\n\n/**\n * Decode data using the default encoding/decoding algorithm\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder/helpers\n * @param {string} data  An encoded and prefixed string (ex tx_..., sg_..., ak_....)\n * @param {string} type Prefix of Transaction\n * @return {Buffer} Buffer of decoded Base58check or Base64check data\n */\nexport function decode (data, type = '') {\n  if (!type) type = data.split('_')[0]\n  return base64Types.includes(type)\n    ? decodeBase64Check(assertedType(data, type))\n    : decodeBase58Check(assertedType(data, type))\n}\n\n/**\n * Encode data using the default encoding/decoding algorithm\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder/helpers\n * @param {Buffer|String} data  An decoded data\n * @param {string} type Prefix of Transaction\n * @return {String} Encoded string Base58check or Base64check data\n */\nexport function encode (data, type) {\n  return `${type}_${base64Types.includes(type)\n    ? encodeBase64Check(data)\n    : encodeBase58Check(data)}`\n}\n\n/**\n * Utility function to create and _id type\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder/helpers\n * @param {string} hashId Encoded hash\n * @return {Buffer} Buffer Buffer with ID tag and decoded HASh\n */\nexport function writeId (hashId) {\n  const prefix = hashId.slice(0, 2)\n  const idTag = PREFIX_ID_TAG[prefix]\n  if (!idTag) throw new Error(`Id tag for prefix ${prefix} not found.`)\n  return Buffer.from([...toBytes(idTag), ...decode(hashId, prefix)])\n}\n\n/**\n * Utility function to read and _id type\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder/helpers\n * @param {Buffer} buf Data\n * @return {String} Encoided hash string with prefix\n */\nexport function readId (buf) {\n  const tag = buf.readUIntBE(0, 1)\n  const prefix = ID_TAG_PREFIX[tag]\n  if (!prefix) throw new Error(`Prefix for id-tag ${tag} not found.`)\n  return encode(buf.slice(1, buf.length), prefix)\n}\n\n/**\n * Utility function to convert int to bytes\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder/helpers\n * @param {Number|String|BigNumber} val Value\n * @return {Buffer} Buffer Buffer from number(BigEndian)\n */\nexport function writeInt (val) {\n  return toBytes(val, true)\n}\n\n/**\n * Utility function to convert bytes to int\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder/helpers\n * @param {Buffer} buf Value\n * @return {String} Buffer Buffer from number(BigEndian)\n */\nexport function readInt (buf = Buffer.from([])) {\n  return BigNumber(buf.toString('hex'), 16).toString(10)\n}\n\n/**\n * Helper function to build pointers for name update TX\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder/helpers\n * @param {Array} pointers - Array of pointers ([ { key: 'account_pubkey', id: 'ak_32klj5j23k23j5423l434l2j3423'} ])\n * @return {Array} Serialized pointers array\n */\nexport function buildPointers (pointers) {\n  return pointers.map(\n    p => [\n      toBytes(p.key),\n      writeId(p.id)\n    ]\n  )\n}\n\n/**\n * Helper function to read pointers from name update TX\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder/helpers\n * @param {Array} pointers - Array of pointers ([ { key: 'account_pubkey', id: 'ak_32klj5j23k23j5423l434l2j3423'} ])\n * @return {Array} Deserialize pointer array\n */\nexport function readPointers (pointers) {\n  return pointers.map(\n    ([key, id]) => Object.assign({\n      key: key.toString(),\n      id: readId(id)\n    })\n  )\n}\n\n/**\n * Is name valid\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder/helpers\n * @param {string} name\n * @param {boolean} [throwError=true] Throw error on invalid\n * @return Boolean\n * @throws Error\n */\nexport function isNameValid (name, throwError = true) {\n  if ((!name || typeof name !== 'string') && throwError) throw new Error('AENS: Name must be a string')\n  if (!AENS_NAME_DOMAINS.includes(R.last(name.split('.')))) {\n    if (throwError) throw new Error(`AENS: Invalid name domain. Possible domains [${AENS_NAME_DOMAINS}]`)\n    return false\n  }\n  return true\n}\n\n/**\n * What kind of a hash is this? If it begins with 'ak_' it is an\n * account key, if with 'ok_' it's an oracle key.\n *\n * @param s - the hash.\n * returns the type, or throws an exception if type not found.\n */\nexport function classify (s) {\n  const keys = {\n    ak: 'account_pubkey',\n    ok: 'oracle_pubkey',\n    ct: 'contract_pubkey',\n    ch: 'channel'\n  }\n\n  if (!s.match(/^[a-z]{2}_.+/)) {\n    throw Error('Not a valid hash')\n  }\n\n  const klass = s.substr(0, 2)\n  if (klass in keys) {\n    return keys[klass]\n  } else {\n    throw Error(`Unknown class ${klass}`)\n  }\n}\n\n/**\n * Validate name pointers array\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder/helpers\n * @param {String[]} pointers Pointers array. Allowed values is: account(ak_), oracle(ok_), contract(ct_), channel(ch_)\n * @return {Boolean}\n */\nexport function validatePointers (pointers = []) {\n  return !pointers\n    .find(p => !p || typeof p !== 'string' || !['ak', 'ok', 'ct', 'ch'].includes(p.split('_')[0]))\n}\n\n/**\n * Get the minimum name fee for a domain\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder/helpers\n * @param {String} domain the domain name to get the fee for\n * @return {String} the minimum fee for the domain auction\n */\nexport function getMinimumNameFee (domain) {\n  const nameLength = domain.replace('.chain', '').length\n  return NAME_BID_RANGES[nameLength >= NAME_BID_MAX_LENGTH ? NAME_BID_MAX_LENGTH : nameLength]\n}\n\n/**\n * Compute bid fee for AENS auction\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder/helpers\n * @param {String} domain the domain name to get the fee for\n * @param {Number|String} startFee Auction start fee\n * @param {Number} [increment=0.5] Bid multiplier(In percentage, must be between 0 and 1)\n * @return {String} Bid fee\n */\nexport function computeBidFee (domain, startFee = NAME_FEE, increment = NAME_FEE_BID_INCREMENT) {\n  if (!(Number(increment) === increment && increment % 1 !== 0)) throw new Error(`Increment must be float. Current increment ${increment}`)\n  if (increment < NAME_FEE_BID_INCREMENT) throw new Error(`minimum increment percentage is ${NAME_FEE_BID_INCREMENT}`)\n  return ceil(\n    BigNumber(BigNumber(startFee).eq(NAME_FEE) ? getMinimumNameFee(domain) : startFee).times(BigNumber(NAME_FEE_BID_INCREMENT).plus(1))\n  )\n}\n\n/**\n * Compute auction end height\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder/helpers\n * @param {String} domain the domain name to get the fee for\n * @param {Number|String} claimHeight Auction starting height\n * @return {String} Auction end height\n */\nexport function computeAuctionEndBlock (domain, claimHeight) {\n  return R.cond([\n    [R.lt(5), R.always(NAME_BID_TIMEOUTS[4].plus(claimHeight))],\n    [R.lt(9), R.always(NAME_BID_TIMEOUTS[8].plus(claimHeight))],\n    [R.lte(NAME_BID_MAX_LENGTH), R.always(NAME_BID_TIMEOUTS[12].plus(claimHeight))],\n    [R.T, R.always(BigNumber(claimHeight))]\n  ])(domain.replace('.chain', '').length).toString(10)\n}\n\n/**\n * Get contract backend by abiVersion\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder/helpers\n * @param {Object} { abiVersion } abiVersion Transaction abiVersion\n * @return {String} Backend\n */\nexport function getContractBackendFromTx ({ abiVersion } = {}) {\n  return FATE_ABI.includes(parseInt(abiVersion))\n    ? VM_TYPE.FATE\n    : VM_TYPE.AEVM\n}\n\n/**\n * Is name accept going to auction\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder/helpers\n * @param {String} name Transaction abiVersion\n * @return {Boolean}\n */\nexport function isAuctionName (name) {\n  return name.replace('.chain', '').length < 13\n}\n\nexport default {\n  readPointers,\n  buildPointers,\n  buildContractId,\n  readId,\n  writeId,\n  readInt,\n  writeInt,\n  encode,\n  decode,\n  commitmentHash,\n  formatSalt,\n  oracleQueryId,\n  getContractBackendFromTx,\n  createSalt,\n  buildHash,\n  isNameValid,\n  produceNameId,\n  classify,\n  isAuctionName,\n  validatePointers\n}\n","/*\n * ISC License (ISC)\n * Copyright 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Crypto module\n * @module @aeternity/aepp-sdk/es/utils/crypto\n * @example import * as Crypto from '@aeternity/aepp-sdk/es/utils/crypto'\n */\n\nimport bs58check from 'bs58check'\nimport * as RLP from 'rlp'\nimport { blake2b } from 'blakejs'\nimport ed2curve from 'ed2curve'\nimport nacl from 'tweetnacl'\nimport aesjs from 'aes-js'\nimport shajs from 'sha.js'\n\nimport { leftPad, rightPad, toBytes } from './bytes'\nimport { decode as decodeNode } from '../tx/builder/helpers'\n\nconst Ecb = aesjs.ModeOfOperation.ecb\n\nexport const ADDRESS_FORMAT = {\n  sophia: 1,\n  api: 2,\n  raw: 3\n}\n\n/**\n * Format account address\n * @rtype (format: String, address: String) => tx: Promise[String]\n * @param {String} format - Format type\n * @param {String} address - Base58check account address\n * @return {String} Formatted address\n */\nexport function formatAddress (format = ADDRESS_FORMAT.api, address) {\n  switch (format) {\n    case ADDRESS_FORMAT.api:\n      return address\n    case ADDRESS_FORMAT.sophia:\n      return `0x${decodeNode(address, 'ak').toString('hex')}`\n  }\n}\n\n/**\n * Check if address is valid\n * @rtype (input: String) => valid: Boolean\n * @param {String} address - Address\n * @param {String} prefix Transaction prefix. Default: 'ak'\n * @return {Boolean} valid\n */\nexport function isAddressValid (address, prefix = 'ak') {\n  let isValid\n  try {\n    isValid = decodeBase58Check(assertedType(address, prefix)).length === 32\n  } catch (e) {\n    isValid = false\n  }\n  return isValid\n}\n\n/**\n * Convert base58Check address to hex string\n * @rtype (base58CheckAddress: String) => hexAddress: String\n * @param {String} base58CheckAddress - Address\n * @return {String} Hex string\n */\nexport function addressToHex (base58CheckAddress) {\n  return `0x${decodeBase58Check(assertedType(base58CheckAddress, 'ak')).toString('hex')}`\n}\n\n/**\n * Parse decimal address and return base58Check encoded address with prefix 'ak'\n * @rtype (input: String) => address: String\n * @param {String} decimalAddress - Address\n * @return {String} address\n */\nexport function addressFromDecimal (decimalAddress) {\n  return aeEncodeKey(toBytes(decimalAddress, true))\n}\n\n/**\n * Calculate 256bits Blake2b hash of `input`\n * @rtype (input: String) => hash: String\n * @param {String|Buffer} input - Data to hash\n * @return {Buffer} Hash\n */\nexport function hash (input) {\n  return Buffer.from(blake2b(input, null, 32)) // 256 bits\n}\n\n/**\n * Calculate SHA256 hash of `input`\n * @rtype (input: String) => hash: String\n * @param {String} input - Data to hash\n * @return {String} Hash\n */\nexport function sha256hash (input) {\n  return shajs('sha256').update(input).digest()\n}\n\n/**\n * Generate a random salt (positive integer)\n * @rtype () => salt: Number\n * @return {Number} random salt\n */\nexport function salt () {\n  return Math.floor(Math.random() * Math.floor(Number.MAX_SAFE_INTEGER))\n}\n\n/**\n * Base64check encode given `input`\n * @rtype (input: String|buffer) => Buffer\n * @param {String} input - Data to encode\n * @return {Buffer} Base64check encoded data\n */\nexport function encodeBase64Check (input) {\n  const buffer = Buffer.from(input)\n  const checksum = checkSumFn(input)\n  const payloadWithChecksum = Buffer.concat([buffer, checksum], buffer.length + 4)\n  return payloadWithChecksum.toString('base64')\n}\n\nexport function checkSumFn (payload) {\n  return sha256hash(sha256hash(payload)).slice(0, 4)\n}\n\nfunction decodeRaw (buffer) {\n  const payload = buffer.slice(0, -4)\n  const checksum = buffer.slice(-4)\n  const newChecksum = checkSumFn(payload)\n\n  if (!checksum.equals(newChecksum)) return\n\n  return payload\n}\n\n/**\n * Base64check decode given `str`\n * @rtype (str: String) => Buffer\n * @param {String} str - Data to decode\n * @return {Buffer} Base64check decoded data\n */\nexport function decodeBase64Check (str) {\n  const buffer = Buffer.from(str, 'base64')\n  const payload = decodeRaw(buffer)\n  if (!payload) throw new Error('Invalid checksum')\n  return Buffer.from(payload)\n}\n\n/**\n * Base58 encode given `input`\n * @rtype (input: String) => String\n * @param {String|Buffer} input - Data to encode\n * @return {String} Base58 encoded data\n */\nexport function encodeBase58Check (input) {\n  return bs58check.encode(Buffer.from(input))\n}\n\n/**\n * Base58 decode given `str`\n * @rtype (str: String) => Buffer\n * @param {String} str - Data to decode\n * @return {Buffer} Base58 decoded data\n */\nexport function decodeBase58Check (str) {\n  return bs58check.decode(str)\n}\n\n/**\n * Conver hex string to Uint8Array\n * @rtype (str: String) => Uint8Array\n * @param {String} str - Data to conver\n * @return {Uint8Array} - converted data\n */\nexport function hexStringToByte (str) {\n  if (!str) {\n    return new Uint8Array()\n  }\n\n  const a = []\n  for (let i = 0, len = str.length; i < len; i += 2) {\n    a.push(parseInt(str.substr(i, 2), 16))\n  }\n\n  return new Uint8Array(a)\n}\n\n/**\n * Converts a positive integer to the smallest possible\n * representation in a binary digit representation\n * @rtype (value: Number) => Buffer\n * @param {Number} value - Value to encode\n * @return {Buffer} - Encoded data\n */\nexport function encodeUnsigned (value) {\n  const binary = Buffer.allocUnsafe(4)\n  binary.writeUInt32BE(value)\n  return binary.slice(binary.findIndex(i => i !== 0))\n}\n\n// Todo Duplicated in tx builder. remove\n/**\n * Compute contract address\n * @rtype (owner: String, nonce: Number) => String\n * @param {String} owner - Address of contract owner\n * @param {Number} nonce - Round when contract was created\n * @return {String} - Contract address\n */\nexport function encodeContractAddress (owner, nonce) {\n  const publicKey = decodeBase58Check(assertedType(owner, 'ak'))\n  const binary = Buffer.concat([publicKey, encodeUnsigned(nonce)])\n  return `ct_${encodeBase58Check(hash(binary))}`\n}\n\n// KEY-PAIR HELPERS\n\n/**\n * Generate keyPair from secret key\n * @rtype (secret: Uint8Array) => KeyPair\n * @param {Uint8Array} secret - secret key\n * @return {Object} - Object with Private(privateKey) and Public(publicKey) keys\n */\nexport function generateKeyPairFromSecret (secret) {\n  return nacl.sign.keyPair.fromSecretKey(secret)\n}\n\n/**\n * Generate a random ED25519 keypair\n * @rtype (raw: Boolean) => {publicKey: String, secretKey: String} | {publicKey: Buffer, secretKey: Buffer}\n * @param {Boolean} raw - Whether to return raw (binary) keys\n * @return {Object} Key pair\n */\nexport function generateKeyPair (raw = false) {\n  // <node>/apps/aens/test/aens_test_utils.erl\n  const keyPair = nacl.sign.keyPair()\n\n  const publicBuffer = Buffer.from(keyPair.publicKey)\n  const secretBuffer = Buffer.from(keyPair.secretKey)\n\n  if (raw) {\n    return {\n      publicKey: publicBuffer,\n      secretKey: secretBuffer\n    }\n  } else {\n    return {\n      publicKey: `ak_${encodeBase58Check(publicBuffer)}`,\n      secretKey: secretBuffer.toString('hex')\n    }\n  }\n}\n\n/**\n * Encrypt given public key using `password`\n * @rtype (password: String, binaryKey: Buffer) => Uint8Array\n * @param {String} password - Password to encrypt with\n * @param {Buffer} binaryKey - Key to encrypt\n * @return {Uint8Array} Encrypted key\n */\nexport function encryptPublicKey (password, binaryKey) {\n  return encryptKey(password, rightPad(32, binaryKey))\n}\n\n/**\n * Encrypt given private key using `password`\n * @rtype (password: String, binaryKey: Buffer) => Uint8Array\n * @param {String} password - Password to encrypt with\n * @param {Buffer} binaryKey - Key to encrypt\n * @return {Uint8Array} Encrypted key\n */\nexport function encryptPrivateKey (password, binaryKey) {\n  return encryptKey(password, leftPad(64, binaryKey))\n}\n\n/**\n * Encrypt given data using `password`\n * @rtype (password: String, binaryData: Buffer) => Uint8Array\n * @param {String} password - Password to encrypt with\n * @param {Buffer} binaryData - Data to encrypt\n * @return {Uint8Array} Encrypted data\n */\nexport function encryptKey (password, binaryData) {\n  const hashedPasswordBytes = sha256hash(password)\n  const aesEcb = new Ecb(hashedPasswordBytes)\n  return aesEcb.encrypt(binaryData)\n}\n\n/**\n * Decrypt given data using `password`\n * @rtype (password: String, encrypted: String) => Uint8Array\n * @param {String} password - Password to decrypt with\n * @param {String} encrypted - Data to decrypt\n * @return {Buffer} Decrypted data\n */\nexport function decryptKey (password, encrypted) {\n  const encryptedBytes = Buffer.from(encrypted)\n  const hashedPasswordBytes = sha256hash(password)\n  const aesEcb = new Ecb(hashedPasswordBytes)\n  return Buffer.from(aesEcb.decrypt(encryptedBytes))\n}\n\n// SIGNATURES\n\n/**\n * Generate signature\n * @rtype (data: String|Buffer, privateKey: Buffer) => Buffer\n * @param {String|Buffer} data - Data to sign\n * @param {String|Buffer} privateKey - Key to sign with\n * @return {Buffer} Signature\n */\nexport function sign (data, privateKey) {\n  return nacl.sign.detached(Buffer.from(data), Buffer.from(privateKey))\n}\n\n/**\n * Verify that signature was signed by public key\n * @rtype (str: String, signature: Buffer, publicKey: Buffer) => Boolean\n * @param {String|Buffer} str - Data to verify\n * @param {Buffer} signature - Signature to verify\n * @param {Buffer} publicKey - Key to verify against\n * @return {Boolean} Valid?\n */\nexport function verify (str, signature, publicKey) {\n  return nacl.sign.detached.verify(new Uint8Array(str), signature, publicKey)\n}\n\n/**\n * @typedef {Array} Transaction\n * @rtype Transaction: [tag: Buffer, version: Buffer, [signature: Buffer], data: Buffer]\n */\n\n/**\n * Prepare a transaction for posting to the blockchain\n * @rtype (signature: Buffer | String, data: Buffer) => Transaction\n * @param {Buffer} signature - Signature of `data`\n * @param {Buffer} data - Transaction data\n * @return {Transaction} Transaction\n */\nexport function prepareTx (signature, data) {\n  // the signed tx deserializer expects a 4-tuple:\n  // <tag, version, signatures_array, binary_tx>\n  return [Buffer.from([11]), Buffer.from([1]), [Buffer.from(signature)], data]\n}\n\nexport function personalMessageToBinary (message) {\n  const p = Buffer.from('aeternity Signed Message:\\n', 'utf8')\n  const msg = Buffer.from(message, 'utf8')\n  if (msg.length >= 0xFD) throw new Error('message too long')\n  return Buffer.concat([Buffer.from([p.length]), p, Buffer.from([msg.length]), msg])\n}\n\nexport function signPersonalMessage (message, privateKey) {\n  return sign(hash(personalMessageToBinary(message)), privateKey)\n}\n\nexport function verifyPersonalMessage (str, signature, publicKey) {\n  return verify(hash(personalMessageToBinary(str)), signature, publicKey)\n}\n\n/**\n * æternity readable public keys are the base58-encoded public key, prepended\n * with 'ak_'\n * @rtype (binaryKey: Buffer) => String\n * @param {Buffer} binaryKey - Key to encode\n * @return {String} Encoded key\n */\nexport function aeEncodeKey (binaryKey) {\n  const publicKeyBuffer = Buffer.from(binaryKey, 'hex')\n  const pubKeyAddress = encodeBase58Check(publicKeyBuffer)\n  return `ak_${pubKeyAddress}`\n}\n\n/**\n * Generate a new key pair using {@link generateKeyPair} and encrypt it using `password`\n * @rtype (password: String) => {publicKey: Uint8Array, secretKey: Uint8Array}\n * @param {String} password - Password to encrypt with\n * @return {Object} Encrypted key pair\n */\nexport function generateSaveWallet (password) {\n  const keys = generateKeyPair(true)\n  return {\n    publicKey: encryptPublicKey(password, keys.publicKey),\n    secretKey: encryptPrivateKey(password, keys.secretKey)\n  }\n}\n\n/**\n * Decrypt an encrypted private key\n * @rtype (password: String, encrypted: Buffer) => Buffer\n * @param {String} password - Password to decrypt with\n * @return {Buffer} Decrypted key\n */\nexport function decryptPrivateKey (password, encrypted) {\n  return decryptKey(password, encrypted)\n}\n\n/**\n * Decrypt an encrypted public key\n * @rtype (password: String, encrypted: Buffer) => Buffer\n * @param {String} password - Password to decrypt with\n * @return {Buffer} Decrypted key\n */\nexport function decryptPubKey (password, encrypted) {\n  return decryptKey(password, encrypted).slice(0, 65)\n}\n\n/**\n * Assert base58 encoded type and return its payload\n * @rtype (data: String, type: String) => String, throws: Error\n * @param {String} data - ae data\n * @param {String} type - Prefix\n * @param forceError\n * @return {String|Boolean} Payload\n */\nexport function assertedType (data, type, forceError = false) {\n  if (RegExp(`^${type}_.+$`).test(data)) {\n    return data.split('_')[1]\n  } else {\n    if (!forceError) throw Error(`Data doesn't match expected type ${type}`)\n    return false\n  }\n}\n\n/**\n * Decode a transaction\n * @rtype (txHash: String) => Buffer\n * @param {String} txHash - Transaction hash\n * @return {Buffer} Decoded transaction\n */\nexport function decodeTx (txHash) {\n  return RLP.decode(Buffer.from(decodeBase64Check(assertedType(txHash, 'tx'))))\n}\n\n/**\n * Encode a transaction\n * @rtype (txData: Transaction) => String\n * @param {Transaction} txData - Transaction to encode\n * @return {String} Encoded transaction\n */\nexport function encodeTx (txData) {\n  const encodedTxData = RLP.encode(txData)\n  const encodedTx = encodeBase64Check(encodedTxData)\n  return `tx_${encodedTx}`\n}\n\n/**\n * Check key pair for validity\n *\n * Sign a message, and then verifying that signature\n * @rtype (privateKey: Buffer, publicKey: Buffer) => Boolean\n * @param {Buffer} privateKey - Private key to verify\n * @param {Buffer} publicKey - Public key to verify\n * @return {Boolean} Valid?\n */\nexport function isValidKeypair (privateKey, publicKey) {\n  const message = Buffer.from('TheMessage')\n  const signature = sign(message, privateKey)\n  return verify(message, signature, publicKey)\n}\n\n/**\n * Obtain key pair from `env`\n *\n * Designed to be used with `env` from nodejs. Assumes enviroment variables\n * `WALLET_PRIV` and `WALLET_PUB`.\n * @rtype (env: Object) => {publicKey: String, secretKey: String}, throws: Error\n * @param {Object} env - Environment\n * @param {Boolean} [force=false] Force throwing error\n * @return {Object} Key pair\n */\nexport function envKeypair (env, force = false) {\n  const keypair = {\n    secretKey: env.WALLET_PRIV,\n    publicKey: env.WALLET_PUB\n  }\n\n  if (keypair.publicKey && keypair.secretKey) {\n    return keypair\n  } else {\n    if (!force) throw Error('Environment variables WALLET_PRIV and WALLET_PUB need to be set')\n  }\n}\n\n/**\n * This function encrypts a message using base58check encoded and 'ak' prefixed\n * publicKey such that only the corresponding secretKey will\n * be able to decrypt\n * @rtype (msg: String, publicKey: String) => Object\n * @param {Buffer} msg - Data to encode\n * @param {String} publicKey - Public key\n * @return {Object}\n */\nexport function encryptData (msg, publicKey) {\n  const ephemeralKeyPair = nacl.box.keyPair()\n  const pubKeyUInt8Array = decodeBase58Check(assertedType(publicKey, 'ak'))\n  const nonce = nacl.randomBytes(nacl.box.nonceLength)\n\n  const encryptedMessage = nacl.box(\n    Buffer.from(msg),\n    nonce,\n    ed2curve.convertPublicKey(pubKeyUInt8Array),\n    ephemeralKeyPair.secretKey\n  )\n\n  return {\n    ciphertext: Buffer.from(encryptedMessage).toString('hex'),\n    ephemPubKey: Buffer.from(ephemeralKeyPair.publicKey).toString('hex'),\n    nonce: Buffer.from(nonce).toString('hex'),\n    version: 'x25519-xsalsa20-poly1305'\n  }\n}\n\n/**\n * This function decrypt a message using secret key\n * @rtype (secretKey: String, encryptedData: Object) => Buffer|null\n * @param {String} secretKey - Secret key\n * @param {Object} encryptedData - Encrypted data\n * @return {Buffer|null}\n */\nexport function decryptData (secretKey, encryptedData) {\n  const receiverSecretKeyUint8Array = ed2curve.convertSecretKey(Buffer.from(secretKey, 'hex'))\n  const nonce = Buffer.from(encryptedData.nonce, 'hex')\n  const ciphertext = Buffer.from(encryptedData.ciphertext, 'hex')\n  const ephemPubKey = Buffer.from(encryptedData.ephemPubKey, 'hex')\n  const decrypted = nacl.box.open(\n    ciphertext,\n    nonce,\n    ephemPubKey,\n    receiverSecretKeyUint8Array\n  )\n  return decrypted ? Buffer.from(decrypted) : decrypted\n}\n\n/**\n * RLP decode\n * @rtype (data: Any) => Buffer[]\n * @param {Buffer|String|Integer|Array} data - Data to decode\n * @return {Array} Array of Buffers containing the original message\n */\nexport const decode = RLP.decode\nexport const encode = RLP.encode\nexport const rlp = RLP\n","/*\n * ISC License (ISC)\n * Copyright 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\nimport * as R from 'ramda'\nimport { isAddressValid } from './crypto'\n\n/**\n * Convert string from snake_case to PascalCase\n * @rtype (s: String) => String\n * @param {String} s - String to convert\n * @return {String} Converted string\n */\nexport function snakeToPascal (s) {\n  return s.replace(/_./g, match => R.toUpper(match[1]))\n}\n\n/**\n * Convert string from snake_case to PascalCase\n * @rtype (s: String) => String\n * @param {String} s - String to convert\n * @return {String} Converted string\n */\nexport function snakeOrKebabToPascal (s) {\n  return s.replace(/[_|-]./g, match => R.toUpper(match[1]))\n}\n\n/**\n * Convert string from PascalCase to snake_case\n * @rtype (s: String) => String\n * @param {String} s - String to convert\n * @return {String} Converted string\n */\nexport function pascalToSnake (s) {\n  return s.replace(/[A-Z]/g, match => `_${R.toLower(match)}`)\n}\n\n/**\n * Check whether a string is valid hex.\n * @param {string} str String to validate.\n * @return {boolean} True if the string is valid hex, false otherwise.\n */\nexport function isHex (str) {\n  return !!(str.length % 2 === 0 && str.match(/^[0-9a-f]+$/i))\n}\n\n/**\n * Check whether a string is Aeternity address\n * @param {string} str String to validate.\n * @return {boolean} True if the string is valid AE address\n */\nexport function isAeAddress (str) {\n  if (typeof str !== 'string') return false\n  return str.split('_')[0].length === 2 && isAddressValid(str)\n}\n\n/**\n * Check whether a string is valid base-64.\n * @param {string} str String to validate.\n * @return {boolean} True if the string is valid base-64, false otherwise.\n */\nexport function isBase64 (str) {\n  if (str.length % 4 > 0 || str.match(/[^0-9a-z+/=]/i)) return false\n  const index = str.indexOf('=')\n  return !!(index === -1 || str.slice(index).match(/={1,2}/))\n}\n","import nacl from 'tweetnacl'\nimport { v4 as uuid } from 'uuid'\n\nimport { encodeBase58Check } from './crypto'\nimport { isBase64, isHex } from './string'\n\nconst _sodium = require('libsodium-wrappers-sumo')\n\n/**\n * KeyStore module\n * @module @aeternity/aepp-sdk/es/utils/keystore\n * @example import * as Keystore from '@aeternity/aepp-sdk/es/utils/keystore'\n * @example const { Keystore } = require('@aeternity/aepp-sdk')\n */\n\nconst DEFAULTS = {\n  crypto: {\n    secret_type: 'ed25519',\n    symmetric_alg: 'xsalsa20-poly1305',\n    kdf: 'argon2id',\n    kdf_params: {\n      memlimit_kib: 65536,\n      opslimit: 3,\n      parallelism: 1\n    }\n  }\n}\n\n// DERIVED KEY PART\nconst DERIVED_KEY_FUNCTIONS = {\n  argon2id: deriveKeyUsingArgon2id\n}\n\nexport async function deriveKeyUsingArgon2id (password, salt, options) {\n  const { memlimit_kib: memoryCost, opslimit: timeCost } = options.kdf_params\n  // const isBrowser = !(typeof module !== 'undefined' && module.exports)\n\n  return _sodium.ready.then(async () => {\n    // tslint:disable-next-line:typedef\n    const sodium = _sodium\n\n    const result = sodium.crypto_pwhash(\n      32,\n      password,\n      salt,\n      timeCost,\n      memoryCost * 1024,\n      sodium.crypto_pwhash_ALG_ARGON2ID13\n    )\n    return Buffer.from(result)\n  })\n}\n\n// CRYPTO PART\nconst CRYPTO_FUNCTIONS = {\n  'xsalsa20-poly1305': { encrypt: encryptXsalsa20Poly1305, decrypt: decryptXsalsa20Poly1305 }\n}\n\nfunction encryptXsalsa20Poly1305 ({ plaintext, key, nonce }) {\n  return nacl.secretbox(plaintext, nonce, key)\n}\n\nfunction decryptXsalsa20Poly1305 ({ ciphertext, key, nonce }) {\n  const res = nacl.secretbox.open(ciphertext, nonce, key)\n  if (!res) throw new Error('Invalid password or nonce')\n  return res\n}\n\n/**\n * Convert a string to a Buffer.  If encoding is not specified, hex-encoding\n * will be used if the input is valid hex.  If the input is valid base64 but\n * not valid hex, base64 will be used.  Otherwise, utf8 will be used.\n * @param {string} str String to be converted.\n * @param {string=} enc Encoding of the input string (optional).\n * @return {buffer} Buffer (bytearray) containing the input data.\n */\nfunction str2buf (str, enc) {\n  if (!str || str.constructor !== String) return str\n  if (!enc && isHex(str)) enc = 'hex'\n  if (!enc && isBase64(str)) enc = 'base64'\n  return Buffer.from(str, enc)\n}\n\n/**\n * Symmetric private key encryption using secret (derived) key.\n * @param {buffer|string} plaintext Data to be encrypted.\n * @param {buffer|string} key Secret key.\n * @param {buffer|string} nonce Randomly generated nonce.\n * @param {string=} algo Encryption algorithm (default: DEFAULTS.crypto.symmetric_alg).\n * @return {buffer} Encrypted data.\n */\nfunction encrypt (plaintext, key, nonce, algo = DEFAULTS.crypto.symmetric_alg) {\n  if (!CRYPTO_FUNCTIONS[algo]) throw new Error(algo + ' is not available')\n  return CRYPTO_FUNCTIONS[algo].encrypt({ plaintext, nonce, key })\n}\n\n/**\n * Symmetric private key decryption using secret (derived) key.\n * @param {buffer|Uint8Array} ciphertext Data to be decrypted.\n * @param {buffer|Uint8Array} key Secret key.\n * @param {buffer|Uint8Array} nonce Nonce from key-object.\n * @param {string=} algo Encryption algorithm.\n * @return {buffer} Decrypted data.\n */\nfunction decrypt (ciphertext, key, nonce, algo) {\n  if (!CRYPTO_FUNCTIONS[algo]) throw new Error(algo + ' is not available')\n  return CRYPTO_FUNCTIONS[algo].decrypt({ ciphertext, nonce, key })\n}\n\n/**\n * Derive secret key from password with key derivation function.\n * @param {string} password User-supplied password.\n * @param {buffer|Uint8Array} nonce Randomly generated nonce.\n * @param {Object=} options Encryption parameters.\n * @param {string=} options.kdf Key derivation function (default: DEFAULTS.crypto.kdf).\n * @param {Object=} options.kdf_params KDF parameters (default: DEFAULTS.crypto.kdf_params).\n * @return {buffer} Secret key derived from password.\n */\nasync function deriveKey (password, nonce, options = {\n  kdf_params: DEFAULTS.crypto.kdf_params,\n  kdf: DEFAULTS.crypto.kdf\n}) {\n  if (typeof password === 'undefined' || password === null || !nonce) {\n    throw new Error('Must provide password and nonce to derive a key')\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(DERIVED_KEY_FUNCTIONS, options.kdf)) throw new Error('Unsupported kdf type')\n\n  return DERIVED_KEY_FUNCTIONS[options.kdf](password, nonce, options)\n}\n\n/**\n * Assemble key data object in secret-storage format.\n * @param {buffer} name Key name.\n * @param {buffer} derivedKey Password-derived secret key.\n * @param {buffer} privateKey Private key.\n * @param {buffer} nonce Randomly generated 24byte nonce.\n * @param {buffer} salt Randomly generated 16byte salt.\n * @param {Object=} options Encryption parameters.\n * @param {string=} options.kdf Key derivation function (default: argon2id).\n * @param {string=} options.cipher Symmetric cipher (default: constants.cipher).\n * @param {Object=} options.kdf_params KDF parameters (default: constants.<kdf>).\n * @return {Object}\n */\nfunction marshal (name, derivedKey, privateKey, nonce, salt, options = {}) {\n  const opt = Object.assign({}, DEFAULTS.crypto, options)\n  return Object.assign(\n    { name, version: 1, public_key: getAddressFromPriv(privateKey), id: uuid() },\n    {\n      crypto: Object.assign(\n        {\n          secret_type: opt.secret_type,\n          symmetric_alg: opt.symmetric_alg,\n          ciphertext: Buffer.from(encrypt(Buffer.from(privateKey), derivedKey, nonce, opt.symmetric_alg)).toString('hex'),\n          cipher_params: { nonce: Buffer.from(nonce).toString('hex') }\n        },\n        { kdf: opt.kdf, kdf_params: { ...opt.kdf_params, salt: Buffer.from(salt).toString('hex') } }\n      )\n    }\n  )\n}\n\nexport function getAddressFromPriv (secret) {\n  const keys = nacl.sign.keyPair.fromSecretKey(str2buf(secret))\n  const publicBuffer = Buffer.from(keys.publicKey)\n  return `ak_${encodeBase58Check(publicBuffer)}`\n}\n\n/**\n * Recover plaintext private key from secret-storage key object.\n * @param {String} password Keystore object password.\n * @param {Object} keyObject Keystore object.\n * @return {Buffer} Plaintext private key.\n */\nexport async function recover (password, keyObject) {\n  validateKeyObj(keyObject)\n  const nonce = Uint8Array.from(str2buf(keyObject.crypto.cipher_params.nonce))\n  const salt = Uint8Array.from(str2buf(keyObject.crypto.kdf_params.salt))\n  const kdfParams = keyObject.crypto.kdf_params\n  const kdf = keyObject.crypto.kdf\n\n  const key = await decrypt(\n    Uint8Array.from(str2buf(keyObject.crypto.ciphertext)),\n    await deriveKey(password, salt, { kdf, kdf_params: kdfParams }),\n    nonce,\n    keyObject.crypto.symmetric_alg\n  )\n  if (!key) throw new Error('Invalid password')\n  return Buffer.from(key).toString('hex')\n}\n\n/**\n * Export private key to keystore secret-storage format.\n * @param {String} name Key name.\n * @param {String} password User-supplied password.\n * @param {String} privateKey Private key.\n * @param {Buffer} nonce Randomly generated 24byte nonce.\n * @param {Buffer} salt Randomly generated 16byte salt.\n * @param {Object=} options Encryption parameters.\n * @param {String=} options.kdf Key derivation function (default: pbkdf2).\n * @param {String=} options.cipher Symmetric cipher (default: constants.cipher).\n * @param {Object=} options.kdfparams KDF parameters (default: constants.<kdf>).\n * @return {Object}\n */\nexport async function dump (name, password, privateKey, nonce = nacl.randomBytes(24), salt = nacl.randomBytes(16), options = {}) {\n  const opt = Object.assign({}, DEFAULTS.crypto, options)\n  return marshal(\n    name,\n    await deriveKey(password, salt, opt),\n    privateKey,\n    nonce,\n    salt,\n    opt\n  )\n}\n\nexport function validateKeyObj (obj) {\n  const root = ['crypto', 'id', 'version', 'public_key']\n  const cryptoKeys = ['cipher_params', 'ciphertext', 'symmetric_alg', 'kdf', 'kdf_params']\n\n  const missingRootKeys = root.filter(key => !Object.prototype.hasOwnProperty.call(obj, key))\n  if (missingRootKeys.length) throw new Error(`Invalid key file format. Require properties: ${missingRootKeys}`)\n\n  const missingCryptoKeys = cryptoKeys.filter(key => !Object.prototype.hasOwnProperty.call(obj.crypto, key))\n  if (missingCryptoKeys.length) throw new Error(`Invalid key file format. Require properties: ${missingCryptoKeys}`)\n\n  return true\n}\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Amount Formatter\n * @module @aeternity/aepp-sdk/es/utils/amount-formatter\n * @example import { format, toAettos, AE_AMOUNT_FORMATS } from '@aeternity/aepp-sdk/es/utils/amount-formatter'\n */\nimport { asBigNumber, isBigNumber } from './bignumber'\nimport { BigNumber } from 'bignumber.js'\n\n/**\n * AE amount formats\n */\nexport const AE_AMOUNT_FORMATS = {\n  AE: 'ae',\n  MILI_AE: 'miliAE',\n  MICRO_AE: 'microAE',\n  NANO_AE: 'nanoAE',\n  PICO_AE: 'picoAE',\n  FEMTO_AE: 'femtoAE',\n  AETTOS: 'aettos'\n}\n\n/**\n * DENOMINATION_MAGNITUDE\n */\nexport const DENOMINATION_MAGNITUDE = {\n  [AE_AMOUNT_FORMATS.AE]: 0,\n  [AE_AMOUNT_FORMATS.MILI_AE]: -3,\n  [AE_AMOUNT_FORMATS.MICRO_AE]: -6,\n  [AE_AMOUNT_FORMATS.NANO_AE]: -9,\n  [AE_AMOUNT_FORMATS.PICO_AE]: -12,\n  [AE_AMOUNT_FORMATS.FEMTO_AE]: -15,\n  [AE_AMOUNT_FORMATS.AETTOS]: -18\n}\n\n/**\n * Convert amount to AE\n * @param {String|Number|BigNumber} value amount to convert\n * @param {Object} [options={}] options\n * @param {String} [options.denomination='aettos'] denomination of amount, can be ['ae', 'aettos']\n * @return {String}\n */\nexport const toAe = (value, { denomination = AE_AMOUNT_FORMATS.AETTOS } = {}) => formatAmount(value, { denomination, targetDenomination: AE_AMOUNT_FORMATS.AE })\n\n/**\n * Convert amount to aettos\n * @param {String|Number|BigNumber} value amount to convert\n * @param {Object} [options={}] options\n * @param {String} [options.denomination='ae'] denomination of amount, can be ['ae', 'aettos']\n * @return {String}\n */\nexport const toAettos = (value, { denomination = AE_AMOUNT_FORMATS.AE } = {}) => formatAmount(value, { denomination })\n\n/**\n * Convert amount from one to other denomination\n * @param {String|Number|BigNumber} value amount to convert\n * @param {Object} [options={}] options\n * @param {String} [options.denomination='aettos'] denomination of amount, can be ['ae', 'aettos']\n * @param {String} [options.targetDenomination='aettos'] target denomination, can be ['ae', 'aettos']\n * @return {String}\n */\nexport const formatAmount = (value, { denomination = AE_AMOUNT_FORMATS.AETTOS, targetDenomination = AE_AMOUNT_FORMATS.AETTOS } = {}) => {\n  if (!Object.values(AE_AMOUNT_FORMATS).includes(denomination)) throw new Error(`Invalid denomination. Current: ${denomination}, available [${Object.keys(AE_AMOUNT_FORMATS)}]`)\n  if (!Object.values(AE_AMOUNT_FORMATS).includes(targetDenomination)) throw new Error(`Invalid target denomination. Current: ${targetDenomination}, available [${Object.keys(AE_AMOUNT_FORMATS)}]`)\n  if (!isBigNumber(value)) throw new Error(`Value ${value} is not type of number`)\n\n  return asBigNumber(value)\n    .shiftedBy(DENOMINATION_MAGNITUDE[denomination] - DENOMINATION_MAGNITUDE[targetDenomination])\n    .toFixed()\n}\n\nconst prefixes = [\n  { name: 'exa', magnitude: 18 },\n  { name: 'giga', magnitude: 9 },\n  { name: '', magnitude: 0 },\n  { name: 'pico', magnitude: -12 }\n]\n\nconst getNearestPrefix = exponent => prefixes.reduce((p, n) => (\n  Math.abs(n.magnitude - exponent) < Math.abs(p.magnitude - exponent) ? n : p))\n\nconst getLowerBoundPrefix = exponent => prefixes\n  .find(p => p.magnitude <= exponent) || prefixes[prefixes.length - 1]\n\nexport default (value) => {\n  if (!BigNumber.isBigNumber(value)) value = BigNumber(value)\n\n  const { name, magnitude } = (value.e < 0 ? getNearestPrefix : getLowerBoundPrefix)(value.e)\n  const v = value\n    .shiftedBy(-magnitude)\n    .precision(9 + Math.min(value.e - magnitude, 0))\n    .toFixed()\n  return `${v}${name ? ' ' : ''}${name}`\n}\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\nimport { rlp, hash } from './crypto'\n\nconst NODE_TYPES = {\n  branch: 1,\n  extension: 2,\n  leaf: 3\n}\n\nfunction nodeType (node) {\n  if (node.length === 17) {\n    return NODE_TYPES.branch\n  }\n  if (node.length === 2) {\n    const nibble = node[0].toString('hex')[0]\n    if (nibble === '0' || nibble === '1') {\n      return NODE_TYPES.extension\n    }\n    if (nibble === '2' || nibble === '3') {\n      return NODE_TYPES.leaf\n    }\n  }\n}\n\nfunction decodePath (path) {\n  if (path[0] === '0' || path[0] === '2') {\n    return path.slice(2)\n  }\n  if (path[0] === '1' || path[0] === '3') {\n    return path.slice(1)\n  }\n}\n\n/**\n * Deserialize Merkle Patricia Tree\n * @rtype (binary: Array) => Object\n * @param {Array} binary - Binary\n * @return {Object} Merkle Patricia Tree\n */\nexport function deserialize (binary) {\n  return {\n    rootHash: binary[0].toString('hex'),\n    nodes: binary[1].reduce((prev, node) => ({\n      ...prev,\n      [node[0].toString('hex')]: node[1]\n    }), {})\n  }\n}\n\n/**\n * Serialize Merkle Patricia Tree\n * @rtype (tree: Object) => Array\n * @param {Object} tree - Merkle Patricia Tree\n * @return {Array} Binary\n */\nexport function serialize (tree) {\n  return [\n    Buffer.from(tree.rootHash, 'hex'),\n    Object.entries(tree.nodes).map(([mptHash, value]) => ([\n      Buffer.from(mptHash, 'hex'),\n      value\n    ]))\n  ]\n}\n\n/**\n * Retrieve value from Merkle Patricia Tree\n * @rtype (tree: Object, key: String) => Buffer\n * @param {Object} tree - Merkle Patricia Tree\n * @param {String} key - The key of the element to retrieve\n * @return {Buffer} Value associated to the specified key\n */\nexport function get (tree, key, hash) {\n  const node = hash ? tree.nodes[hash] : tree.nodes[tree.rootHash]\n  const type = nodeType(node)\n  if (type === NODE_TYPES.branch) {\n    if (key.length) {\n      const nextHash = node[parseInt(key[0], 16)].toString('hex')\n      return get(tree, key.substr(1), nextHash)\n    }\n    return node[16]\n  }\n  if (type === NODE_TYPES.extension) {\n    const path = decodePath(node[0].toString('hex'))\n    if (key.substr(0, path.length) === path) {\n      return get(tree, key.substr(path.length), node[1].toString('hex'))\n    }\n  }\n  if (type === NODE_TYPES.leaf) {\n    if (node[0].toString('hex').substr(1) === key) {\n      return node[1]\n    }\n  }\n}\n\nfunction nodeHash (node) {\n  return Buffer.from(hash(rlp.encode(node))).toString('hex')\n}\n\n/**\n * Verify if rootHash of Merkle Patricia Tree is correct\n * @rtype (tree: Object) => Boolean\n * @param {Object} tree - Merkle Patricia Tree\n * @return {Boolean} Boolean indicating whether or not rootHash is correct\n */\nexport function verify (tree, key, verified = []) {\n  const hash = key || tree.rootHash\n  if (verified.includes(hash)) {\n    return true\n  }\n  const node = tree.nodes[hash]\n  const type = nodeType(node)\n  if (nodeHash(node) !== hash) {\n    return false\n  }\n  verified.push(hash)\n  if (type === NODE_TYPES.branch) {\n    return !node.some((n, i) => {\n      const nextKey = n.toString('hex')\n      if (i < 16) {\n        return !verify(tree, nextKey, verified)\n      }\n      return false\n    })\n  }\n  if (type === NODE_TYPES.extension) {\n    return verify(tree, node[1].toString('hex'), verified)\n  }\n  return true\n}\n","import { BigNumber } from 'bignumber.js'\nimport { AE_AMOUNT_FORMATS, formatAmount } from '../../utils/amount-formatter'\nimport { assertedType, rlp } from '../../utils/crypto'\n\nimport {\n  DEFAULT_FEE,\n  FIELD_TYPES,\n  OBJECT_ID_TX_TYPE,\n  PREFIX_ID_TAG,\n  TX_DESERIALIZATION_SCHEMA,\n  TX_FEE_BASE_GAS,\n  TX_FEE_OTHER_GAS,\n  TX_SERIALIZATION_SCHEMA,\n  TX_TYPE,\n  VALIDATION_MESSAGE,\n  VSN\n} from './schema'\nimport {\n  readInt,\n  readId,\n  readPointers,\n  writeId,\n  writeInt,\n  buildPointers,\n  encode,\n  decode,\n  buildHash,\n  getContractBackendFromTx\n} from './helpers'\nimport { toBytes } from '../../utils/bytes'\nimport * as mpt from '../../utils/mptree'\n\n/**\n * JavaScript-based Transaction builder\n * @module @aeternity/aepp-sdk/es/tx/builder\n * @export TxBuilder\n * @example import Transaction from '@aeternity/aepp-sdk/es/tx/builder'\n */\n\nconst ORACLE_TTL_TYPES = {\n  delta: 'delta',\n  block: 'block'\n}\n\n// SERIALIZE AND DESERIALIZE PART\nfunction deserializeField (value, type, prefix) {\n  if (!value) return ''\n  switch (type) {\n    case FIELD_TYPES.ctVersion: {\n      const [vm, , abi] = value\n      return { vmVersion: readInt(Buffer.from([vm])), abiVersion: readInt(Buffer.from([abi])) }\n    }\n    case FIELD_TYPES.amount:\n      return readInt(value)\n    case FIELD_TYPES.int:\n      return readInt(value)\n    case FIELD_TYPES.id:\n      return readId(value)\n    case FIELD_TYPES.ids:\n      return value.map(readId)\n    case FIELD_TYPES.bool:\n      return value[0] === 1\n    case FIELD_TYPES.binary:\n      return encode(value, prefix)\n    case FIELD_TYPES.string:\n      return value.toString()\n    case FIELD_TYPES.payload:\n      return encode(value, 'ba')\n    case FIELD_TYPES.pointers:\n      return readPointers(value)\n    case FIELD_TYPES.rlpBinary:\n      return unpackTx(value, true)\n    case FIELD_TYPES.rlpBinaries:\n      return value.map(v => unpackTx(v, true))\n    case FIELD_TYPES.rawBinary:\n      return value\n    case FIELD_TYPES.hex:\n      return value.toString('hex')\n    case FIELD_TYPES.offChainUpdates:\n      return value.map(v => unpackTx(v, true))\n    case FIELD_TYPES.callStack:\n      // TODO: fix this\n      return [readInt(value)]\n    case FIELD_TYPES.mptree:\n      return value.map(mpt.deserialize)\n    case FIELD_TYPES.callReturnType:\n      switch (readInt(value)) {\n        case '0': return 'ok'\n        case '1': return 'error'\n        case '2': return 'revert'\n        default: return value\n      }\n    case FIELD_TYPES.sophiaCodeTypeInfo:\n      return value\n        .reduce(\n          (acc, [funHash, fnName, argType, outType]) =>\n            ({ ...acc, [fnName.toString()]: { funHash, argType, outType } }),\n          {}\n        )\n    default:\n      return value\n  }\n}\n\nfunction serializeField (value, type, prefix) {\n  switch (type) {\n    case FIELD_TYPES.amount:\n    case FIELD_TYPES.int:\n      return writeInt(value)\n    case FIELD_TYPES.id:\n      return writeId(value)\n    case FIELD_TYPES.ids:\n      return value.map(writeId)\n    case FIELD_TYPES.bool:\n      return Buffer.from([value ? 1 : 0])\n    case FIELD_TYPES.binary:\n      return decode(value, prefix)\n    case FIELD_TYPES.hex:\n      return Buffer.from(value, 'hex')\n    case FIELD_TYPES.signatures:\n      return value.map(Buffer.from)\n    case FIELD_TYPES.payload:\n      return typeof value === 'string' && value.split('_')[0] === 'ba'\n        ? decode(value, 'ba')\n        : toBytes(value)\n    case FIELD_TYPES.string:\n      return toBytes(value)\n    case FIELD_TYPES.pointers:\n      return buildPointers(value)\n    case FIELD_TYPES.mptree:\n      return value.map(mpt.serialize)\n    case FIELD_TYPES.ctVersion:\n      return Buffer.from([...toBytes(value.vmVersion), 0, ...toBytes(value.abiVersion)])\n    case FIELD_TYPES.callReturnType:\n      switch (value) {\n        case 'ok': return writeInt(0)\n        case 'error': return writeInt(1)\n        case 'revert': return writeInt(2)\n        default: return value\n      }\n    default:\n      return value\n  }\n}\n\nfunction validateField (value, key, type, prefix) {\n  const assert = (valid, params) => valid ? {} : { [key]: VALIDATION_MESSAGE[type](params) }\n  // All fields are required\n  if (value === undefined || value === null) return { [key]: 'Field is required' }\n\n  // Validate type of value\n  switch (type) {\n    case FIELD_TYPES.amount:\n    case FIELD_TYPES.int: {\n      const isMinusValue = (!isNaN(value) || BigNumber.isBigNumber(value)) && BigNumber(value).lt(0)\n      return assert((!isNaN(value) || BigNumber.isBigNumber(value)) && BigNumber(value).gte(0), { value, isMinusValue })\n    }\n    case FIELD_TYPES.id:\n      if (Array.isArray(prefix)) {\n        const p = prefix.find(p => p === value.split('_')[0])\n        return assert(p && PREFIX_ID_TAG[value.split('_')[0]], { value, prefix })\n      }\n      return assert(assertedType(value, prefix) && PREFIX_ID_TAG[value.split('_')[0]] && value.split('_')[0] === prefix, { value, prefix })\n    case FIELD_TYPES.binary:\n      return assert(value.split('_')[0] === prefix, { prefix, value })\n    case FIELD_TYPES.string:\n      return assert(true)\n    case FIELD_TYPES.ctVersion:\n      return assert(typeof value === 'object' && Object.prototype.hasOwnProperty.call(value, 'abiVersion') && Object.prototype.hasOwnProperty.call(value, 'vmVersion'))\n    case FIELD_TYPES.pointers:\n      return assert(Array.isArray(value) && !value.find(e => e !== Object(e)), { value })\n    default:\n      return {}\n  }\n}\n\nfunction transformParams (params, schema, { denomination } = {}) {\n  params = schema\n    .filter(([_, t]) => t === FIELD_TYPES.amount)\n    .reduce((acc, [key]) => ({ ...params, [key]: formatAmount(params[key], { denomination }) }), params)\n  const schemaKeys = schema.map(([k]) => k)\n  return Object\n    .entries(params)\n    .reduce(\n      (acc, [key, value]) => {\n        if (schemaKeys.includes(key)) acc[key] = value\n        if (['oracleTtl', 'queryTtl', 'responseTtl'].includes(key)) {\n          acc[`${key}Type`] = value.type === ORACLE_TTL_TYPES.delta ? 0 : 1\n          acc[`${key}Value`] = value.value\n        }\n        return acc\n      },\n      {}\n    )\n}\n\n// INTERFACE\n\nfunction getOracleRelativeTtl (params, txType) {\n  const ttlKey = {\n    [TX_TYPE.oracleRegister]: 'oracleTtl',\n    [TX_TYPE.oracleExtend]: 'oracleTtl',\n    [TX_TYPE.oracleQuery]: 'queryTtl',\n    [TX_TYPE.oracleResponse]: 'responseTtl'\n  }[txType]\n\n  if (params[ttlKey] || params[`${ttlKey}Value`]) {\n    return params[`${ttlKey}Value`] || params[ttlKey].value\n  }\n  return 1\n}\n\n/**\n * Calculate min fee\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder/index\n * @rtype (txType, { gas = 0, params }) => String\n * @param {String} txType - Transaction type\n * @param {Options} options - Options object\n * @param {String|Number} options.gas - Gas amount\n * @param {Object} options.params - Tx params\n * @return {String|Number}\n * @example calculateMinFee('spendTx', { gas, params })\n */\nexport function calculateMinFee (txType, { gas = 0, params, vsn }) {\n  const multiplier = BigNumber(1e9) // 10^9 GAS_PRICE\n  if (!params) return BigNumber(DEFAULT_FEE).times(multiplier).toString(10)\n\n  let actualFee = buildFee(txType, { params: { ...params, fee: 0 }, multiplier, gas, vsn })\n  let expected = BigNumber(0)\n\n  while (!actualFee.eq(expected)) {\n    actualFee = buildFee(txType, { params: { ...params, fee: actualFee }, multiplier, gas, vsn })\n    expected = actualFee\n  }\n  return expected.toString(10)\n}\n\n/**\n * Calculate fee based on tx type and params\n * @param txType\n * @param params\n * @param gas\n * @param multiplier\n * @param vsn\n * @return {BigNumber}\n */\nfunction buildFee (txType, { params, gas = 0, multiplier, vsn }) {\n  const { rlpEncoded: txWithOutFee } = buildTx({ ...params }, txType, { vsn })\n  const txSize = txWithOutFee.length\n  return TX_FEE_BASE_GAS(txType, { backend: getContractBackendFromTx(params) })\n    .plus(TX_FEE_OTHER_GAS(txType)({ txSize, relativeTtl: getOracleRelativeTtl(params, txType) }))\n    .times(multiplier)\n}\n\n/**\n * Calculate fee\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder\n * @rtype (fee, txType, gas = 0) => String\n * @param {String|Number} fee - fee\n * @param {String} txType - Transaction type\n * @param {Options} options - Options object\n * @param {String|Number} options.gas - Gas amount\n * @param {Object} options.params - Tx params\n * @return {String|Number}\n * @example calculateFee(null, 'spendTx', { gas, params })\n */\nexport function calculateFee (fee = 0, txType, { gas = 0, params, showWarning = true, vsn } = {}) {\n  if (!params && showWarning) console.warn(`Can't build transaction fee, we will use DEFAULT_FEE(${DEFAULT_FEE})`)\n\n  const minFee = calculateMinFee(txType, { params, gas, vsn })\n  if (fee && BigNumber(minFee).gt(BigNumber(fee)) && showWarning) console.warn(`Transaction fee is lower then min fee! Min fee: ${minFee}`)\n\n  return fee || minFee\n}\n\n/**\n * Validate transaction params\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder\n * @param {Object} params Object with tx params\n * @param {Array} schema Transaction schema\n * @param {Array} excludeKeys  Array of keys to exclude for validation\n * @return {Object} Object with validation errors\n */\nexport function validateParams (params, schema, { excludeKeys = [] }) {\n  return schema\n    .filter(([key]) => !excludeKeys.includes(key) && key !== 'payload')\n    .reduce(\n      (acc, [key, type, prefix]) => Object.assign(acc, validateField(params[key], key, type, prefix)),\n      {}\n    )\n}\n\n/**\n * Build binary transaction\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder\n * @param {Object} params Object with tx params\n * @param {Array} schema Transaction schema\n * @param {Object} [options={}] options\n * @param {Array} [options.excludeKeys] excludeKeys Array of keys to exclude for validation and build\n * @throws {Error} Validation error\n * @return {Array} Array with binary fields of transaction\n */\nexport function buildRawTx (params, schema, { excludeKeys = [], denomination = AE_AMOUNT_FORMATS.AETTOS } = {}) {\n  const filteredSchema = schema.filter(([key]) => !excludeKeys.includes(key))\n\n  // Transform `amount` type fields to `aettos`\n  params = transformParams(params, filteredSchema, { denomination })\n  // Validation\n  const valid = validateParams(params, schema, { excludeKeys })\n  if (Object.keys(valid).length) {\n    throw new Error('Transaction build error. ' + JSON.stringify(valid))\n  }\n\n  return filteredSchema\n    .map(([key, fieldType, prefix]) => serializeField(params[key], fieldType, prefix))\n}\n\n/**\n * Unpack binary transaction\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder\n * @param {Array} binary Array with binary transaction field's\n * @param {Array} schema Transaction schema\n * @return {Object} Object with transaction field's\n */\nexport function unpackRawTx (binary, schema) {\n  return schema\n    .reduce(\n      (\n        acc,\n        [key, fieldType, prefix],\n        index\n      ) => Object.assign(acc, { [key]: deserializeField(binary[index], fieldType, prefix) }),\n      {}\n    )\n}\n\n/**\n * Build transaction hash\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder\n * @param {Object} params Object with tx params\n * @param {String} type Transaction type\n * @param {Object} [options={}] options\n * @param {Object} [options.excludeKeys] excludeKeys Array of keys to exclude for validation and build\n * @param {String} [options.prefix] Prefix of transaction\n * @throws {Error} Validation error\n * @return {Object} { tx, rlpEncoded, binary } Object with tx -> Base64Check transaction hash with 'tx_' prefix, rlp encoded transaction and binary transaction\n */\nexport function buildTx (params, type, { excludeKeys = [], prefix = 'tx', vsn = VSN, denomination = AE_AMOUNT_FORMATS.AETTOS } = {}) {\n  if (!TX_SERIALIZATION_SCHEMA[type]) {\n    throw new Error('Transaction serialization not implemented for ' + type)\n  }\n  if (!TX_SERIALIZATION_SCHEMA[type][vsn]) {\n    throw new Error('Transaction serialization not implemented for ' + type + ' version ' + vsn)\n  }\n  const [schema, tag] = TX_SERIALIZATION_SCHEMA[type][vsn]\n  const binary = buildRawTx({ ...params, VSN: vsn, tag }, schema, { excludeKeys, denomination: params.denomination || denomination }).filter(e => e !== undefined)\n\n  const rlpEncoded = rlp.encode(binary)\n  const tx = encode(rlpEncoded, prefix)\n\n  return { tx, rlpEncoded, binary, txObject: unpackRawTx(binary, schema) }\n}\n\n/**\n * Unpack transaction hash\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder\n * @param {String|Buffer} encodedTx String or RLP encoded transaction array (if fromRlpBinary flag is true)\n * @param {Boolean} fromRlpBinary Unpack from RLP encoded transaction (default: false)\n * @param {String} prefix - Prefix of data\n * @return {Object} { tx, rlpEncoded, binary } Object with tx -> Object with transaction param's, rlp encoded transaction and binary transaction\n */\nexport function unpackTx (encodedTx, fromRlpBinary = false, prefix = 'tx') {\n  const rlpEncoded = fromRlpBinary ? encodedTx : decode(encodedTx, prefix)\n  const binary = rlp.decode(rlpEncoded)\n\n  const objId = readInt(binary[0])\n  if (!TX_DESERIALIZATION_SCHEMA[objId]) {\n    throw new Error('Transaction deserialization not implemented for tag ' + objId)\n  }\n  const vsn = readInt(binary[1])\n  if (!TX_DESERIALIZATION_SCHEMA[objId][vsn]) {\n    throw new Error('Transaction deserialization not implemented for tag ' + objId + ' version ' + vsn)\n  }\n  const [schema] = TX_DESERIALIZATION_SCHEMA[objId][vsn]\n\n  return { txType: OBJECT_ID_TX_TYPE[objId], tx: unpackRawTx(binary, schema), rlpEncoded, binary }\n}\n\n/**\n * Build a transaction hash\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder\n * @param {String | Buffer} rawTx base64 or rlp encoded transaction\n * @return {String} Transaction hash\n */\nexport function buildTxHash (rawTx) {\n  if (typeof rawTx === 'string' && rawTx.indexOf('tx_') !== -1) return buildHash('th', unpackTx(rawTx).rlpEncoded)\n  return buildHash('th', rawTx)\n}\n\nexport default { calculateMinFee, calculateFee, unpackTx, unpackRawTx, buildTx, buildRawTx, validateParams, buildTxHash }\n","import nacl from 'tweetnacl'\nimport { full as hmac } from 'tweetnacl-auth'\nimport { fromString } from 'bip32-path'\nimport { validateMnemonic, mnemonicToSeed, generateMnemonic as genMnemonic } from '@aeternity/bip39'\nimport { decryptKey, encodeBase58Check, encryptKey } from './crypto'\n\nconst ED25519_CURVE = Buffer.from('ed25519 seed')\nconst HARDENED_OFFSET = 0x80000000\n\nconst toHex = (buffer) => Buffer.from(buffer).toString('hex')\n\nexport function derivePathFromKey (path, key) {\n  const segments = path === '' ? [] : fromString(path).toPathArray()\n  segments.forEach((segment, i) => {\n    if (segment < HARDENED_OFFSET) {\n      throw new Error(`Segment #${i + 1} is not hardened`)\n    }\n  })\n\n  return segments.reduce((parentKey, segment) => deriveChild(parentKey, segment), key)\n}\n\nexport function derivePathFromSeed (path, seed) {\n  if (!['m', 'm/'].includes(path.slice(0, 2))) {\n    throw new Error('Invalid path')\n  }\n  const masterKey = getMasterKeyFromSeed(seed)\n  return derivePathFromKey(path.slice(2), masterKey)\n}\n\nfunction formatAccount (keys) {\n  const { secretKey, publicKey } = keys\n  return {\n    secretKey: toHex(secretKey),\n    publicKey: `ak_${encodeBase58Check(publicKey)}`\n  }\n}\n\nexport function getKeyPair (secretKey) {\n  return nacl.sign.keyPair.fromSeed(secretKey)\n}\n\nexport function generateMnemonic () {\n  return genMnemonic()\n}\n\nexport function getMasterKeyFromSeed (seed) {\n  const I = hmac(seed, ED25519_CURVE)\n  const IL = I.slice(0, 32)\n  const IR = I.slice(32)\n  return {\n    secretKey: IL,\n    chainCode: IR\n  }\n}\n\nexport function deriveChild ({ secretKey, chainCode }, index) {\n  if (index < HARDENED_OFFSET) {\n    throw new Error(`Child index #${index} is not supported`)\n  }\n  const indexBuffer = Buffer.allocUnsafe(4)\n  indexBuffer.writeUInt32BE(index, 0)\n\n  const data = Buffer.concat([Buffer.alloc(1, 0), Buffer.from(secretKey), Buffer.from(indexBuffer)])\n\n  const I = hmac(data, chainCode)\n  const IL = I.slice(0, 32)\n  const IR = I.slice(32)\n  return {\n    secretKey: IL,\n    chainCode: IR\n  }\n}\n\nexport function generateSaveHDWallet (mnemonic, password) {\n  if (!validateMnemonic(mnemonic)) {\n    throw new Error('Invalid mnemonic')\n  }\n  const seed = mnemonicToSeed(mnemonic)\n  const walletKey = derivePathFromSeed('m/44h/457h', seed)\n  return {\n    secretKey: toHex(encryptKey(password, walletKey.secretKey)),\n    chainCode: toHex(encryptKey(password, walletKey.chainCode))\n  }\n}\n\nexport function getSaveHDWalletAccounts (saveHDWallet, password, accountCount) {\n  const walletKey = {\n    secretKey: decryptKey(password, Buffer.from(saveHDWallet.secretKey, 'hex')),\n    chainCode: decryptKey(password, Buffer.from(saveHDWallet.chainCode, 'hex'))\n  }\n  return (new Array(accountCount)).fill()\n    .map((_, idx) =>\n      formatAccount(getKeyPair(derivePathFromKey(`${idx}h/0h/0h`, walletKey).secretKey)))\n}\n\nexport const getHdWalletAccountFromMnemonic = (mnemonic, accountIdx) => {\n  const seed = mnemonicToSeed(mnemonic)\n  const walletKey = derivePathFromSeed('m/44h/457h', seed)\n  const derived = derivePathFromKey(`${accountIdx}h/0h/0h`, walletKey)\n  const keyPair = getKeyPair(derived.secretKey)\n  return {\n    ...formatAccount(keyPair),\n    idx: accountIdx\n  }\n}\n\nexport default {\n  getHdWalletAccountFromMnemonic,\n  getSaveHDWalletAccounts,\n  generateSaveHDWallet,\n  generateMnemonic,\n  deriveChild,\n  getMasterKeyFromSeed\n}\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Tx module\n * @module @aeternity/aepp-sdk/es/tx\n * @export Tx\n * @example import Tx from '@aeternity/aepp-sdk/es/tx'\n */\n\nimport stampit from '@stamp/it'\nimport { required } from '@stamp/required'\n\n/**\n * Basic Tx Stamp\n *\n * Attempting to create instances from the Stamp without overwriting all\n * abstract methods using composition will result in an exception.\n *\n * Tx is one of the three basic building blocks of an\n * {@link module:@aeternity/aepp-sdk/es/ae--Ae} client and provides methods to\n * create aeternity transactions.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @return {Object} Tx instance\n * @example Tx()\n */\nconst Tx = stampit({\n  deepConf: {\n    Ae: {\n      methods: [\n        'spendTx', 'namePreclaimTx', 'nameClaimTx', 'nameTransferTx',\n        'nameUpdateTx', 'nameRevokeTx', 'contractCreateTx', 'contractCallTx',\n        'oracleRegisterTx', 'oracleExtendTx', 'oraclePostQueryTx', 'oracleRespondTx', 'getAccountNonce',\n        'channelCloseSoloTx', 'channelSlashTx', 'channelSettleTx', 'channelSnapshotSoloTx', 'getVmVersion', 'prepareTxParams',\n        'gaAttachTx'\n      ]\n    }\n  }\n}, required({\n  methods: {\n    spendTx: required,\n    namePreclaimTx: required,\n    nameClaimTx: required,\n    nameTransferTx: required,\n    nameUpdateTx: required,\n    nameRevokeTx: required,\n    contractCreateTx: required,\n    contractCallTx: required,\n    oracleRegisterTx: required,\n    oracleExtendTx: required,\n    oraclePostQueryTx: required,\n    oracleRespondTx: required,\n    getAccountNonce: required,\n    channelCloseSoloTx: required,\n    channelSlashTx: required,\n    channelSettleTx: required,\n    channelSnapshotSoloTx: required,\n    gaAttachTx: required,\n    getVmVersion: required,\n    prepareTxParams: required\n  }\n}))\n\n/**\n * Create a `spend_tx` transaction\n * @function spendTx\n * @instance\n * @abstract\n * @category async\n * @rtype ({sender?: String, recipientId: String, amount: Number, fee?: Number, ttl?: Number, nonce?: Number, payload?: String}) => tx: Promise[String]\n * @param {Object} options - The object to extract properties from\n * @return {String} `spend_tx` transaction\n */\n\n/**\n * Create a `name_preclaim_tx` transaction\n * @function namePreclaimTx\n * @instance\n * @abstract\n * @category async\n * @rtype ({account?: String, commitment: String, fee?: Number, ttl?: Number, nonce?: Number}) => tx: Promise[String]\n * @param {Object} options - The object to extract properties from\n * @return {String} `name_preclaim_tx` transaction\n */\n\n/**\n * Create a `name_claim_tx` transaction\n * @function nameClaimTx\n * @instance\n * @abstract\n * @category async\n * @rtype ({account?: String, name: String, nameSalt: String, fee?: Number, ttl?: Number, nonce?: Number}) => tx: Promise[String]\n * @param {Object} options - The object to extract properties from\n * @return {String} `name_claim_tx` transaction\n */\n\n/**\n * Create a `name_transfer_tx` transaction\n * @function nameTransferTx\n * @instance\n * @abstract\n * @category async\n * @rtype ({account?: String, nameId: String, recipientId: String, fee?: Number, ttl?: Number, nonce?: Number}) => tx: Promise[String]\n * @param {Object} options - The object to extract properties from\n * @return {String} `name_transfer_tx` transaction\n */\n\n/**\n * Create a `name_update_tx` transaction\n * @function nameUpdateTx\n * @instance\n * @abstract\n * @category async\n * @rtype ({account?: String, nameId: String, pointers: Object, nameTtl: Number, clientTtl: Number, fee?: Number, ttl?: Number, nonce?: Number}) => tx: Promise[String]\n * @param {Object} options - The object to extract properties from\n * @return {String} `name_update_tx` transaction\n */\n\n/**\n * Create a `name_revoke_tx` transaction\n * @function nameRevokeTx\n * @instance\n * @abstract\n * @category async\n * @rtype ({account?: String, nameId: String, fee?: Number, ttl?: Number, nonce?: Number}) => tx: Promise[String]\n * @param {Object} options - The object to extract properties from\n * @return {String} `name_revoke_tx` transaction\n */\n\n/**\n * Create a `contract_create_tx` transaction\n * @function contractCreateTx\n * @instance\n * @abstract\n * @category async\n * @rtype ({owner: String, code: String, callData: String, vmVersion: Number, deposit: Number, amount: Number, gas: Number, gasPrice: Number, fee?: Number, ttl?: Number, nonce?: Number}) => tx: Promise[String]\n * @param {Object} options - The object to extract properties from\n * @return {String} `contract_create_tx` transaction\n */\n\n/**\n * Create a `contract_call_tx` transaction\n * @function contractCallTx\n * @instance\n * @abstract\n * @category async\n * @rtype ({callerId: String, contract: String, callData: String, vmVersion: Number, amount: Number, gas: Number, gasPrice: Number, fee?: Number, ttl?: Number, nonce?: Number}) => tx: Promise[String]\n * @param {Object} options - The object to extract properties from\n * @return {String} `contract_call_tx` transaction\n */\n\n/**\n * Create a `oracle_register_tx` transaction\n * @function oracleRegisterTx\n * @instance\n * @abstract\n * @category async\n * @rtype ({ accountId: String, queryFormat: String, responseFormat: String, queryFee: String|Number, oracleTtl: Object, vmVersion: Number = ORACLE_VM_VERSION, fee?: Number, ttl?: Number, nonce?: Number }) => tx: Promise[String]\n * @param {Object} options - The object to extract properties from\n * @return {String} `oracle_register_tx` transaction\n */\n\n/**\n * Create a `oracle_extend_tx` transaction\n * @function oracleExtendTx\n * @instance\n * @abstract\n * @category async\n * @rtype ({ oracleId: String, callerId: String, oracleTtl: Object, fee?: Number, ttl: Number, nonce?: Number}) => tx: Promise[String]\n * @param {Object} options - The object to extract properties from\n * @return {String} `oracle_extend_tx` transaction\n */\n\n/**\n * Create a `oracle_post_query_tx` transaction\n * @function oraclePostQuery\n * @instance\n * @abstract\n * @category async\n * @rtype ({ oracleId: String, responseTtl: Object, query: String, queryTtl: Object, queryFee: String|Number, senderId: String, fee?: Number, ttl: Number, nonce?: Number}) => tx: Promise[String]\n * @param {Object} options - The object to extract properties from\n * @return {String} `oracle_post_query_tx` transaction\n */\n\n/**\n * Create a `oracle_respond_tx` transaction\n * @function oracleRespondTx\n * @instance\n * @abstract\n * @category async\n * @rtype ({ oracleId: String, callerId: String, responseTtl: Object, queryId: String, response: String, fee?: Number, ttl?: Number, nonce?: Number}) => tx: Promise[String]\n * @param {Object} options - The object to extract properties from\n * @return {String} `oracle_respond_tx` transaction\n */\n\n/**\n * Get Account Nonce\n * @function getAccountNonce\n * @instance\n * @abstract\n * @category async\n * @rtype (address) => result: Number\n * @param {String} address - Account public key\n * @return {Number} Result\n */\n\nexport default Tx\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Oracle Base module\n * @module @aeternity/aepp-sdk/es/oracle\n * @export Contract\n * @example import ContractBase from '@aeternity/aepp-sdk/es/oracle'\n */\n\nimport { required } from '@stamp/required'\nimport stampit from '@stamp/it'\n\n/**\n * Basic Oracle Stamp\n *\n * This stamp include api call's related to oracle functionality.\n * Attempting to create instances from the Stamp without overwriting all\n * abstract methods using composition will result in an exception.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/oracle\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @return {Object} Oracle instance\n */\nconst OracleBase = stampit({\n  deepConf: {\n    Contract: {\n      methods: [\n        'getOracle',\n        'getOracleQueries',\n        'getOracleQuery'\n      ]\n    }\n  }\n}, required({\n  methods: {\n    getOracle: required,\n    getOracleQueries: required,\n    getOracleQuery: required\n  }\n}))\n\n/**\n * Get oracle by oracle public key\n * @function getOracle\n * @instance\n * @abstract\n * @category async\n * @rtype (oracleId: String) => oracle: Promise[Object]\n * @param {String} oracleId - Oracle public key\n * @return {Object} - Oracle object\n */\n\n/**\n * Get oracle queries\n * @function getOracleQueries\n * @instance\n * @abstract\n * @category async\n * @rtype (oracleId: String) => oracleQueries: Promise[Object]\n * @param {String} oracleId- Oracle public key\n * @return {Object} - Oracle queries\n */\n\n/**\n * Get oracle query\n * @function getOracleQuery\n * @instance\n * @abstract\n * @category async\n * @rtype (oracleId: String, queryId: String) => oracleQuery: Promise[Object]\n * @param {String} oracleId - Oracle public key\n * @param {String} queryId - Query id\n * @return {Object} - Oracle query object\n */\n\nexport default OracleBase\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Chain module\n * @module @aeternity/aepp-sdk/es/chain\n * @export Chain\n * @example import Chain from '@aeternity/aepp-sdk/es/chain'\n */\n\nimport Oracle from '../oracle'\nimport { required } from '@stamp/required'\n\n/**\n * Basic Chain Stamp\n *\n * Attempting to create instances from the Stamp without overwriting all\n * abstract methods using composition will result in an exception.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/chain\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @return {Object} Chain instance\n */\nconst Chain = Oracle.compose({\n  deepProps: { Ae: { defaults: { waitMined: true } } },\n  statics: { waitMined (bool) { return this.deepProps({ Ae: { defaults: { waitMined: bool } } }) } },\n  deepConf: {\n    Ae: {\n      methods: [\n        'sendTransaction', 'height', 'awaitHeight', 'poll', 'balance', 'getBalance', 'tx',\n        'mempool', 'topBlock', 'getTxInfo', 'txDryRun', 'getName', 'getNodeInfo', 'getAccount', 'getContractByteCode', 'getContract', 'waitForTxConfirm'\n      ]\n    }\n  }\n}, required({\n  methods: {\n    sendTransaction: required,\n    height: required,\n    awaitHeight: required,\n    topBlock: required,\n    poll: required,\n    balance: required,\n    getBalance: required,\n    tx: required,\n    getTxInfo: required,\n    mempool: required,\n    txDryRun: required,\n    getAccount: required\n  }\n}))\n\n/**\n * Reconfigure Stamp to (not) wait until transactions are mined\n * @function waitMined\n * @static\n * @rtype (bool: Boolean) => Stamp\n * @param {boolean} bool - Whether to wait for transactions\n * @return {Stamp} Reconfigured Chain Stamp\n */\n\n/**\n * Submit a signed transaction for mining\n * @function sendTransaction\n * @instance\n * @abstract\n * @category async\n * @rtype (tx: String, options?: Object) => tx: Promise[Object]|txHash: Promise[String]\n * @param {String} tx - Transaction to submit\n * @param {String} [options={}] - Options to pass to the implementation\n * @param {String} [options.verify = false] - Verify transaction before broadcast.\n * @return {Object|String} Transaction or transaction hash\n */\n\n/**\n * Obtain current height of the chain\n * @function height\n * @instance\n * @abstract\n * @category async\n * @rtype () => height: Number\n * @return {Number} Current chain height\n */\n\n/**\n * Wait for the chain to reach a specific height\n * @function awaitHeight\n * @instance\n * @abstract\n * @category async\n * @rtype (height: Number, options?: Object) => height: Number\n * @param {Object} [options={}] - Options\n * @param {Number} options.interval - Interval (in ms) at which to poll the chain\n * @param {Number} options.attempts - Number of polling attempts after which to fail\n * @return {Number} Current chain height\n */\n\n/**\n * Wait for a transaction to be mined\n * @function poll\n * @instance\n * @abstract\n * @category async\n * @rtype (th: String, options?: Object) => tx: Object\n * @param {Object} [options={}] - Options\n * @param {Number} options.interval - Interval (in ms) at which to poll the chain\n * @param {Number} options.blocks - Number of blocks mined after which to fail\n * @return {Object} The transaction as it was mined\n */\n\n/**\n * Request the balance of specified account\n * @function balance\n * @instance\n * @abstract\n * @category async\n * @rtype (address: String, options?: Object) => balance: Number\n * @param {String} address - The public account address to obtain the balance for\n * @param {Object} [options={}] - Options\n * @param {Number} options.height - The chain height at which to obtain the balance for (default: top of chain)\n * @param {String} options.hash - The block hash on which to obtain the balance for (default: top of chain)\n * @return {Object} The transaction as it was mined\n */\n\n/**\n * Obtain a transaction based on its hash\n * @function tx\n * @instance\n * @abstract\n * @category async\n * @rtype (hash: String, info = false) => tx: Object\n * @param {String} hash - Transaction hash\n * @param {Boolean} info - Retrieve additional transaction date. Works only for (ContractCreate and ContractCall transaction's)\n * @return {Object} Transaction\n */\n\n/**\n * Obtain a transaction info based on its hash\n * @function getTxInfo\n * @instance\n * @abstract\n * @category async\n * @rtype (hash: String) => tx: Object\n * @param {String} hash - Transaction hash\n * @return {Object} Transaction\n */\n\n/**\n * Obtain transaction's from mempool\n * @function mempool\n * @instance\n * @abstract\n * @category async\n * @rtype () => txs: [...Object]\n * @return {Object[]} Transactions\n */\n\n/**\n * Obtain current generation\n * @function getCurrentGeneration\n * @instance\n * @abstract\n * @category async\n * @rtype () => generation: Object\n * @return {Object} Current Generation\n */\n\n/**\n * Get generation by hash or height\n * @function getGeneration\n * @instance\n * @abstract\n * @category async\n * @rtype (hashOrHeight) => generation: Object\n * @param {String|Number} hashOrHeight - Generation hash or height\n * @return {Object} Generation\n */\n\n/**\n * Wait for transaction confirmation\n * @function waitForTxConfirm\n * @instance\n * @abstract\n * @category async\n * @rtype (txHash: String, { confirm: Number | Boolean } = { confirm: 3 }) => Promise<Number>\n * @param {String} txHash - Generation hash or height\n * @param {String} [options={}] - options\n * @param {String} [options.confirm=3] - Block confirmation count\n * @return {Promise<Number>} Current Height\n */\n\n/**\n * Get micro block transactions\n * @function getMicroBlockTransactions\n * @instance\n * @abstract\n * @category async\n * @rtype (hash) => txs: [...Object]\n * @return {Object[]} Transactions\n */\n\n/**\n * Get key block\n * @function getKeyBlock\n * @instance\n * @abstract\n * @category async\n * @rtype (hashOrHeight) => keyBlock: Object\n * @return {Object} Key Block\n */\n\n/**\n * Get micro block header\n * @function getMicroBlockHeader\n * @instance\n * @abstract\n * @category async\n * @rtype (hash) => header: Object\n * @return {Object} Micro block header\n */\n\n/**\n * Get account by account public key\n * @function getAccount\n * @instance\n * @abstract\n * @category async\n * @rtype (address, { hash, height }) => account: Object\n * @param {String} address - Account public key\n * @param {Object} [options={}] - Options\n * @param {Number} [options.height] - Get account on specific block by block height\n * @param {String} [options.hash] - Get account on specific block by block hash\n * @return {Object} Account\n */\n\n/**\n * Transaction dry-run\n * @function txDryRun\n * @instance\n * @abstract\n * @category async\n * @rtype (txs, accounts, hashOrHeight) => result: Object\n * @param {Array} txs - Array of transaction's\n * @param {Array} accounts - Array of account's\n * @param {String|Number} hashOrHeight - hash or height of block on which to make dry-run\n * @return {Object} Result\n */\n\n/**\n * Get Node Info\n * @function getInfo\n * @instance\n * @abstract\n * @category async\n * @rtype () => result: Object\n * @return {Object} Result\n */\n\nexport default Chain\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\nimport stampit from '@stamp/it'\nimport * as R from 'ramda'\n\nfunction asyncInit (options = {}, { stamp, args, instance }) {\n  return stamp.compose.deepConfiguration.AsyncInit.initializers.reduce(async (instance, init) => {\n    instance = await Promise.resolve(instance)\n    if (typeof init === 'function') {\n      const ret = await Promise.resolve(init.call(instance, options, { stamp, args, instance }))\n      return ret === undefined ? instance : ret\n    }\n    return instance\n  }, instance)\n}\n\nconst AsyncInit = stampit({\n  deepConf: { AsyncInit: { initializers: [] } },\n  composers ({ stamp, composables }) {\n    const conf = stamp.compose.deepConfiguration.AsyncInit\n    conf.initializers = R.without([asyncInit], R.uniqWith(R.identical, R.flatten(composables.map(c => R.path(['compose', 'deepConfiguration', 'AsyncInit', 'initializers'], c) || (c.compose || c).initializers || []))))\n    stamp.compose.initializers = [asyncInit]\n  }\n})\n\nexport default AsyncInit\n","import BigNumber from 'bignumber.js'\n\n/* eslint-disable */\nexport default {\n  stringify: (function () {\n    'use strict';\n\n\n    var escapable = /[\\\\\\\"\\x00-\\x1f\\x7f-\\x9f\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g,\n      gap,\n      indent,\n      meta = {    // table of character substitutions\n        '\\b': '\\\\b',\n        '\\t': '\\\\t',\n        '\\n': '\\\\n',\n        '\\f': '\\\\f',\n        '\\r': '\\\\r',\n        '\"' : '\\\\\"',\n        '\\\\': '\\\\\\\\'\n      },\n      rep;\n\n\n    function quote(string) {\n\n// If the string contains no control characters, no quote characters, and no\n// backslash characters, then we can safely slap some quotes around it.\n// Otherwise we must also replace the offending characters with safe escape\n// sequences.\n\n      escapable.lastIndex = 0;\n      return escapable.test(string) ? '\"' + string.replace(escapable, function (a) {\n        var c = meta[a];\n        return typeof c === 'string'\n          ? c\n          : '\\\\u' + ('0000' + a.charCodeAt(0).toString(16)).slice(-4);\n      }) + '\"' : '\"' + string + '\"';\n    }\n\n\n    function str(key, holder) {\n\n// Produce a string from holder[key].\n\n      var i,          // The loop counter.\n        k,          // The member key.\n        v,          // The member value.\n        length,\n        mind = gap,\n        partial,\n        value = holder[key],\n        isBigNumber = value != null && (value instanceof BigNumber || BigNumber.isBigNumber(value) || BigNumber(value).toString(10) === value);\n\n// If the value has a toJSON method, call it to obtain a replacement value.\n\n      if (value && typeof value === 'object' &&\n        typeof value.toJSON === 'function') {\n        value = value.toJSON(key);\n      }\n\n// If we were called with a replacer function, then call the replacer to\n// obtain a replacement value.\n\n      if (typeof rep === 'function') {\n        value = rep.call(holder, key, value);\n      }\n\n// What happens next depends on the value's type.\n\n      switch (typeof value) {\n        case 'string':\n          if (isBigNumber) {\n            return value;\n          } else {\n            return quote(value);\n          }\n\n        case 'number':\n\n// JSON numbers must be finite. Encode non-finite numbers as null.\n\n          return isFinite(value) ? String(value) : 'null';\n\n        case 'boolean':\n\n// If the value is a boolean or null, convert it to a string. Note:\n// typeof null does not produce 'null'. The case is included here in\n// the remote chance that this gets fixed someday.\n\n          return String(value);\n\n// If the type is 'object', we might be dealing with an object or an array or\n// null.\n\n        case 'object':\n\n// Due to a specification blunder in ECMAScript, typeof null is 'object',\n// so watch out for that case.\n\n          if (!value) {\n            return 'null';\n          }\n\n// Make an array to hold the partial results of stringifying this object value.\n\n          gap += indent;\n          partial = [];\n\n// Is the value an array?\n\n          if (Object.prototype.toString.apply(value) === '[object Array]') {\n\n// The value is an array. Stringify every element. Use null as a placeholder\n// for non-JSON values.\n\n            length = value.length;\n            for (i = 0; i < length; i += 1) {\n              partial[i] = str(i, value) || 'null';\n            }\n\n// Join all of the elements together, separated with commas, and wrap them in\n// brackets.\n\n            v = partial.length === 0\n              ? '[]'\n              : gap\n                ? '[\\n' + gap + partial.join(',\\n' + gap) + '\\n' + mind + ']'\n                : '[' + partial.join(',') + ']';\n            gap = mind;\n            return v;\n          }\n\n// If the replacer is an array, use it to select the members to be stringified.\n\n          if (rep && typeof rep === 'object') {\n            length = rep.length;\n            for (i = 0; i < length; i += 1) {\n              if (typeof rep[i] === 'string') {\n                k = rep[i];\n                v = str(k, value);\n                if (v) {\n                  partial.push(quote(k) + (gap ? ': ' : ':') + v);\n                }\n              }\n            }\n          } else {\n\n// Otherwise, iterate through all of the keys in the object.\n\n            Object.keys(value).forEach(function(k) {\n              var v = str(k, value);\n              if (v) {\n                partial.push(quote(k) + (gap ? ': ' : ':') + v);\n              }\n            });\n          }\n\n// Join all of the member texts together, separated with commas,\n// and wrap them in braces.\n\n          v = partial.length === 0\n            ? '{}'\n            : gap\n              ? '{\\n' + gap + partial.join(',\\n' + gap) + '\\n' + mind + '}'\n              : '{' + partial.join(',') + '}';\n          gap = mind;\n          return v;\n      }\n    }\n\n// If the JSON object does not yet have a stringify method, give it one.\n\n    return function (value, replacer, space) {\n\n// The stringify method takes a value and an optional replacer, and an optional\n// space parameter, and returns a JSON text. The replacer can be a function\n// that can replace values, or an array of strings that will select the keys.\n// A default replacer method can be provided. Use of the space parameter can\n// produce text that is more easily readable.\n\n      var i;\n      gap = '';\n      indent = '';\n\n// If the space parameter is a number, make an indent string containing that\n// many spaces.\n\n      if (typeof space === 'number') {\n        for (i = 0; i < space; i += 1) {\n          indent += ' ';\n        }\n\n// If the space parameter is a string, it will be used as the indent string.\n\n      } else if (typeof space === 'string') {\n        indent = space;\n      }\n\n// If there is a replacer, it must be a function or an array.\n// Otherwise, throw an error.\n\n      rep = replacer;\n      if (replacer && typeof replacer !== 'function' &&\n        (typeof replacer !== 'object' ||\n          typeof replacer.length !== 'number')) {\n        throw new Error('JSON.stringify');\n      }\n\n// Make a fake root object containing our value under the key of ''.\n// Return the result of stringifying the value.\n\n      return str('', {'': value});\n    };\n  }()),\n  parse: ((options = {}) => {\n    // This is a function that can parse a JSON text, producing a JavaScript\n    // data structure. It is a simple, recursive descent parser. It does not use\n    // eval or regular expressions, so it can be used as a model for implementing\n    // a JSON parser in other languages.\n\n    // We are defining the function inside of another function to avoid creating\n    // global letiables.\n\n    // Default options one can override by passing options to the parse()\n    const _options = {\n      'strict': false, // not being strict means do not generate syntax errors for \"duplicate key\"\n      'storeAsString': false // toggles whether the values should be stored as BigNumber (default) or a string\n    }\n\n    const escapee = {\n      '\"': '\"',\n      '\\\\': '\\\\',\n      '/': '/',\n      b: '\\b',\n      f: '\\f',\n      n: '\\n',\n      r: '\\r',\n      t: '\\t'\n    }\n\n    // If there are options, then use them to override the default _options\n    if (options.strict === true) {\n      _options.strict = true\n    }\n    if (options.storeAsString === true) {\n      _options.storeAsString = true\n    }\n\n    let at\n    // The index of the current character\n\n    let ch\n    // The current character\n\n    let text\n\n    let error = function (m) {\n      // Call error when something is wrong.\n\n      throw {\n        name: 'SyntaxError',\n        message: m,\n        at: at,\n        text: text\n      }\n    }\n\n    let next = function (c) {\n      // If a c parameter is provided, verify that it matches the current character.\n\n      if (c && c !== ch) {\n        error('Expected \\'' + c + '\\' instead of \\'' + ch + '\\'')\n      }\n\n      // Get the next character. When there are no more characters,\n      // return the empty string.\n\n      ch = text.charAt(at)\n      at += 1\n      return ch\n    }\n\n    let number = function () {\n      // Parse a number value.\n\n      let number\n\n      let string = ''\n\n      if (ch === '-') {\n        string = '-'\n        next('-')\n      }\n      while (ch >= '0' && ch <= '9') {\n        string += ch\n        next()\n      }\n      if (ch === '.') {\n        string += '.'\n        while (next() && ch >= '0' && ch <= '9') {\n          string += ch\n        }\n      }\n      if (ch === 'e' || ch === 'E') {\n        string += ch\n        next()\n        if (ch === '-' || ch === '+') {\n          string += ch\n          next()\n        }\n        while (ch >= '0' && ch <= '9') {\n          string += ch\n          next()\n        }\n      }\n      number = +string\n      if (!isFinite(number)) {\n        error('Bad number')\n      } else {\n        // if (number > 9007199254740992 || number < -9007199254740992)\n        // Bignumber has stricter check: everything with length > 15 digits disallowed\n        if (string.length > 15) { return string }\n        return number\n      }\n    }\n\n    let string = function () {\n      // Parse a string value.\n\n      let hex\n\n      let i\n\n      let string = ''\n\n      let uffff\n\n      // When parsing for string values, we must look for \" and \\ characters.\n\n      if (ch === '\"') {\n        while (next()) {\n          if (ch === '\"') {\n            next()\n            return string\n          }\n          if (ch === '\\\\') {\n            next()\n            if (ch === 'u') {\n              uffff = 0\n              for (i = 0; i < 4; i += 1) {\n                hex = parseInt(next(), 16)\n                if (!isFinite(hex)) {\n                  break\n                }\n                uffff = uffff * 16 + hex\n              }\n              string += String.fromCharCode(uffff)\n            } else if (typeof escapee[ch] === 'string') {\n              string += escapee[ch]\n            } else {\n              break\n            }\n          } else {\n            string += ch\n          }\n        }\n      }\n      error('Bad string')\n    }\n\n    let white = function () {\n      // Skip whitespace.\n\n      while (ch && ch <= ' ') {\n        next()\n      }\n    }\n\n    let word = function () {\n      // true, false, or null.\n\n      switch (ch) {\n        case 't':\n          next('t')\n          next('r')\n          next('u')\n          next('e')\n          return true\n        case 'f':\n          next('f')\n          next('a')\n          next('l')\n          next('s')\n          next('e')\n          return false\n        case 'n':\n          next('n')\n          next('u')\n          next('l')\n          next('l')\n          return null\n      }\n      error('Unexpected \\'' + ch + '\\'')\n    }\n\n    let value\n    // Place holder for the value function.\n\n    let array = function () {\n      // Parse an array value.\n\n      let array = []\n\n      if (ch === '[') {\n        next('[')\n        white()\n        if (ch === ']') {\n          next(']')\n          return array // empty array\n        }\n        while (ch) {\n          array.push(value())\n          white()\n          if (ch === ']') {\n            next(']')\n            return array\n          }\n          next(',')\n          white()\n        }\n      }\n      error('Bad array')\n    }\n\n    let object = function () {\n      // Parse an object value.\n\n      let key\n\n      let object = {}\n\n      if (ch === '{') {\n        next('{')\n        white()\n        if (ch === '}') {\n          next('}')\n          return object // empty object\n        }\n        while (ch) {\n          key = string()\n          white()\n          next(':')\n          if (_options.strict === true && Object.hasOwnProperty.call(object, key)) {\n            error('Duplicate key \"' + key + '\"')\n          }\n          object[key] = value()\n          white()\n          if (ch === '}') {\n            next('}')\n            return object\n          }\n          next(',')\n          white()\n        }\n      }\n      error('Bad object')\n    }\n\n    value = function () {\n      // Parse a JSON value. It could be an object, an array, a string, a number,\n      // or a word.\n\n      white()\n      switch (ch) {\n        case '{':\n          return object()\n        case '[':\n          return array()\n        case '\"':\n          return string()\n        case '-':\n          return number()\n        default:\n          return ch >= '0' && ch <= '9' ? number() : word()\n      }\n    }\n\n    // Return the json_parse function. It will have access to all of the above\n    // functions and letiables.\n\n    return function (source, reviver) {\n      let result\n\n      text = source + ''\n      at = 0\n      ch = ' '\n      result = value()\n      white()\n      if (ch) {\n        error('Syntax error')\n      }\n\n      // If there is a reviver function, we recursively walk the new structure,\n      // passing each name/value pair to the reviver function for possible\n      // transformation, starting with a temporary root object that holds the result\n      // in an empty key. If there is not a reviver function, we simply return the\n      // result.\n\n      return typeof reviver === 'function'\n        ? (function walk (holder, key) {\n          let v; let value = holder[key]\n          if (value && typeof value === 'object') {\n            Object.keys(value).forEach(function (k) {\n              v = walk(value, k)\n              if (v !== undefined) {\n                value[k] = v\n              } else {\n                delete value[k]\n              }\n            })\n          }\n          return reviver.call(holder, key, value)\n        }({ '': result }, ''))\n        : result\n    }\n  })()\n}\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Swagger module\n * @module @aeternity/aepp-sdk/es/utils/swagger\n * @export Swagger\n * @example import Swagger from '@aeternity/aepp-sdk/es/utils/swagger'\n */\n\nimport JsonBig from './json-big'\nimport stampit from '@stamp/it'\nimport axios from 'axios'\nimport * as R from 'ramda'\nimport { snakeToPascal, pascalToSnake } from './string'\nimport BigNumber from 'bignumber.js'\n\n/**\n * Perform path string interpolation\n * @static\n * @rtype (path: String, replacements: Object) => String\n * @param {String} s - String to convert\n * @return {String} Converted string\n */\nfunction expandPath (path, replacements) {\n  return R.toPairs(replacements).reduce((path, [key, value]) => path.replace(`{${key}}`, value), path)\n}\n\n/**\n * Lookup type\n * @rtype (path: [String...], spec: Object, types: Object) => Object\n * @param {String[]} path - Path to look up\n * @param {Object} spec\n * @param {Object} types\n * @return {Object} Looked up type definition\n */\nfunction lookupType (path, spec, types) {\n  const type = (() => {\n    const match = R.path(path, spec).match(/^#\\/definitions\\/(.+)/)\n    if (match !== undefined) {\n      return match[1]\n    } else {\n      throw Error(`Reference path does not meet specification: ${path}`)\n    }\n  })()\n\n  if (type in types) {\n    return types[type]\n  } else {\n    throw Error(`Couldn't find definition for ${type}`)\n  }\n}\n\n/**\n * Intercept errors thrown by `fn()`, extending them with information from `key`\n * @rtype (key: String, fn: Function) => Any\n * @param {String} key - Information to attach\n * @param {Function} fn - Thunk\n * @return {Any} Execution result\n */\nfunction extendingErrorPath (key, fn) {\n  try {\n    return fn()\n  } catch (e) {\n    throw Object.assign(e, { path: [key].concat(e.path || []) })\n  }\n}\n\n/**\n * Construct Error with additional type information (not thrown)\n * @rtype (msg: String, spec: String, value: String) => Error\n * @param {String} msg - Error message\n * @param {String} spec\n * @param {String} value\n * @return {Error} Enhanced Error\n */\nfunction TypeError (msg, spec, value) {\n  const e = Error(msg)\n  return Object.assign(e, { spec, value })\n}\n\n/**\n * Per-type {@link conform} dispatcher\n * @rtype [(dispatch(value: String, spec: Object, types: Object) => Any, throws: Error)...]\n */\nconst conformTypes = {\n  integer (value, spec, types) {\n    if (R.type(value) === 'Number' || BigNumber(value).toString(10) === value) {\n      return R.type(value) === 'Number' ? Math.floor(value) : value\n    } else {\n      throw TypeError('Not an integer', spec, value)\n    }\n  },\n  enum (value, spec, types) {\n    const { enum: values } = spec\n    if (R.contains(value, values)) {\n      return value\n    } else {\n      throw TypeError(`Not one of [${R.join(', ', values)}]`, spec, value)\n    }\n  },\n  string (value, spec, types) {\n    if (R.type(value) === 'String') {\n      return value\n    } else {\n      throw TypeError('Not a string', spec, value)\n    }\n  },\n  object (value, spec, types) {\n    if (R.type(value) === 'Object') {\n      const required = (spec.required || []).map(snakeToPascal)\n      const properties = pascalizeKeys(spec.properties)\n      const missing = R.difference(required, R.keys(value))\n\n      if (missing.length > 0) {\n        throw TypeError(`Required properties missing: ${R.join(', ', missing)}`, spec, value)\n      } else {\n        return R.mapObjIndexed((value, key) => extendingErrorPath(key, () => conform(value, properties[key], types)), R.reject(R.isNil, R.pick(R.keys(properties), value)))\n      }\n    } else {\n      throw TypeError('Not an object', spec, value)\n    }\n  },\n  array (value, spec, types) {\n    if (R.type(value) === 'Array') {\n      return value.map(o => conform(o, spec.items, types))\n    } else {\n      throw TypeError('Not an array', spec, value)\n    }\n  },\n  schema (value, spec, types) {\n    return conform(value, lookupType(['schema', '$ref'], spec, types), types)\n  },\n  $ref (value, spec, types) {\n    return conform(value, lookupType(['$ref'], spec, types), types)\n  },\n  allOf (value, spec, types) {\n    return R.mergeAll(spec.allOf.map(spec => conform(value, spec, types)))\n  }\n}\n\n/**\n * {@link conform} dispatcher\n * @rtype (spec: Object) => String, throws: Error\n * @param {Object} spec\n * @return {String} Value to dispatch on\n */\nfunction conformDispatch (spec) {\n  if ('schema' in spec) {\n    return 'schema'\n  } else if ('$ref' in spec) {\n    return '$ref'\n  } else if ('enum' in spec) {\n    return 'enum'\n  } else if ('allOf' in spec) {\n    return 'allOf'\n  } else if ('type' in spec) {\n    return spec.type\n  } else {\n    throw Object.assign(Error('Could not determine type'), { spec })\n  }\n}\n\n/**\n * Conform `value` against its `spec`\n * @static\n * @rtype (value: Any, spec: Object, types: Object) => Any, throws: Error\n * @param {Object} value - Value to conform (validate and transform)\n * @param {Object} spec - Specification object\n * @param {Object} types - Types specification\n * @return {Object} Conformed value\n */\nfunction conform (value, spec, types) {\n  return (conformTypes[conformDispatch(spec)] || (() => {\n    throw Object.assign(Error('Unsupported type'), { spec })\n  }))(value, spec, types)\n}\n\nconst httpConfig = {\n  headers: { 'Content-Type': 'application/json' },\n  transformResponse: [(data) => {\n    try {\n      return JsonBig.parse(data)\n    } catch (e) {\n      return data\n    }\n  }],\n  transformRequest: [(data) => {\n    try {\n      return JsonBig.stringify(data)\n    } catch (e) {\n      return data\n    }\n  }]\n}\n\nconst httpClients = {\n  get: (config) => (url, params) => axios.get(url, [httpConfig, config, params].reduce(R.mergeDeepRight)),\n  post: (config) => (url, params) => axios.post(url, params, R.mergeDeepRight(httpConfig, config))\n}\n\n/**\n * Classify given `parameters`\n * @rtype (parameters: [{required: Boolean, in: String}...]) => {pathArgs: [...Object], queryArgs: [...Object], bodyArgs: [...Object], req: [...Object], opts: [...Object]}\n * @param {Object[]} parameters - Parameters to classify\n * @return {Object[]} Classified parameters\n */\nfunction classifyParameters (parameters) {\n  const { req, opts } = R.groupBy(p => p.required ? 'req' : 'opts', parameters)\n  const { path, query, body } = R.groupBy(p => p.in, parameters)\n\n  return {\n    pathArgs: R.pluck('name', path || []),\n    queryArgs: R.pluck('name', query || []),\n    bodyArgs: R.pluck('name', body || []),\n    req: req || [],\n    opts: opts || []\n  }\n}\n\n/**\n * Convert `name` attributes in `parameters` from snake_case to PascalCase\n * @rtype (parameters: [{name: String}...]) => [{name: String}...]\n * @param {Object[]} parameters - Parameters to pascalize\n * @return {Object[]} Pascalized parameters\n */\nfunction pascalizeParameters (parameters) {\n  return parameters.map(o => R.assoc('name', snakeToPascal(o.name), o))\n}\n\n/**\n * Key traversal metafunction\n * @static\n * @function\n * @rtype (fn: (s: String) => String) => (o: Object) => Object\n * @param {Function} fn - Key transformation function\n * @param {Object} o - Object to traverse\n * @return {Object} Transformed object\n */\nconst traverseKeys = R.curry((fn, o) => {\n  const dispatch = {\n    Object: o => R.fromPairs(R.toPairs(o).map(function (arr) {\n      const k = arr[0]\n      const v = arr[1]\n      return [fn(k), traverseKeys(fn, v)]\n    })),\n    Array: o => o.map(traverseKeys(fn))\n  }\n\n  return (dispatch[R.type(o)] || R.identity)(o)\n})\n\n/**\n * snake_case key traversal\n * @static\n * @rtype (o: Object) => Object\n * @param {Object} o - Object to traverse\n * @return {Object} Transformed object\n * @see pascalToSnake\n */\nfunction snakizeKeys (o) {\n  return traverseKeys(pascalToSnake, o)\n}\n\n/**\n * PascalCase key traversal\n * @static\n * @rtype (o: Object) => Object\n * @param {Object} o - Object to traverse\n * @return {Object} Transformed object\n * @see snakeToPascal\n */\nfunction pascalizeKeys (o) {\n  return traverseKeys(snakeToPascal, o)\n}\n\n/**\n * Obtain readable signature for operation\n * @rtype (name: String, req: [...Object], opts: [...Object]) => Object\n * @param {String} name - Name of operation\n * @param {Object[]} req - Required parameters to operation\n * @param {Object[]} opts - Optional parameters to operation\n * @return {String} Signature\n */\nfunction operationSignature (name, req, opts) {\n  const args = req.length ? `${R.join(', ', R.pluck('name', req))}` : null\n  const opt = opts.length ? `{${R.join(', ', R.pluck('name', opts))}}` : null\n\n  return `${name} (${R.join(', ', [args, opt].filter(R.identity))})`\n}\n\n/**\n * Assert that `coll` is a sequence with a length of 1 and extract the only element\n * @static\n * @rtype (coll: [...Any]) => Any, throws: Error\n * @param {Object[]} coll\n * @return {Object}\n */\nfunction assertOne (coll) {\n  if (coll.length === 1) {\n    return R.head(coll)\n  } else {\n    throw Error(`Expected exactly one element in ${coll}`)\n  }\n}\n\n/**\n * Destructure HTTP client `error`\n * @rtype (error: Error) => String\n * @param {Error} error\n * @return {String}\n */\nfunction destructureClientError (error) {\n  const { method, url } = error.config\n  const { status, data, statusText } = error.response\n  const reason = R.has('reason', data) ? data.reason : data ? R.toString(data) : statusText\n\n  return `${method.toUpperCase()} to ${url} failed with ${status}: ${reason}`\n}\n\n/**\n * Resolve reference\n * @rtype (ref: String, swag: Object) => Object\n * @param {String} ref - Reference to resolve\n * @param {Object} swag\n * @return {Object} Resolved reference definition\n */\nfunction resolveRef (ref, swag) {\n  const match = ref.match(/^#\\/(.+)$/)\n  if (match !== undefined) {\n    const value = R.path(match[1].split('/'), swag)\n    if (value != null) {\n      return value\n    }\n  }\n\n  throw Error(`Could not resolve reference: ${ref}`)\n}\n\n/**\n * Generate callable operation\n * @function\n * @static\n * @rtype (path: String, method: String, definition: Object, types: Object) => (instance: Swagger, url: String) => Promise[Any], throws: Error\n * @param {String} path - Path to call in URL\n * @param {String} method - HTTP method\n * @param {Object} definition - Complex definition\n * @param {Object} types - Swagger types\n * @return {Function}\n */\nconst operation = (path, method, definition, swag, { config, errorHandler } = {}) => {\n  config = config || {}\n  delete config.transformResponse // Prevent of overwriting transform response\n  const { operationId, description } = definition\n  const parameters = (definition.parameters || []).map(param =>\n    param.$ref ? resolveRef(param.$ref, swag) : param\n  )\n  const name = `${R.head(operationId).toLowerCase()}${R.drop(1, operationId)}`\n  const pascalized = pascalizeParameters(parameters)\n\n  const { pathArgs, queryArgs, bodyArgs, req, opts } = classifyParameters(pascalized)\n  const optNames = R.pluck('name', opts)\n  const indexedParameters = R.indexBy(R.prop('name'), pascalized)\n\n  const signature = operationSignature(name, req, opts)\n  const client = httpClients[method](config)\n\n  return (instance, url) => {\n    const fn = async function () {\n      const { defaults } = this.Swagger\n\n      try {\n        const [arg, opt] = (() => {\n          if (arguments.length === req.length) {\n            return [Array.from(arguments), defaults]\n          } else if (arguments.length === req.length + 1) {\n            return [R.dropLast(1, arguments), R.merge(defaults, R.last(arguments))]\n          } else {\n            throw Error(`Function call doesn't conform to ${signature}`)\n          }\n        })()\n\n        if (opt.debug) {\n          console.log(`Invoked ${name} with ${R.toString(arg)} ${R.toString(opt)}`)\n        }\n\n        const values = R.merge(R.reject(R.isNil, R.pick(optNames, opt)), R.zipObj(R.pluck('name', req), arg))\n        const conformed = R.mapObjIndexed((val, key) => {\n          try {\n            return conform(val, indexedParameters[key], swag.definitions)\n          } catch (e) {\n            const path = [key].concat(e.path || [])\n            throw Object.assign(e, {\n              path,\n              value: val,\n              message: `validating ${R.join(' -> ', path)}: ${e.message}`\n            })\n          }\n        }, values)\n        const expandedPath = expandPath(path, snakizeKeys(R.pick(pathArgs, conformed)))\n        const params = snakizeKeys((() => {\n          if (method === 'get') {\n            return { params: R.pick(queryArgs, conformed) }\n          } else if (method === 'post') {\n            return conformed[assertOne(bodyArgs)]\n          } else {\n            throw Error(`Unsupported method ${method}`)\n          }\n        })())\n\n        if (opt.debug) {\n          console.log(`Going to ${method.toUpperCase()} ${url}${expandedPath} with ${R.toString(params)}`)\n        }\n\n        try {\n          const response = await client(`${url}${expandedPath}`, params).catch(this.axiosError(errorHandler))\n          // return opt.fullResponse ? response : conform(pascalizeKeys(response.data), responses['200'], swag.definitions)\n          return opt.fullResponse ? response : pascalizeKeys(response.data)\n        } catch (e) {\n          if (R.path(['response', 'data'], e)) {\n            e.message = destructureClientError(e)\n          }\n          throw e\n        }\n      } catch (e) {\n        e.message = `While calling ${signature}, ${e.message}`\n        throw e\n      }\n    }.bind(instance)\n\n    Object.assign(fn, {\n      signature,\n      description\n    })\n\n    return Object.defineProperties(fn, {\n      name: {\n        value: name,\n        writable: false\n      },\n      length: {\n        value: req.length + (opts.length ? 1 : 0),\n        writable: false\n      }\n    })\n  }\n}\n\n/**\n * Swagger Stamp\n * @function\n * @alias module:@aeternity/aepp-sdk/es/utils/swagger\n * @rtype Stamp\n * @param {Object} options - Initializer object\n * @param {Object} options.swag - Swagger definition\n * @param {Object} options.axiosConfig - Object with axios configuration. Example { config: {}, errorHandler: (err) => throw err }\n * @return {Object} Account instance\n * @example Swagger({swag})\n */\nconst Swagger = stampit({\n  init ({ swag = this.swag, axiosConfig }, { stamp }) {\n    const { paths } = swag\n    const methods = R.indexBy(\n      R.prop('name'),\n      R.flatten(\n        R.values(\n          R.mapObjIndexed(\n            (methods, path) => R.values(\n              R.mapObjIndexed((definition, method) => {\n                const op = operation(path, method, definition, swag, axiosConfig)\n                return op(this, this.urlFor(swag.basePath, definition))\n              }, methods)),\n            paths\n          )\n        )\n      )\n    )\n\n    return Object.assign(this, {\n      methods: R.keys(methods),\n      api: methods\n    })\n  },\n  deepProps: {\n    Swagger: {\n      defaults: {\n        debug: false,\n        txEncoding: 'json'\n      }\n    }\n  },\n  statics: { debugSwagger (bool) { return this.deepProps({ Swagger: { defaults: { debug: bool } } }) } }\n})\n\n/**\n * Reconfigure Swagger to (not) spill debugging logs\n * @function debugSwagger\n * @static\n * @rtype (bool: Boolean) => Stamp\n * @param {boolean} bool - Whether to debug\n * @return {Stamp} Reconfigured Swagger Stamp\n */\n\nexport default Swagger\n\nexport {\n  conform,\n  operation,\n  expandPath,\n  assertOne,\n  snakeToPascal,\n  pascalToSnake,\n  traverseKeys\n}\n","export default function (version, geVersion, ltVersion) {\n  const versionComponents = version.split('-')[0].split('.')\n  const geComponents = geVersion.split('-')[0].split('.')\n  const ltComponents = ltVersion.split('-')[0].split('.')\n  const base = Math.max(...versionComponents, ...geComponents, ...ltComponents) + 1\n  const toNumber = components => components.reverse()\n    .reduce((acc, n, idx) => acc + n * Math.pow(base, idx), 0)\n\n  const vNumber = toNumber(versionComponents)\n  const geNumber = toNumber(geComponents)\n  const ltNumber = toNumber(ltComponents)\n  return vNumber >= geNumber && vNumber < ltNumber\n}\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Node module\n * @module @aeternity/aepp-sdk/es/node\n * @export Node\n * @example import Node from '@aeternity/aepp-sdk/es/node'\n */\n\nimport stampit from '@stamp/it'\nimport axios from 'axios'\nimport * as R from 'ramda'\nimport AsyncInit from './utils/async-init'\nimport Swagger from './utils/swagger'\nimport semverSatisfies from './utils/semver-satisfies'\n\n/**\n * Obtain Swagger configuration from Node node\n * @category async\n * @rtype (url: String) => swagger: Object\n * @param {String} url - Node base URL\n * @param {Object} axiosConfig Axios configuration object\n * @return {Object} Swagger configuration\n */\nasync function remoteSwag (url, axiosConfig) {\n  return (await axios.get(`${url}/api`, axiosConfig)).data\n}\n\n/**\n * Obtain networkId from account or node\n * @instance\n * @category async\n * @rtype () => networkId: String\n * @return {String} NetworkId\n */\nexport function getNetworkId () {\n  if (!this.networkId && !this.selectedNode.networkId) throw new Error('networkId is not provided')\n  return this.networkId || this.selectedNode.networkId\n}\n\n/**\n * Node specific loader for `urlFor`\n * @rtype ({url: String, internalUrl?: String}) => (path: String, definition: Object) => tx: String\n * @param {Object} options\n * @param {String} options.url - Base URL for Node\n * @param {String} options.internalUrl - Base URL for internal requests\n * @return {Function} Implementation for {@link urlFor}\n */\nconst loader = ({ url, internalUrl }) => (path, definition) => {\n  const { tags, operationId } = definition\n\n  if (R.contains('external', tags)) {\n    return `${url}${path}`\n  } else if (!R.isNil(internalUrl) && R.contains('internal', tags)) {\n    return `${internalUrl}${path}`\n  } else {\n    throw Error(`Method ${operationId} is unsupported. No interface for ${R.toString(tags)}`)\n  }\n}\n\n/**\n * get consensus protocol version\n * @param {Array} protocols Array of protocols\n * @param {Number} height Height\n * @return {Number} version Protocol version\n */\nasync function getConsensusProtocolVersion (protocols = [], height) {\n  if (!protocols) throw new Error('Protocols must be an array')\n  if (!height) height = (await this.api.getCurrentKeyBlock()).height\n  if (height < 0) throw new Error('height must be a number >= 0')\n\n  const { version } = protocols\n    .reduce(\n      ({ effectiveAtHeight, version }, p) => height >= p.effectiveAtHeight && p.effectiveAtHeight > effectiveAtHeight\n        ? { effectiveAtHeight: p.effectiveAtHeight, version: p.version }\n        : { effectiveAtHeight, version },\n      { effectiveAtHeight: -1, version: 0 }\n    )\n  return version\n}\n\nfunction axiosError (handler) {\n  return (error) => {\n    handler && typeof handler === 'function' && handler(error)\n    throw error\n  }\n}\n\n/**\n * {@link Swagger} based Node remote API Stamp\n * @function\n * @alias module:@aeternity/aepp-sdk/es/node\n * @rtype Stamp\n * @param {Object} [options={}] - Options\n * @param {String} options.url - Base URL for Node\n * @param {String} options.internalUrl - Base URL for internal requests\n * @param {String} options.axiosConfig - Object with axios configuration. Example { config: {}, errorHandler: (err) => throw err }\n * @return {Object} Node client\n * @example Node({url: 'https://sdk-testnet.aepps.com'})\n */\nconst Node = stampit(AsyncInit, {\n  async init ({ url = this.url, internalUrl = this.internalUrl, axiosConfig: { config, errorHandler } = {} }) {\n    if (!url) throw new Error('\"url\" required')\n    url = url.replace(/\\/?$/, '')\n    internalUrl = internalUrl ? internalUrl.replace(/\\/?$/, '') : url\n    // Get swagger schema\n    const swag = await remoteSwag(url, config).catch(this.axiosError(errorHandler))\n    this.version = swag.info.version\n    return Object.assign(this, {\n      url,\n      internalUrl,\n      swag: swag,\n      urlFor: loader({ url, internalUrl })\n    })\n  },\n  methods: {\n    axiosError,\n    getNodeInfo () {\n      return {\n        url: this.url,\n        internalUrl: this.internalUrl,\n        nodeNetworkId: this.nodeNetworkId,\n        version: this.version,\n        consensusProtocolVersion: this.consensusProtocolVersion\n      }\n    },\n    getConsensusProtocolVersion\n  },\n  props: {\n    version: null,\n    consensusProtocolVersion: null,\n    nodeNetworkId: null\n  }\n}, Swagger, {\n  async init ({ forceCompatibility = false }) {\n    const { nodeRevision: revision, genesisKeyBlockHash: genesisHash, networkId, protocols } = await this.api.getStatus()\n    this.consensusProtocolVersion = await this.getConsensusProtocolVersion(protocols)\n    if (\n      (\n        !semverSatisfies(this.version.split('-')[0], NODE_GE_VERSION, NODE_LT_VERSION) ||\n        this.version === '5.0.0-rc1'\n      ) &&\n      // Todo implement 'rc' version comparision in semverSatisfies\n      !forceCompatibility\n    ) {\n      throw new Error(\n        `Unsupported node version ${this.version}. ` +\n        `Supported: >= ${NODE_GE_VERSION} < ${NODE_LT_VERSION}`\n      )\n    }\n\n    this.nodeNetworkId = networkId\n    return Object.assign(this, { revision, genesisHash })\n  }\n})\n\nconst NODE_GE_VERSION = '5.0.0'\nconst NODE_LT_VERSION = '6.0.0'\n\nexport default Node\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Account module\n * @module @aeternity/aepp-sdk/es/account\n * @export Account\n * @example import Account from '@aeternity/aepp-sdk/es/account'\n */\n\nimport stampit from '@stamp/it'\nimport { required } from '@stamp/required'\n\nimport { hash, personalMessageToBinary, decodeBase64Check, assertedType, verifyPersonalMessage } from '../utils/crypto'\nimport { buildTx } from '../tx/builder'\nimport { decode } from '../tx/builder/helpers'\nimport { TX_TYPE } from '../tx/builder/schema'\nimport { getNetworkId } from '../node'\n\n/**\n * Sign encoded transaction\n * @instance\n * @category async\n * @rtype (tx: String) => tx: Promise[String], throws: Error\n * @param {String} tx - Transaction to sign\n * @param {Object} opt - Options\n * @return {String} Signed transaction\n */\nasync function signTransaction (tx, opt = {}) {\n  const networkId = this.getNetworkId()\n  const rlpBinaryTx = decodeBase64Check(assertedType(tx, 'tx'))\n  // Prepend `NETWORK_ID` to begin of data binary\n  const txWithNetworkId = Buffer.concat([Buffer.from(networkId), rlpBinaryTx])\n\n  const signatures = [await this.sign(txWithNetworkId, opt)]\n  return buildTx({ encodedTx: rlpBinaryTx, signatures }, TX_TYPE.signed).tx\n}\n\n/**\n * Sign message\n * @instance\n * @category async\n * @rtype (msg: String) => signature: Promise[String], throws: Error\n * @param {String} message - Message to sign\n * @param {Object} opt - Options\n * @return {String} Signature\n */\nasync function signMessage (message, opt = { returnHex: false }) {\n  const sig = await this.sign(hash(personalMessageToBinary(message)), opt)\n  return opt.returnHex ? Buffer.from(sig).toString('hex') : sig\n}\n\n/**\n * Verify message\n * @instance\n * @category async\n * @rtype (msg: String, signature: String, publicKey: String) => signature: Promise[String], throws: Error\n * @param {String} message - Message to verify\n * @param {String} signature - Signature\n * @param {Object} opt - Options\n * @return {Boolean}\n */\nasync function verifyMessage (message, signature, opt = {}) {\n  return verifyPersonalMessage(message, typeof signature === 'string' ? Buffer.from(signature, 'hex') : signature, decode(await this.address(opt)))\n}\n\n/**\n * Basic Account Stamp\n *\n * Attempting to create instances from the Stamp without overwriting all\n * abstract methods using composition will result in an exception.\n *\n * Account is one of the three basic building blocks of an\n * {@link module:@aeternity/aepp-sdk/es/ae--Ae} client and provides access to a\n * signing key pair.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/account\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @param {String} options.networkId - NETWORK_ID using for signing transaction's\n * @return {Object} Account instance\n */\nconst Account = stampit({\n  init ({ networkId }) { // NETWORK_ID using for signing transaction's\n    if (!this.networkId && networkId) {\n      this.networkId = networkId\n    }\n  },\n  methods: { signTransaction, getNetworkId, signMessage, verifyMessage },\n  deepConf: {\n    Ae: {\n      methods: ['sign', 'address', 'signTransaction', 'getNetworkId', 'signMessage', 'verifyMessage']\n    }\n  }\n}, required({\n  methods: {\n    sign: required,\n    address: required\n  }\n}))\n\n/**\n * Sign data blob\n * @function sign\n * @instance\n * @abstract\n * @category async\n * @rtype (data: String) => data: Promise[String]\n * @param {String} data - Data blob to sign\n * @return {String} Signed data blob\n */\n\n/**\n * Obtain account address\n * @function address\n * @instance\n * @abstract\n * @category async\n * @rtype () => address: Promise[String]\n * @return {String} Public account address\n */\n\nexport default Account\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Ae module\n * @module @aeternity/aepp-sdk/es/ae\n * @export Ae\n * @example import Ae from '@aeternity/aepp-sdk/es/ae'\n */\n\nimport stampit from '@stamp/it'\nimport Tx from '../tx'\nimport Chain from '../chain'\nimport Account from '../account'\nimport TxBuilder from '../tx/builder'\nimport * as R from 'ramda'\nimport { BigNumber } from 'bignumber.js'\nimport { isAddressValid } from '../utils/crypto'\nimport { isNameValid, produceNameId } from '../tx/builder/helpers'\nimport { AE_AMOUNT_FORMATS } from '../utils/amount-formatter'\n\n/**\n * Sign and post a transaction to the chain\n * @instance\n * @category async\n * @rtype (tx: String, options: Object) => Promise[String]\n * @param {String} tx - Transaction\n * @param {Object} [options={}] options - Options\n * @param {Object} [options.verify] verify - Verify transaction before broadcast, throw error if not valid\n * @return {String|String} Transaction or transaction hash\n */\nasync function send (tx, options = {}) {\n  const opt = R.merge(this.Ae.defaults, options)\n  const { contractId: gaId, authFun } = await this.getAccount(await this.address(opt))\n  const signed = gaId\n    ? await this.signUsingGA(tx, { ...opt, authFun })\n    : await this.signTransaction(tx, opt)\n  return this.sendTransaction(signed, opt)\n}\n\nasync function signUsingGA (tx, options = {}) {\n  const { authData, authFun } = options\n  return this.createMetaTx(tx, authData, authFun, options)\n}\n\n/**\n * Send tokens to another account\n * @instance\n * @category async\n * @rtype (amount: Number|String, recipientId: String, options?: Object) => Promise[String]\n * @param {Number|String} amount - Amount to spend\n * @param {String} recipientId - Address or Name of recipient account\n * @param {Object} options - Options\n * @return {String|String} Transaction or transaction hash\n */\nasync function spend (amount, recipientId, options = {}) {\n  const opt = R.merge(this.Ae.defaults, options)\n  recipientId = await this.resolveRecipientName(recipientId, options)\n  const spendTx = await this.spendTx(R.merge(opt, { senderId: await this.address(opt), recipientId, amount }))\n  return this.send(spendTx, opt)\n}\n\n/**\n * Resolve AENS name and return name hash\n * @param {String} nameOrAddress\n * @param {Boolean} verify\n * @return {String} Address or AENS name hash\n */\nasync function resolveRecipientName (nameOrAddress, { verify = false }) {\n  if (isAddressValid(nameOrAddress)) return nameOrAddress\n  if (isNameValid(nameOrAddress)) {\n    // Validation\n    if (verify) {\n      const { pointers } = await this.getName(nameOrAddress)\n      if (!pointers.find(({ id }) => id.split('_')[0] === 'ak')) throw new Error(`Name ${nameOrAddress} do not have pointers for account`)\n    }\n    return produceNameId(nameOrAddress)\n  }\n  throw new Error('Invalid recipient name or address: ' + nameOrAddress)\n}\n\n/**\n * Send a percentage of funds to another account\n * @instance\n * @category async\n * @rtype (percentage: Number|String, recipientId: String, options?: Object) => Promise[String]\n * @param {Number|String} percentage - Percentage of amount to spend\n * @param {String} recipientId - Address of recipient account\n * @param {Object} options - Options\n * @return {String|String} Transaction or transaction hash\n */\nasync function transferFunds (percentage, recipientId, options = { excludeFee: false }) {\n  if (percentage < 0 || percentage > 1) throw new Error(`Percentage should be a number between 0 and 1, got ${percentage}`)\n  const opt = R.merge(this.Ae.defaults, options)\n\n  const requestTransferAmount = BigNumber(await this.balance(await this.address())).times(percentage)\n  let spendTx = await this.spendTx(R.merge(opt, { senderId: await this.address(), recipientId, amount: requestTransferAmount }))\n\n  const { tx: txObject } = TxBuilder.unpackTx(spendTx)\n  // If the requestTransferAmount should include the fee keep calculating the fee\n  let amount = requestTransferAmount\n  if (!options.excludeFee) {\n    while (amount.plus(txObject.fee).gt(requestTransferAmount)) {\n      amount = requestTransferAmount.minus(txObject.fee)\n    }\n  }\n\n  // Rebuild tx\n  spendTx = await this.spendTx(R.merge(opt, { senderId: await this.address(), recipientId, amount }))\n\n  return this.send(spendTx, opt)\n}\n\n/**\n * Remove all listeners for RPC\n * @instance\n * @return {void}\n */\nfunction destroyInstance () {\n  const destroyMethods = ['destroyClient', 'destroyServer'] // Array with destroy function's\n  destroyMethods.forEach(m => this[m] && typeof this[m] === 'function' && this[m]())\n}\n\n/**\n * Basic Ae Stamp\n *\n * Attempting to create instances from the Stamp without overwriting all\n * abstract methods using composition will result in an exception.\n *\n * Ae objects are the composition of three basic building blocks:\n * * {@link module:@aeternity/aepp-sdk/es/tx--Tx}\n * * {@link module:@aeternity/aepp-sdk/es/account--Account}\n * * {@link module:@aeternity/aepp-sdk/es/chain--Chain}\n * Only by providing the joint functionality of those three, most more advanced\n * operations, i.e. the ones with actual use value on the chain, become\n * available.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @return {Object} Ae instance\n */\nconst Ae = stampit(Tx, Account, Chain, {\n  methods: { send, spend, transferFunds, destroyInstance, resolveRecipientName, signUsingGA },\n  deepProps: { Ae: { defaults: { denomination: AE_AMOUNT_FORMATS.AETTOS } } },\n  deepConfiguration: { Ae: { methods: ['signUsingGA'] } }\n})\n\nexport default Ae\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * OracleNodeAPI module\n *\n * This is the complement to {@link module:@aeternity/aepp-sdk/es/oracle}.\n * @module @aeternity/aepp-sdk/es/oracle/node\n * @export OracleNodeAPI\n * @example import OracleNodeAPI from '@aeternity/aepp-sdk/es/oracle/node'\n */\n\nimport OracleBase from './'\n\nasync function getOracle (oracleId) {\n  return this.api.getOracleByPubkey(oracleId)\n}\n\nasync function getOracleQueries (oracleId) {\n  return this.api.getOracleQueriesByPubkey(oracleId)\n}\n\nasync function getOracleQuery (oracleId, queryId) {\n  return this.api.getOracleQueryByPubkeyAndQueryId(oracleId, queryId)\n}\n\nconst OracleNodeAPI = OracleBase.compose({\n  methods: {\n    getOracle,\n    getOracleQueries,\n    getOracleQuery\n  }\n})\n\nexport default OracleNodeAPI\n","export const DEFAULT_NETWORK_ID = 'ae_mainnet'\n\nexport const getterForCurrentNode = (currentNode) => {\n  if (!currentNode || !currentNode.instance) throw new Error('You can\\'t use Node API. Node is not connected or not defined!')\n\n  return currentNode.instance.api\n}\n\nexport const prepareNodeObject = (name, node) => ({\n  name,\n  instance: node,\n  url: node.url,\n  internalUrl: node.internalUrl,\n  networkId: node.nodeNetworkId,\n  version: node.version,\n  consensusProtocolVersion: node.consensusProtocolVersion\n})\n","/**\n * NodePool module\n * @module @aeternity/aepp-sdk/es/node-pool\n * @export NodePool\n * @example import NodePool from '@aeternity/aepp-sdk/es/node-pool'\n */\nimport { getterForCurrentNode, prepareNodeObject } from './helpers'\nimport AsyncInit from '../utils/async-init'\nimport { getNetworkId } from '../node'\n\n/**\n * Node Pool Stamp\n * This stamp allow you to make basic manipulation(add, remove, select) on list of nodes\n * @function\n * @alias module:@aeternity/aepp-sdk/es/node-pool\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @param {Array} [options.nodes] - Array with Node instances\n * @return {Object} NodePool instance\n */\nexport const NodePool = AsyncInit.compose({\n  async init ({ nodes = [] } = {}) {\n    this.pool = new Map()\n    this.validateNodes(nodes)\n\n    nodes.forEach((node, i) => {\n      const { name, instance } = node\n      this.addNode(name, instance, i === 0)\n    })\n    if (nodes.length) this.selectNode(nodes[0].name)\n  },\n  propertyDescriptors: {\n    api: {\n      enumerable: true,\n      configurable: false,\n      get () {\n        return getterForCurrentNode(this.selectedNode)\n      }\n    }\n  },\n  methods: {\n    /**\n     * Add Node\n     * @function\n     * @alias module:@aeternity/aepp-sdk/es/node-pool\n     * @rtype (name: String, nodeInstance: Object, select: Boolean) => Void\n     * @param {String} name - Node name\n     * @param {Object} nodeInstance - Node instance\n     * @param {Boolean} select - Select this node as current\n     * @return {Void}\n     * @example\n     * nodePool.addNode('testNode', awaitNode({ url, internalUrl }), true) // add and select new node with name 'testNode'\n     */\n    addNode (name, nodeInstance, select = false) {\n      if (this.pool.has(name)) throw new Error(`Node with name ${name} already exist`)\n\n      this.validateNodes([{ name, instance: nodeInstance }])\n\n      this.pool.set(name, prepareNodeObject(name, nodeInstance))\n      if (select || !this.selectedNode) {\n        this.selectNode(name)\n      }\n    },\n    /**\n     * Select Node\n     * @function\n     * @alias module:@aeternity/aepp-sdk/es/node-pool\n     * @rtype (name: String) => Void\n     * @param {String} name - Node name\n     * @return {Void}\n     * @example\n     * nodePool.selectNode('testNode')\n     */\n    selectNode (name) {\n      if (!this.pool.has(name)) throw new Error(`Node with name ${name} not in pool`)\n\n      this.selectedNode = this.pool.get(name)\n    },\n    /**\n     * Get NetworkId of current Node\n     * @function\n     * @alias module:@aeternity/aepp-sdk/es/node-pool\n     * @rtype () => String\n     * @return {String}\n     * @example\n     * nodePool.getNetworkId()\n     */\n    getNetworkId,\n    /**\n     * Check if you have selected node\n     * @function\n     * @alias module:@aeternity/aepp-sdk/es/node-pool\n     * @rtype () => Boolean\n     * @return {Boolean}\n     * @example\n     * nodePool.isNodeConnected()\n     */\n    isNodeConnected () {\n      return !!this.selectedNode.instance\n    },\n    /**\n     * Get information about node\n     * @function\n     * @alias module:@aeternity/aepp-sdk/es/node-pool\n     * @rtype () => Object\n     * @return {Object}\n     * @example\n     * nodePool.getNodeInfo() // { name, version, networkId, protocol, ... }\n     */\n    getNodeInfo () {\n      if (!this.isNodeConnected()) throw new Error('Can not get node info. Node is not connected')\n      return {\n        name: this.selectedNode.name,\n        ...this.selectedNode.instance.getNodeInfo()\n      }\n    },\n    /**\n     * Get array of available nodes\n     * @function\n     * @alias module:@aeternity/aepp-sdk/es/node-pool\n     * @rtype () => Object[]\n     * @return {Object[]}\n     * @example\n     * nodePool.getNodesInPool()\n     */\n    getNodesInPool () {\n      return Array.from(this.pool.entries()).map(([name, node]) => ({\n        name,\n        ...node.instance.getNodeInfo()\n      }))\n    },\n    validateNodes (nodes) {\n      const nodeProps = ['Swagger', 'api', 'consensusProtocolVersion', 'genesisHash', 'methods']\n      nodes.forEach((node, index) => {\n        if (typeof node !== 'object') throw new Error('Node must be an object with \"name\" and \"instance\" props')\n        if (['name', 'instance'].find(k => !node[k])) throw new Error(`Node object on index ${index} must contain node \"name\" and \"ins\"`)\n        if (!node.instance || typeof node.instance !== 'object' || nodeProps.find(prop => !(prop in node.instance))) {\n          throw new Error('Invalid node instance object')\n        }\n      })\n    }\n  },\n  props: {\n    selectedNode: {}\n  }\n})\n\nexport default NodePool\n","import {\n  verify,\n  decodeBase58Check,\n  assertedType\n} from '../utils/crypto'\nimport { encode } from '../tx/builder/helpers'\n\nimport { BigNumber } from 'bignumber.js'\nimport {\n  BASE_VERIFICATION_SCHEMA,\n  CONTRACT_VERIFICATION_SCHEMA,\n  MIN_GAS_PRICE,\n  NAME_CLAIM_VERIFICATION_SCHEMA,\n  OBJECT_ID_TX_TYPE,\n  OBJECT_TAG_SIGNED_TRANSACTION,\n  PROTOCOL_VM_ABI,\n  SIGNATURE_VERIFICATION_SCHEMA,\n  TX_TYPE\n} from './builder/schema'\nimport { calculateFee, unpackTx } from './builder'\nimport { NodePool } from '../node-pool'\n\n/**\n * Transaction validator\n * @module @aeternity/aepp-sdk/es/tx/validator\n * @export TransactionValidator\n * @example import TransactionValidator from '@aeternity/aepp-sdk/es/tx/validator'\n */\n\nconst VALIDATORS = {\n  // VALIDATE SIGNATURE\n  signature ({ rlpEncoded, signature, ownerPublicKey, networkId = 'ae_mainnet' }) {\n    const txWithNetworkId = Buffer.concat([Buffer.from(networkId), rlpEncoded])\n    return verify(txWithNetworkId, signature, decodeBase58Check(assertedType(ownerPublicKey, 'ak')))\n  },\n  // VALIDATE IF ENOUGH FEE\n  insufficientFee ({ minFee, fee }) {\n    return BigNumber(minFee).lte(BigNumber(fee))\n  },\n  // VALIDATE IF TTL VALID\n  expiredTTL ({ ttl, height }) {\n    return BigNumber(ttl).eq(0) || BigNumber(ttl).gte(BigNumber(height))\n  },\n  // Insufficient Balance for Amount plus Fee\n  insufficientBalanceForAmountFee ({ balance, amount = 0, fee }) {\n    return BigNumber(balance).gt(BigNumber(amount).plus(fee))\n  },\n  // Insufficient Balance for Amount\n  insufficientBalanceForAmount ({ balance, amount = 0 }) {\n    return BigNumber(balance).gt(BigNumber(amount))\n  },\n  // IF NONCE USED\n  nonceUsed ({ accountNonce, nonce }) {\n    return BigNumber(nonce).gt(BigNumber(accountNonce))\n  },\n  // IF NONCE TO HIGH\n  nonceHigh ({ accountNonce, nonce }) {\n    return !(BigNumber(nonce).gt(BigNumber(accountNonce).plus(1)))\n  },\n  minGasPrice ({ gasPrice }) {\n    return isNaN(gasPrice) || BigNumber(gasPrice).gte(BigNumber(MIN_GAS_PRICE))\n  },\n  // VM/ABI version validation based on consensus protocol version\n  vmAndAbiVersion ({ ctVersion, abiVersion, consensusProtocolVersion, txType }) {\n    // If not contract tx\n    if (!ctVersion) ctVersion = { abiVersion }\n    const supportedProtocol = PROTOCOL_VM_ABI[consensusProtocolVersion]\n    // If protocol not implemented\n    if (!supportedProtocol) return true\n    // If protocol for tx type not implemented\n    const txProtocol = supportedProtocol[txType]\n\n    return !Object.entries(ctVersion)\n      .reduce((acc, [key, value]) =>\n        [...acc, value === undefined ? true : txProtocol[key].includes(parseInt(value))],\n      []).includes(false)\n  },\n  insufficientBalanceForFeeNameFee ({ nameFee, fee, balance, VSN }) {\n    return VSN === 1 || BigNumber(balance).gt(BigNumber(nameFee).plus(fee))\n  }\n}\n\nconst resolveDataForBase = async (chain, { ownerPublicKey }) => {\n  let accountNonce = 0\n  let accountBalance = 0\n  try {\n    const { nonce, balance } = await chain.api.getAccountByPubkey(ownerPublicKey)\n    accountNonce = nonce\n    accountBalance = balance\n  } catch (e) { console.log('We can not get info about this publicKey') }\n  return {\n    height: (await chain.api.getCurrentKeyBlockHeight()).height,\n    balance: accountBalance,\n    accountNonce,\n    ownerPublicKey,\n    ...chain.getNodeInfo()\n  }\n}\n\n// Verification using SCHEMA\nconst verifySchema = (schema, data) => {\n  // Verify through schema\n  return schema.reduce(\n    (acc, [msg, validatorKey, { key, type, txKey }]) => {\n      if (!VALIDATORS[validatorKey](data)) acc.push({ msg: msg(data), txKey, type })\n      return acc\n    },\n    []\n  )\n}\n\n/**\n * Unpack and verify transaction (verify nonce, ttl, fee, signature, account balance)\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/validator\n *\n * @param {String} txHash Base64Check transaction hash\n * @param {Object} [options={}] Options\n * @param {String} [options.networkId] networkId Use in signature verification\n * @return {Promise<Object>} Object with verification errors and warnings\n */\nasync function unpackAndVerify (txHash, { networkId } = {}) {\n  const { tx: unpackedTx, rlpEncoded, txType } = unpackTx(txHash)\n\n  if (+unpackedTx.tag === OBJECT_TAG_SIGNED_TRANSACTION) {\n    const { txType, tx } = unpackedTx.encodedTx\n    const signatures = unpackedTx.signatures.map(raw => ({ raw, hash: encode(raw, 'sg') }))\n    const rlpEncodedTx = unpackedTx.encodedTx.rlpEncoded\n\n    return {\n      validation: await this.verifyTx({ tx, signatures, rlpEncoded: rlpEncodedTx }, networkId),\n      tx,\n      signatures,\n      txType\n    }\n  }\n  return {\n    validation: await this.verifyTx({ tx: unpackedTx, rlpEncoded }, networkId),\n    tx: unpackedTx,\n    txType\n  }\n}\n\nconst getOwnerPublicKey = (tx) =>\n  tx[['senderId', 'accountId', 'ownerId', 'callerId', 'oracleId', 'fromId', 'initiator', 'gaId'].find(key => tx[key])].replace('ok_', 'ak_')\n\n/**\n * Verify transaction (verify nonce, ttl, fee, signature, account balance)\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/validator\n *\n * @param {Object} [data={}] data TX data object\n * @param {String} [data.tx] tx Transaction hash\n * @param {Array} [data.signatures] signatures Transaction signature's\n * @param {Array} [data.rlpEncoded] rlpEncoded RLP encoded transaction\n * @param {String} networkId networkId Use in signature verification\n * @return {Promise<Array>} Object with verification errors and warnings\n */\nasync function verifyTx ({ tx, signatures, rlpEncoded }, networkId) {\n  networkId = networkId || this.getNetworkId() || 'ae_mainnet'\n  // Fetch data for verification\n  const ownerPublicKey = getOwnerPublicKey(tx)\n  const gas = Object.prototype.hasOwnProperty.call(tx, 'gas') ? +tx.gas : 0\n  const txType = OBJECT_ID_TX_TYPE[+tx.tag]\n  const resolvedData = {\n    minFee: calculateFee(0, txType, { gas, params: tx, showWarning: false }),\n    ...(await resolveDataForBase(this, { ownerPublicKey })),\n    ...tx,\n    txType\n  }\n  const signatureVerification = signatures && signatures.length\n    ? verifySchema(SIGNATURE_VERIFICATION_SCHEMA, {\n      rlpEncoded,\n      signature: signatures[0].raw,\n      ownerPublicKey,\n      networkId\n    })\n    : []\n  const baseVerification = verifySchema(BASE_VERIFICATION_SCHEMA, resolvedData)\n\n  return [\n    ...baseVerification,\n    ...signatureVerification,\n    ...customVerification(txType, resolvedData)\n  ]\n}\n\n/**\n * Verification for speciific txType\n * @param txType\n * @param data\n * @return {Array}\n */\nfunction customVerification (txType, data) {\n  switch (txType) {\n    case TX_TYPE.contractCreate:\n    case TX_TYPE.contractCall:\n    case TX_TYPE.oracleRegister:\n      return verifySchema(CONTRACT_VERIFICATION_SCHEMA, data)\n    case TX_TYPE.nameClaim:\n      return verifySchema(NAME_CLAIM_VERIFICATION_SCHEMA, data)\n    default:\n      return []\n  }\n}\n\n/**\n * Transaction Validator Stamp\n * This stamp give us possibility to unpack and validate some of transaction properties,\n * to make sure we can post it to the chain\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/validator\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @param {Object} [options.url] - Node url\n * @param {Object} [options.internalUrl] - Node internal url\n * @return {Object} Transaction Validator instance\n * @example TransactionValidator({url: 'https://sdk-testnet.aepps.com'})\n */\nconst TransactionValidator = NodePool.compose({\n  methods: {\n    verifyTx,\n    unpackAndVerify\n  }\n})\n\nexport default TransactionValidator\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\nimport * as R from 'ramda'\n\nimport Chain from './'\nimport Oracle from '../oracle/node'\nimport { AE_AMOUNT_FORMATS, formatAmount } from '../utils/amount-formatter'\nimport TransactionValidator from '../tx/validator'\nimport NodePool from '../node-pool'\n\n/**\n * ChainNode module\n *\n * This is the complement to {@link module:@aeternity/aepp-sdk/es/chain}.\n * @module @aeternity/aepp-sdk/es/chain/node\n * @export ChainNode\n * @example import ChainNode from '@aeternity/aepp-sdk/es/chain/node'\n */\n\nasync function sendTransaction (tx, options = {}) {\n  const { waitMined, verify } = R.merge(this.Ae.defaults, options)\n  // Verify transaction before broadcast\n  if (verify || (typeof verify !== 'boolean' && this.verifyTxBeforeSend)) {\n    const { validation, tx: txObject, txType } = await this.unpackAndVerify(tx)\n    if (validation.length) {\n      throw Object.assign(Error('Transaction verification error: ' + JSON.stringify(validation)), {\n        code: 'TX_VERIFICATION_ERROR',\n        errorData: { validation, tx: txObject, txType },\n        txHash: tx\n      })\n    }\n  }\n\n  try {\n    const { txHash } = await this.api.postTransaction({ tx })\n\n    if (waitMined) {\n      const txData = { ...(await this.poll(txHash, options)), rawTx: tx }\n      // wait for transaction confirmation\n      if (options.confirm) {\n        return { ...txData, confirmationHeight: await this.waitForTxConfirm(txHash, options) }\n      }\n      return txData\n    }\n    return { hash: txHash, rawTx: tx }\n  } catch (e) {\n    throw Object.assign(\n      (new Error(e.message)),\n      {\n        rawTx: tx,\n        verifyTx: () => this.unpackAndVerify(tx)\n      }\n    )\n  }\n}\n\nasync function waitForTxConfirm (txHash, options = { confirm: 3 }) {\n  options.confirm = typeof options.confirm === 'boolean' && options.confirm ? 3 : options.confirm\n  const { blockHeight } = await this.tx(txHash)\n  return this.awaitHeight(blockHeight + options.confirm, options)\n}\n\nasync function getAccount (address, { height, hash } = {}) {\n  if (height) return this.api.getAccountByPubkeyAndHeight(address, height)\n  if (hash) return this.api.getAccountByPubkeyAndHash(address, hash)\n  return this.api.getAccountByPubkey(address)\n}\n\n/**\n * @function\n * @deprecated\n */\nasync function balance (address, { height, hash, format = AE_AMOUNT_FORMATS.AETTOS } = {}) {\n  const { balance } = await this.getAccount(address, { hash, height })\n\n  return formatAmount(balance, { targetDenomination: format }).toString()\n}\n\nasync function getBalance (address, { height, hash, format = AE_AMOUNT_FORMATS.AETTOS } = {}) {\n  const { balance } = await this.getAccount(address, { hash, height }).catch(_ => ({ balance: 0 }))\n\n  return formatAmount(balance, { targetDenomination: format }).toString()\n}\n\nasync function tx (hash, info = true) {\n  const tx = await this.api.getTransactionByHash(hash)\n  if (['ContractCreateTx', 'ContractCallTx'].includes(tx.tx.type) && info) {\n    try {\n      return { ...tx, ...await this.getTxInfo(hash) }\n    } catch (e) {\n      return tx\n    }\n  }\n  return tx\n}\n\nasync function height () {\n  return (await this.api.getCurrentKeyBlockHeight()).height\n}\n\nasync function pause (duration) {\n  await new Promise(resolve => setTimeout(resolve, duration))\n}\n\nasync function awaitHeight (h, { interval = 5000, attempts = 20 } = {}) {\n  const instance = this\n\n  async function probe (left) {\n    const current = await instance.height()\n    if (current >= h) {\n      return current\n    }\n    if (left > 0) {\n      await pause(interval)\n      return probe(left - 1)\n    }\n    throw Error(`Giving up after ${attempts * interval}ms, current=${current}, h=${h}`)\n  }\n\n  return probe(attempts)\n}\n\nasync function topBlock () {\n  const top = await this.api.getTopBlock()\n  return top[R.head(R.keys(top))]\n}\n\nasync function poll (th, { blocks = 10, interval = 5000 } = {}) {\n  const instance = this\n  const max = await this.height() + blocks\n\n  async function probe () {\n    const tx = await instance.tx(th).catch(_ => null)\n    if (tx && tx.blockHeight !== -1) {\n      return tx\n    }\n    if (await instance.height() < max) {\n      await pause(interval)\n      return probe()\n    }\n    throw new Error(`Giving up after ${blocks} blocks mined. TxHash ${th}`)\n  }\n\n  return probe()\n}\n\nasync function getTxInfo (hash) {\n  return this.api.getTransactionInfoByHash(hash).then(res => res.callInfo ? res.callInfo : res)\n}\n\nasync function mempool () {\n  return this.api.getPendingTransactions()\n}\n\nasync function getCurrentGeneration () {\n  return this.api.getCurrentGeneration()\n}\n\nasync function getGeneration (hashOrHeight) {\n  if (typeof hashOrHeight === 'string') return this.api.getGenerationByHash(hashOrHeight)\n  if (typeof hashOrHeight === 'number') return this.api.getGenerationByHeight(hashOrHeight)\n  throw new Error('Invalid param, param must be hash or height')\n}\n\nasync function getMicroBlockTransactions (hash) {\n  return (await this.api.getMicroBlockTransactionsByHash(hash)).transactions\n}\n\nasync function getKeyBlock (hashOrHeight) {\n  if (typeof hashOrHeight === 'string') return this.api.getKeyBlockByHash(hashOrHeight)\n  if (typeof hashOrHeight === 'number') return this.api.getKeyBlockByHeight(hashOrHeight)\n  throw new Error('Invalid param, param must be hash or height')\n}\n\nasync function getMicroBlockHeader (hash) {\n  return this.api.getMicroBlockHeaderByHash(hash)\n}\n\nasync function txDryRun (txs, accounts, top) {\n  return this.api.dryRunTxs({ txs: txs.map(tx => ({ tx })), accounts, top })\n}\n\nasync function getContractByteCode (contractId) {\n  return this.api.getContractCode(contractId)\n}\n\nasync function getContract (contractId) {\n  return this.api.getContract(contractId)\n}\n\nasync function getName (name) {\n  return this.api.getNameEntryByName(name)\n}\n\n/**\n * ChainNode Stamp\n *\n * This is implementation of {@link module:@aeternity/aepp-sdk/es/chain--Chain}\n * composed with {@link module:@aeternity/aepp-sdk/es/contract/node--ContractNodeAPI} and {@link module:@aeternity/aepp-sdk/es/oracle/node--OracleNodeAPI}\n * @function\n * @alias module:@aeternity/aepp-sdk/es/chain/node\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @return {Object} ChainNode instance\n * @example ChainNode({url: 'https://sdk-testnet.aepps.com/'})\n */\nconst ChainNode = Chain.compose(Oracle, TransactionValidator, NodePool, {\n  init ({ verifyTx = true }) {\n    this.verifyTxBeforeSend = verifyTx\n  },\n  methods: {\n    sendTransaction,\n    balance,\n    getBalance,\n    getAccount,\n    topBlock,\n    tx,\n    height,\n    awaitHeight,\n    poll,\n    getTxInfo,\n    mempool,\n    getCurrentGeneration,\n    getGeneration,\n    getMicroBlockHeader,\n    getMicroBlockTransactions,\n    getKeyBlock,\n    txDryRun,\n    getContractByteCode,\n    getContract,\n    getName,\n    waitForTxConfirm\n  }\n})\n\nexport default ChainNode\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Transaction module\n * @module @aeternity/aepp-sdk/es/tx/tx\n * @export Transaction\n * @example import Transaction from '@aeternity/aepp-sdk/es/tx/tx'\n */\n\nimport * as R from 'ramda'\n\nimport ChainNode from '../chain/node'\nimport Tx from './'\n\nimport { buildTx, calculateFee } from './builder'\nimport { ABI_VERSIONS, MIN_GAS_PRICE, PROTOCOL_VM_ABI, TX_TYPE, VM_TYPE, TX_TTL } from './builder/schema'\nimport { buildContractId, oracleQueryId } from './builder/helpers'\n\nasync function spendTx ({ senderId, recipientId, amount, payload = '' }) {\n  // Calculate fee, get absolute ttl (ttl + height), get account nonce\n  const { fee, ttl, nonce } = await this.prepareTxParams(TX_TYPE.spend, { senderId, ...R.head(arguments), payload })\n  // Build transaction using sdk (if nativeMode) or build on `AETERNITY NODE` side\n  const { tx } = this.nativeMode\n    ? buildTx(R.merge(R.head(arguments), {\n      recipientId,\n      senderId,\n      nonce,\n      ttl,\n      fee,\n      payload\n    }), TX_TYPE.spend)\n    : await this.api.postSpend(R.merge(R.head(arguments), {\n      amount: parseInt(amount),\n      recipientId,\n      senderId,\n      nonce,\n      ttl,\n      fee: parseInt(fee),\n      payload\n    }))\n\n  return tx\n}\n\nasync function namePreclaimTx ({ accountId, commitmentId }) {\n  // Calculate fee, get absolute ttl (ttl + height), get account nonce\n  const { fee, ttl, nonce } = await this.prepareTxParams(TX_TYPE.namePreClaim, { senderId: accountId, ...R.head(arguments) })\n\n  // Build transaction using sdk (if nativeMode) or build on `AETERNITY NODE` side\n  const { tx } = this.nativeMode\n    ? buildTx(R.merge(R.head(arguments), { nonce, ttl, fee }), TX_TYPE.namePreClaim)\n    : await this.api.postNamePreclaim(R.merge(R.head(arguments), { nonce, ttl, fee: parseInt(fee) }))\n\n  return tx\n}\n\nasync function nameClaimTx ({ accountId, name, nameSalt, vsn = 2 }) {\n  // Calculate fee, get absolute ttl (ttl + height), get account nonce\n  const { fee, ttl, nonce } = await this.prepareTxParams(TX_TYPE.nameClaim, { senderId: accountId, ...R.head(arguments), vsn })\n\n  // Build transaction using sdk (if nativeMode) or build on `AETERNITY NODE` side\n  const { tx } = this.nativeMode\n    ? buildTx(R.merge(R.head(arguments), { nonce, ttl, fee }), TX_TYPE.nameClaim, { vsn })\n    : await this.api.postNameClaim(R.merge(R.head(arguments), { nonce, ttl, fee: parseInt(fee) }))\n\n  return tx\n}\n\nasync function nameTransferTx ({ accountId, nameId, recipientId }) {\n  // Calculate fee, get absolute ttl (ttl + height), get account nonce\n  const { fee, ttl, nonce } = await this.prepareTxParams(TX_TYPE.nameTransfer, { senderId: accountId, ...R.head(arguments) })\n\n  // Build transaction using sdk (if nativeMode) or build on `AETERNITY NODE` side\n  const { tx } = this.nativeMode\n    ? buildTx(R.merge(R.head(arguments), { recipientId, nonce, ttl, fee }), TX_TYPE.nameTransfer)\n    : await this.api.postNameTransfer(R.merge(R.head(arguments), { recipientId, nonce, ttl, fee: parseInt(fee) }))\n\n  return tx\n}\n\nasync function nameUpdateTx ({ accountId, nameId, nameTtl, pointers, clientTtl }) {\n  // Calculate fee, get absolute ttl (ttl + height), get account nonce\n  const { fee, ttl, nonce } = await this.prepareTxParams(TX_TYPE.nameUpdate, { senderId: accountId, ...R.head(arguments) })\n\n  // Build transaction using sdk (if nativeMode) or build on `AETERNITY NODE` side\n  const { tx } = this.nativeMode\n    ? buildTx(R.merge(R.head(arguments), { nonce, ttl, fee }), TX_TYPE.nameUpdate)\n    : await this.api.postNameUpdate(R.merge(R.head(arguments), { nonce, ttl, fee: parseInt(fee) }))\n\n  return tx\n}\n\nasync function nameRevokeTx ({ accountId, nameId }) {\n  // Calculate fee, get absolute ttl (ttl + height), get account nonce\n  const { fee, ttl, nonce } = await this.prepareTxParams(TX_TYPE.nameRevoke, { senderId: accountId, ...R.head(arguments) })\n\n  // Build transaction using sdk (if nativeMode) or build on `AETERNITY NODE` side\n  const { tx } = this.nativeMode\n    ? buildTx(R.merge(R.head(arguments), { nonce, ttl, fee }), TX_TYPE.nameRevoke)\n    : await this.api.postNameRevoke(R.merge(R.head(arguments), { nonce, ttl, fee: parseInt(fee) }))\n\n  return tx\n}\n\nasync function contractCreateTx ({ ownerId, code, vmVersion, abiVersion, deposit, amount, gas, gasPrice = MIN_GAS_PRICE, callData, backend }) {\n  // Get VM_ABI version\n  const ctVersion = this.getVmVersion(TX_TYPE.contractCreate, R.head(arguments))\n  // Calculate fee, get absolute ttl (ttl + height), get account nonce\n  const { fee, ttl, nonce } = await this.prepareTxParams(TX_TYPE.contractCreate, { senderId: ownerId, ...R.head(arguments), ctVersion, gasPrice })\n  // Build transaction using sdk (if nativeMode) or build on `AETERNITY NODE` side\n  return this.nativeMode\n    ? {\n      ...buildTx(R.merge(R.head(arguments), { nonce, ttl, fee, ctVersion, gasPrice }), TX_TYPE.contractCreate),\n      contractId: buildContractId(ownerId, nonce)\n    }\n    : this.api.postContractCreate(R.merge(R.head(arguments), { nonce, ttl, fee: parseInt(fee), gas: parseInt(gas), gasPrice, vmVersion: ctVersion.vmVersion, abiVersion: ctVersion.abiVersion }))\n}\n\nasync function contractCallTx ({ callerId, contractId, abiVersion, amount, gas, gasPrice = MIN_GAS_PRICE, callData, backend }) {\n  const ctVersion = this.getVmVersion(TX_TYPE.contractCall, R.head(arguments))\n  // Calculate fee, get absolute ttl (ttl + height), get account nonce\n  const { fee, ttl, nonce } = await this.prepareTxParams(TX_TYPE.contractCall, { senderId: callerId, ...R.head(arguments), gasPrice, abiVersion: ctVersion.abiVersion })\n\n  // Build transaction using sdk (if nativeMode) or build on `AETERNITY NODE` side\n  const { tx } = this.nativeMode\n    ? buildTx(R.merge(R.head(arguments), { nonce, ttl, fee, abiVersion: ctVersion.abiVersion, gasPrice }), TX_TYPE.contractCall)\n    : await this.api.postContractCall(R.merge(R.head(arguments), {\n      nonce,\n      ttl,\n      fee: parseInt(fee),\n      gas: parseInt(gas),\n      gasPrice,\n      abiVersion: ctVersion.abiVersion\n    }))\n\n  return tx\n}\n\nasync function oracleRegisterTx ({ accountId, queryFormat, responseFormat, queryFee, oracleTtl, abiVersion = ABI_VERSIONS.NO_ABI }) {\n  // const { abiVersion: abi } = this.getVmVersion(TX_TYPE.oracleRegister, R.head(arguments))\n  // Calculate fee, get absolute ttl (ttl + height), get account nonce\n  const { fee, ttl, nonce } = await this.prepareTxParams(TX_TYPE.oracleRegister, { senderId: accountId, ...R.head(arguments), abiVersion })\n  // Build transaction using sdk (if nativeMode) or build on `AETERNITY NODE` side\n  const { tx } = this.nativeMode\n    ? buildTx({\n      accountId,\n      queryFee,\n      abiVersion,\n      fee,\n      oracleTtl,\n      nonce,\n      ttl,\n      queryFormat,\n      responseFormat\n    }, TX_TYPE.oracleRegister)\n    : await this.api.postOracleRegister({\n      accountId,\n      queryFee,\n      abiVersion,\n      fee: parseInt(fee),\n      oracleTtl,\n      nonce,\n      ttl,\n      queryFormat,\n      responseFormat\n    })\n\n  return tx\n}\n\nasync function oracleExtendTx ({ oracleId, callerId, oracleTtl }) {\n  // Calculate fee, get absolute ttl (ttl + height), get account nonce\n  const { fee, ttl, nonce } = await this.prepareTxParams(TX_TYPE.oracleExtend, { senderId: callerId, ...R.head(arguments) })\n\n  // Build transaction using sdk (if nativeMode) or build on `AETERNITY NODE` side\n  const { tx } = this.nativeMode\n    ? buildTx({ oracleId, fee, oracleTtl, nonce, ttl }, TX_TYPE.oracleExtend)\n    : await this.api.postOracleExtend({ oracleId, fee: parseInt(fee), oracleTtl, nonce, ttl })\n\n  return tx\n}\n\nasync function oraclePostQueryTx ({ oracleId, responseTtl, query, queryTtl, queryFee, senderId }) {\n  // Calculate fee, get absolute ttl (ttl + height), get account nonce\n  const { fee, ttl, nonce } = await this.prepareTxParams(TX_TYPE.oracleQuery, { senderId, ...R.head(arguments) })\n\n  // Build transaction using sdk (if nativeMode) or build on `AETERNITY NODE` side\n  const { tx } = this.nativeMode\n    ? buildTx({ oracleId, responseTtl, query, queryTtl, fee, queryFee, ttl, nonce, senderId }, TX_TYPE.oracleQuery)\n    : await this.api.postOracleQuery({\n      oracleId,\n      responseTtl,\n      query,\n      queryTtl,\n      fee: parseInt(fee),\n      queryFee,\n      ttl,\n      nonce,\n      senderId\n    })\n\n  return { tx, queryId: oracleQueryId(senderId, nonce, oracleId) }\n}\n\nasync function oracleRespondTx ({ oracleId, callerId, responseTtl, queryId, response }) {\n  // Calculate fee, get absolute ttl (ttl + height), get account nonce\n  const { fee, ttl, nonce } = await this.prepareTxParams(TX_TYPE.oracleResponse, { senderId: callerId, ...R.head(arguments) })\n\n  // Build transaction using sdk (if nativeMode) or build on `AETERNITY NODE` side\n  const { tx } = this.nativeMode\n    ? buildTx({ oracleId, responseTtl, queryId, response, fee, ttl, nonce }, TX_TYPE.oracleResponse)\n    : await this.api.postOracleRespond({ oracleId, responseTtl, queryId, response, fee: parseInt(fee), ttl, nonce })\n  return tx\n}\n\nasync function channelCloseSoloTx ({ channelId, fromId, payload, poi }) {\n  // Calculate fee, get absolute ttl (ttl + height), get account nonce\n  const { fee, ttl, nonce } = await this.prepareTxParams(TX_TYPE.channelCloseSolo, { senderId: fromId, ...R.head(arguments), payload })\n\n  // Build transaction using sdk (if nativeMode) or build on `AETERNITY NODE` side\n  const { tx } = this.nativeMode\n    ? buildTx(R.merge(R.head(arguments), {\n      channelId,\n      fromId,\n      payload,\n      poi,\n      ttl,\n      fee,\n      nonce\n    }), TX_TYPE.channelCloseSolo)\n    : await this.api.postChannelCloseSolo(R.merge(R.head(arguments), {\n      channelId,\n      fromId,\n      payload,\n      poi,\n      ttl,\n      fee: parseInt(fee),\n      nonce\n    }))\n\n  return tx\n}\n\nasync function channelSlashTx ({ channelId, fromId, payload, poi }) {\n  // Calculate fee, get absolute ttl (ttl + height), get account nonce\n  const { fee, ttl, nonce } = await this.prepareTxParams(TX_TYPE.channelSlash, { senderId: fromId, ...R.head(arguments), payload })\n\n  // Build transaction using sdk (if nativeMode) or build on `AETERNITY NODE` side\n  const { tx } = this.nativeMode\n    ? buildTx(R.merge(R.head(arguments), {\n      channelId,\n      fromId,\n      payload,\n      poi,\n      ttl,\n      fee,\n      nonce\n    }), TX_TYPE.channelSlash)\n    : await this.api.postChannelSlash(R.merge(R.head(arguments), {\n      channelId,\n      fromId,\n      payload,\n      poi,\n      ttl,\n      fee: parseInt(fee),\n      nonce\n    }))\n\n  return tx\n}\n\nasync function channelSettleTx ({ channelId, fromId, initiatorAmountFinal, responderAmountFinal }) {\n  // Calculate fee, get absolute ttl (ttl + height), get account nonce\n  const { fee, ttl, nonce } = await this.prepareTxParams(TX_TYPE.channelSettle, { senderId: fromId, ...R.head(arguments) })\n\n  // Build transaction using sdk (if nativeMode) or build on `AETERNITY NODE` side\n  const { tx } = this.nativeMode\n    ? buildTx(R.merge(R.head(arguments), {\n      channelId,\n      fromId,\n      initiatorAmountFinal,\n      responderAmountFinal,\n      ttl,\n      fee,\n      nonce\n    }), TX_TYPE.channelSettle)\n    : await this.api.postChannelSettle(R.merge(R.head(arguments), {\n      channelId,\n      fromId,\n      initiatorAmountFinal: parseInt(initiatorAmountFinal),\n      responderAmountFinal: parseInt(responderAmountFinal),\n      ttl,\n      fee: parseInt(fee),\n      nonce\n    }))\n\n  return tx\n}\n\nasync function channelSnapshotSoloTx ({ channelId, fromId, payload }) {\n  // Calculate fee, get absolute ttl (ttl + height), get account nonce\n  const { fee, ttl, nonce } = await this.prepareTxParams(TX_TYPE.channelSnapshotSolo, { senderId: fromId, ...R.head(arguments), payload })\n\n  // Build transaction using sdk (if nativeMode) or build on `AETERNITY NODE` side\n  const { tx } = this.nativeMode\n    ? buildTx(R.merge(R.head(arguments), {\n      channelId,\n      fromId,\n      payload,\n      ttl,\n      fee,\n      nonce\n    }), TX_TYPE.channelSnapshotSolo)\n    : await this.api.postChannelSnapshotSolo(R.merge(R.head(arguments), {\n      channelId,\n      fromId,\n      payload,\n      ttl,\n      fee: parseInt(fee),\n      nonce\n    }))\n\n  return tx\n}\n\nasync function gaAttachTx ({ ownerId, code, vmVersion, abiVersion, authFun, gas, gasPrice = MIN_GAS_PRICE, callData, backend }) {\n  // Get VM_ABI version\n  const ctVersion = this.getVmVersion(TX_TYPE.contractCreate, R.head(arguments))\n  // Calculate fee, get absolute ttl (ttl + height), get account nonce\n  const { fee, ttl, nonce } = await this.prepareTxParams(TX_TYPE.gaAttach, { senderId: ownerId, ...R.head(arguments), ctVersion, gasPrice })\n  // Build transaction using sdk (if nativeMode) or build on `AETERNITY NODE` side\n  return {\n    ...buildTx(R.merge(R.head(arguments), { nonce, ttl, fee, ctVersion, gasPrice }), TX_TYPE.gaAttach),\n    contractId: buildContractId(ownerId, nonce)\n  }\n}\n\n/**\n * Validated vm/abi version or get default based on transaction type and NODE version\n *\n * @param {string} txType Type of transaction\n * @param {object} vmAbi Object with vm and abi version fields\n * @return {object} Object with vm/abi version ({ vmVersion: number, abiVersion: number, backend: string })\n */\nfunction getVmVersion (txType, { vmVersion, abiVersion, backend } = {}) {\n  const { consensusProtocolVersion } = this.getNodeInfo()\n  const supportedProtocol = PROTOCOL_VM_ABI[consensusProtocolVersion]\n  if (!supportedProtocol) throw new Error('Not supported consensus protocol version')\n  const protocolForTX = supportedProtocol[txType]\n  if (!protocolForTX) throw new Error('Not supported tx type')\n\n  const ctVersion = {\n    abiVersion: abiVersion !== undefined ? abiVersion : backend === VM_TYPE.AEVM ? protocolForTX.abiVersion[1] : backend === VM_TYPE.FATE ? protocolForTX.abiVersion[0] : protocolForTX.abiVersion[0],\n    vmVersion: vmVersion !== undefined ? vmVersion : backend === VM_TYPE.AEVM ? protocolForTX.vmVersion[1] : backend === VM_TYPE.FATE ? protocolForTX.vmVersion[0] : protocolForTX.vmVersion[0]\n  }\n  if (protocolForTX.vmVersion.length && !R.contains(ctVersion.vmVersion, protocolForTX.vmVersion)) throw new Error(`VM VERSION ${ctVersion.vmVersion} do not support by this node. Supported: [${protocolForTX.vmVersion}]`)\n  if (protocolForTX.abiVersion.length && !R.contains(ctVersion.abiVersion, protocolForTX.abiVersion)) throw new Error(`ABI VERSION ${ctVersion.abiVersion} do not support by this node. Supported: [${protocolForTX.abiVersion}]`)\n\n  return ctVersion\n}\n\n/**\n * Compute the absolute ttl by adding the ttl to the current height of the chain\n *\n * @param {number} ttl\n * @param {boolean} relative ttl is absolute or relative(default: true(relative))\n * @return {number} Absolute Ttl\n */\nasync function calculateTtl (ttl = TX_TTL, relative = true) {\n  if (ttl === 0) return 0\n  if (ttl < 0) throw new Error('ttl must be greater than 0')\n\n  if (relative) {\n    const { height } = await this.api.getCurrentKeyBlock()\n    return +(height) + ttl\n  }\n  return ttl\n}\n\n/**\n * Get the next nonce to be used for a transaction for an account\n *\n * @param {string} accountId\n * @param {number} nonce\n * @return {number} Next Nonce\n */\nasync function getAccountNonce (accountId, nonce) {\n  if (nonce) return nonce\n  const { nonce: accountNonce } = await this.api.getAccountByPubkey(accountId).catch(() => ({ nonce: 0 }))\n  return accountNonce + 1\n}\n\n/**\n * Calculate fee, get absolute ttl (ttl + height), get account nonce\n *\n * @param {String} txType Type of transaction\n * @param {Object} params Object which contains all tx data\n * @return {Object} { ttl, nonce, fee } Object with account nonce, absolute ttl and transaction fee\n */\nasync function prepareTxParams (txType, { senderId, nonce: n, ttl: t, fee: f, gas, absoluteTtl, vsn }) {\n  const account = await this.getAccount(senderId).catch(e => ({ nonce: 0 }))\n  // Is GA account\n  if (account.contractId) {\n    n = 0\n  } else {\n    n = n || (account.nonce + 1)\n  }\n  const ttl = await (calculateTtl.bind(this)(t, !absoluteTtl))\n  const fee = calculateFee(f, txType, { showWarning: this.showWarning, gas, params: R.merge(R.last(arguments), { nonce: n, ttl }), vsn })\n  return { fee, ttl, nonce: n }\n}\n\n/**\n * Transaction Stamp\n *\n * This is implementation of [Tx](api/tx.md) relays\n * the creation of transactions to {@link module:@aeternity/aepp-sdk/es/Node}.\n * This stamp provide ability to create native transaction's,\n * or transaction's using Node API.\n * As there is no built-in security between Node and client communication,\n * creating transaction using {@link module:@aeternity/aepp-sdk/es/Node} API\n * must never be used for production but can be very useful to verify other\n * implementations.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/tx\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @param {Boolean} [options.nativeMode=true] options.nativeMode - Use Native build of transaction's\n * @param {String} options.url - Node url\n * @param {String} options.internalUrl - Node internal url\n * @return {Object} Transaction instance\n * @example Transaction({url: 'https://sdk-testnet.aepps.com/'})\n */\nconst Transaction = ChainNode.compose(Tx, {\n  init ({ nativeMode = true, showWarning = false }) {\n    this.nativeMode = nativeMode\n    this.showWarning = showWarning\n  },\n  props: {\n    nativeMode: true,\n    showWarning: false\n  },\n  methods: {\n    spendTx,\n    namePreclaimTx,\n    nameClaimTx,\n    nameTransferTx,\n    nameUpdateTx,\n    nameRevokeTx,\n    contractCreateTx,\n    contractCallTx,\n    prepareTxParams,\n    oracleRegisterTx,\n    oracleExtendTx,\n    oraclePostQueryTx,\n    oracleRespondTx,\n    channelCloseSoloTx,\n    channelSlashTx,\n    channelSettleTx,\n    channelSnapshotSoloTx,\n    gaAttachTx,\n    getAccountNonce,\n    getVmVersion\n  }\n})\n\nexport default Transaction\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Memory Account module\n * @module @aeternity/aepp-sdk/es/account/memory\n * @export MemoryAccount\n * @example import MemoryAccount from '@aeternity/aepp-sdk/es/account/memory'\n */\n\nimport Account from './'\nimport * as Crypto from '../utils/crypto'\nimport { isHex } from '../utils/string'\nimport { decode } from '../tx/builder/helpers'\n\nconst secrets = new WeakMap()\n\nasync function sign (data) {\n  if (this.isGa) throw new Error('You are trying to sign data using GA account without keypair')\n  return Promise.resolve(Crypto.sign(data, secrets.get(this).secretKey))\n}\n\nasync function address (opt = { format: Crypto.ADDRESS_FORMAT.api }) {\n  return Promise.resolve(Crypto.formatAddress(opt.format, secrets.get(this).publicKey))\n}\n\nfunction setSecret (keyPair) {\n  secrets.set(this, {\n    secretKey: Buffer.isBuffer(keyPair.secretKey) ? keyPair.secretKey : Buffer.from(keyPair.secretKey, 'hex'),\n    publicKey: keyPair.publicKey\n  })\n}\n\nfunction validateKeyPair (keyPair) {\n  if (!keyPair || typeof keyPair !== 'object') throw new Error('KeyPair must be an object')\n  if (!keyPair.secretKey || !keyPair.publicKey) throw new Error('KeyPair must must have \"secretKey\", \"publicKey\" properties')\n  if (typeof keyPair.publicKey !== 'string' || keyPair.publicKey.indexOf('ak_') === -1) throw new Error('Public Key must be a base58c string with \"ak_\" prefix')\n  if (\n    !Buffer.isBuffer(keyPair.secretKey) &&\n    (typeof keyPair.secretKey === 'string' && !isHex(keyPair.secretKey))\n  ) throw new Error('Secret key must be hex string or Buffer')\n\n  const pubBuffer = Buffer.from(decode(keyPair.publicKey, 'ak'))\n  if (!Crypto.isValidKeypair(Buffer.from(keyPair.secretKey, 'hex'), pubBuffer)) throw new Error('Invalid Key Pair')\n}\n\n/**\n * In-memory `Account` factory\n * @function\n * @alias module:@aeternity/aepp-sdk/es/account/memory\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @param {Object} options.keypair - Key pair to use\n * @param {String} options.keypair.publicKey - Public key\n * @param {String} options.keypair.secretKey - Private key\n * @return {Account}\n */\nconst MemoryAccount = Account.compose({\n  init ({ keypair, gaId }) {\n    this.isGa = !!gaId\n    if (gaId) {\n      if (!Crypto.isAddressValid(gaId)) throw new Error('Invalid GA address')\n      secrets.set(this, { publicKey: gaId })\n    } else {\n      validateKeyPair(keypair)\n\n      this.setSecret(keypair)\n    }\n  },\n  props: { isGa: false },\n  methods: { sign, address, setSecret }\n})\n\nexport default MemoryAccount\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Accounts Selector module\n *\n * This is the complement to {@link module:@aeternity/aepp-sdk/es/accounts}.\n * @module @aeternity/aepp-sdk/es/account/selector\n * @export Account\n * @example import Selector from '@aeternity/aepp-sdk/es/account/selector'\n */\n\nimport Account from './'\nimport required from '@stamp/required'\nimport { assertedType } from '../utils/crypto'\nimport MemoryAccount from './memory'\n\nconst isMemoryAccount = (acc) => !['sign', 'address'].find(f => typeof acc[f] !== 'function')\n\nasync function sign (data, { onAccount } = {}) {\n  if (!onAccount) return this.signWith(this.Selector.address, data)\n  // onAccount can be account address(should exist in sdk instance) or MemoryAccount\n  return this.resolveOnAccount(onAccount, 'sign', data)\n}\n\nasync function resolveOnAccount (onAccount, operation = 'address', data) {\n  switch (typeof onAccount) {\n    case 'string':\n      if (!assertedType(onAccount, 'ak', true)) throw new Error('Invalid account address, check \"onAccount\" value')\n      if (!this.accounts[onAccount]) throw Error(`Account for ${onAccount} not available`)\n      if (operation === 'sign') return this.signWith(onAccount, data)\n      if (operation === 'address') return onAccount\n      break\n    case 'object':\n      try {\n        const memoryAccount = isMemoryAccount(onAccount)\n          ? onAccount\n          : MemoryAccount({ keypair: onAccount })\n        if (operation === 'sign') return memoryAccount.sign(data)\n        if (operation === 'address') return memoryAccount.address()\n        break\n      } catch (e) {\n        e.message = `Invalid 'onAccount' option: ${e.message}`\n        throw e\n      }\n    default:\n      throw new Error('Invalid `onAccount` option: should be keyPair object or account address')\n  }\n}\nasync function address ({ onAccount } = {}) {\n  if (!onAccount) {\n    if (this.Selector.address) return Promise.resolve(this.Selector.address)\n    throw new Error('You don\\'t have selected account')\n  }\n  return this.resolveOnAccount(onAccount, 'address')\n}\n\n/**\n * Select specific account\n * @alias module:@aeternity/aepp-sdk/es/account/selector\n * @instance\n * @rtype (address: String) => Void\n * @param {String} address - Address of account to select\n * @example selectAccount('ak_xxxxxxxx')\n */\nfunction selectAccount (address) {\n  if (!address || !assertedType(address, 'ak', true)) throw new Error('Invalid account address')\n  if (!this.accounts[address]) throw Error(`Account for ${address} not available`)\n  this.Selector.address = address\n}\n\n/**\n * Selector Stamp\n * @function\n * @alias module:@aeternity/aepp-sdk/es/account/selector\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @return {Account} Account instance\n * @example Selector()\n */\nconst Selector = Account.compose({\n  async init ({ address }) {\n    if (!address) address = Object.keys(this.accounts)[0]\n    if (address && !assertedType(address, 'ak', true)) throw new Error('Invalid account address')\n    this.Selector.address = address\n  },\n  methods: { sign, address, selectAccount, resolveOnAccount },\n  deepProps: {\n    Selector: {}\n  }\n}, required({\n  methods: { signWith: required }\n}))\n\nexport default Selector\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Accounts module\n * @module @aeternity/aepp-sdk/es/accounts\n * @export Accounts\n * @example import Accounts from '@aeternity/aepp-sdk/es/accounts'\n */\n\nimport stampit from '@stamp/it'\nimport AsyncInit from './utils/async-init'\nimport * as R from 'ramda'\nimport MemoryAccount from './account/memory'\nimport Selector from './account/selector'\nimport { envKeypair } from './utils/crypto'\n\n/**\n * Sign data blob with specific key\n * @alias module:@aeternity/aepp-sdk/es/accounts\n * @function\n * @category async\n * @rtype (address: String, data: String) => data: Promise[String], throws: Error\n * @param {String} address - Public key of account to sign with\n * @param {String} data - Data blob to sign\n * @return {String} Signed data blob\n */\nasync function signWith (address, data) {\n  const account = this.accounts[address]\n\n  if (account === undefined) {\n    throw Error(`Account for ${address} not available`)\n  }\n\n  return account.sign(data)\n}\n\n/**\n * Add specific account\n * @alias module:@aeternity/aepp-sdk/es/accounts\n * @function\n * @category async\n * @rtype (account: Account, { select: Boolean }) => Void\n * @param {Object} account - Account instance\n * @param {Object} [options={}] - Options\n * @param {Boolean} [options.select] - Select account\n * @return {Void}\n * @example addAccount(account)\n */\nasync function addAccount (account, { select } = {}) {\n  const address = await account.address()\n  this.accounts[address] = account\n  if (select) this.selectAccount(address)\n}\n\n/**\n * Remove specific account\n * @alias module:@aeternity/aepp-sdk/es/accounts\n * @function\n * @rtype (address: String) => Void\n * @param {String} address - Address of account to remove\n * @return {Void}\n * @example removeAccount(address)\n */\nfunction removeAccount (address) {\n  if (this.accounts[address]) delete this.accounts[address]\n  if (this.Selector.address === address) this.Selector.address = undefined\n}\n\n/**\n * Get accounts addresses\n * @alias module:@aeternity/aepp-sdk/es/accounts\n * @function\n * @rtype () => String[]\n * @return {String[]}\n * @example addresses()\n */\nfunction addresses () {\n  return Object.keys(this.accounts)\n}\n\n/**\n * Accounts Stamp\n *\n * The purpose of the Accounts Stamp is to wrap up\n * {@link module:@aeternity/aepp-sdk/es/account--Account} objects and provide a\n * common interface to all of them. Accounts are a substantial part of\n * {@link module:@aeternity/aepp-sdk/es/ae/wallet--Wallet}s.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/accounts\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @param {Array} [options.accounts] - Accounts array\n * @return {Object} Accounts instance\n * @example\n * const accounts = await Accounts({ accounts: [ MemmoryAccount({ keypair: 'keypair_object' }) ] })\n * await accounts.addAccount(account, { select: true }) // Add account and make it selected\n * accounts.removeAccount(address) // Remove account\n * accounts.selectAccount(address) // Select account\n * accounts.addresses() // Get available accounts\n */\nconst Accounts = stampit(AsyncInit, {\n  async init ({ accounts = [] }) {\n    this.accounts = R.fromPairs(await Promise.all(accounts.map(async a => [await a.address(), a])))\n    const keypair = envKeypair(process.env, true)\n    if (keypair) {\n      await this.addAccount(MemoryAccount({ keypair }), { select: !this.Selector.address })\n    }\n  },\n  props: {\n    accounts: {}\n  },\n  methods: { signWith, addAccount, removeAccount, addresses }\n}, Selector)\n\nexport default Accounts\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Aens module - routines to interact with the æternity naming system\n *\n * The high-level description of the naming system is\n * https://github.com/aeternity/protocol/blob/master/AENS.md in the protocol\n * repository.\n * @module @aeternity/aepp-sdk/es/ae/aens\n * @export Aens\n * @example import Aens from '@aeternity/aepp-sdk/es/ae/aens'\n */\n\nimport * as R from 'ramda'\nimport { salt } from '../utils/crypto'\nimport {\n  commitmentHash,\n  isNameValid,\n  getMinimumNameFee,\n  classify,\n  isAuctionName,\n  validatePointers, encode, produceNameId\n} from '../tx/builder/helpers'\nimport Ae from './'\nimport { CLIENT_TTL, NAME_FEE, NAME_TTL } from '../tx/builder/schema'\n\n/**\n * Revoke a name\n * @instance\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/aens\n * @category async\n * @param {String} name Name hash\n * @param {Object} [options={}] options\n * @param {(String|Object)} [options.onAccount] onAccount Make operation on specific account from sdk(you pass publickKey) or\n * using provided KeyPair(Can be keypair object or MemoryAccount)\n * @param {(Number|String|BigNumber)} [options.fee] fee\n * @param {(Number|String|BigNumber)} [options.ttl] ttl\n * @param {(Number|String|BigNumber)} [options.nonce] nonce\n * @return {Promise<Object>} Transaction result\n * @example\n * const name = 'test.chain'\n * const nameObject = await sdkInstance.aensQuery(name)\n *\n * await sdkInstance.aensRevoke(name, { fee, ttl , nonce })\n * // or\n * await nameObject.revoke({ fee, ttl, nonce })\n */\nasync function revoke (name, options = {}) {\n  isNameValid(name)\n  const opt = R.merge(this.Ae.defaults, options)\n\n  const nameRevokeTx = await this.nameRevokeTx(R.merge(opt, {\n    nameId: produceNameId(name),\n    accountId: await this.address(opt)\n  }))\n\n  return this.send(nameRevokeTx, opt)\n}\n\n/**\n * Update a name\n * @instance\n * @function\n * @category async\n * @alias module:@aeternity/aepp-sdk/es/ae/aens\n * @param {String} name AENS name\n * @param {String[]} pointers Array of name pointers. Can be oracle|account|contract|channel public key\n * @param {Object} [options={}]\n * @param {Boolean} [options.extendPointers=false] extendPointers Get the pointers from the node and merge with provided one. Pointers with the same type will be overwrited\n * @param {(String|Object)} [options.onAccount] onAccount Make operation on specific account from sdk(you pass publickKey) or\n * using provided KeyPair(Can be keypair object or MemoryAccount)\n * @param {(Number|String|BigNumber)} [options.fee] fee\n * @param {(Number|String|BigNumber)} [options.ttl] ttl\n * @param {(Number|String|BigNumber)} [options.nonce] nonce\n * @param {(Number|String|BigNumber)} [options.nameTtl=50000] nameTtl Name ttl represented in number of blocks (Max value is 50000 blocks)\n * @param {(Number|String|BigNumber)} [options.clientTtl=84600] clientTtl a suggestion as to how long any clients should cache this information\n * @return {Promise<Object>}\n * @throws Invalid pointer array error\n * @example\n * const name = 'test.chain'\n * const pointersArray = ['ak_asd23dasdas...,' 'ct_asdf34fasdasd...']\n * const nameObject = await sdkInstance.aensQuery(name)\n *\n * await sdkInstance.aensUpdate(name, pointersArray, { nameTtl, ttl, fee, nonce, clientTtl })\n * // or\n * await nameObject.update(pointersArray, { nameTtl, ttl, fee, nonce, clientTtl })\n */\nasync function update (name, pointers = [], options = { extendPointers: false }) {\n  isNameValid(name)\n  const opt = R.merge(this.Ae.defaults, options)\n  if (!validatePointers(pointers)) throw new Error('Invalid pointers array')\n\n  pointers = [\n    ...options.extendPointers ? (await this.getName(name)).pointers : [],\n    ...pointers.map(p => R.fromPairs([['id', p], ['key', classify(p)]]))\n  ].reduce((acc, el) => [...acc.filter(p => p.key !== el.key), el], [])\n  const nameUpdateTx = await this.nameUpdateTx(R.merge(opt, {\n    nameId: produceNameId(name),\n    accountId: await this.address(opt),\n    pointers\n  }))\n\n  return this.send(nameUpdateTx, opt)\n}\n\n/**\n * Transfer a domain to another account\n * @instance\n * @function\n * @category async\n * @alias module:@aeternity/aepp-sdk/es/ae/aens\n * @param {String} name AENS name\n * @param {String} account Recipient account publick key\n * @param {Object} [options={}]\n * @param {(String|Object)} [options.onAccount] onAccount Make operation on specific account from sdk(you pass publickKey) or\n * using provided KeyPair(Can be keypair object or MemoryAccount)\n * @param {(Number|String|BigNumber)} [options.fee] fee\n * @param {(Number|String|BigNumber)} [options.ttl] ttl\n * @param {(Number|String|BigNumber)} [options.nonce] nonce\n * @return {Promise<Object>} Transaction result\n * @example\n * const name = 'test.chain'\n * const recipientPub = 'ak_asd23dasdas...'\n * const nameObject = await sdkInstance.aensQuery(name)\n *\n * await sdkInstance.aensTransfer(name, recipientPub, { ttl, fee, nonce })\n * // or\n * await nameObject.transfer(recipientPub, { ttl, fee, nonce })\n */\nasync function transfer (name, account, options = {}) {\n  isNameValid(name)\n  const opt = R.merge(this.Ae.defaults, options)\n\n  const nameTransferTx = await this.nameTransferTx(R.merge(opt, {\n    nameId: produceNameId(name),\n    accountId: await this.address(opt),\n    recipientId: account\n  }))\n\n  return this.send(nameTransferTx, opt)\n}\n\n/**\n * Query the AENS name info from the node\n * and return the object with info and predefined functions for manipulating name\n * @instance\n * @function\n * @category async\n * @alias module:@aeternity/aepp-sdk/es/ae/aens\n * @param {String} name\n * @param {Object} opt Options\n * @return {Promise<Object>}\n * @example\n * const nameObject = sdkInstance.aensQuery('test.chain')\n * console.log(nameObject)\n * {\n *  id, // name hash\n *  pointers, // array of pointers\n *  update, // Update name function\n *  extendTtl, // Extend Ttl name function\n *  transfer, // Transfer name function\n *  revoke // Revoke name function\n * }\n */\nasync function query (name, opt = {}) {\n  isNameValid(name)\n  const o = await this.getName(name)\n\n  return Object.freeze(Object.assign(o, {\n    pointers: o.pointers || [],\n    update: async (pointers = [], options = {}) => {\n      return {\n        ...(await this.aensUpdate(name, pointers, R.merge(opt, options))),\n        ...(await this.aensQuery(name))\n      }\n    },\n    transfer: async (account, options = {}) => {\n      return {\n        ...(await this.aensTransfer(name, account, R.merge(opt, options))),\n        ...(await this.aensQuery(name))\n      }\n    },\n    revoke: async (options = {}) => this.aensRevoke(name, R.merge(opt, options)),\n    extendTtl: async (nameTtl = NAME_TTL, options = {}) => {\n      if (!nameTtl || typeof nameTtl !== 'number' || nameTtl > NAME_TTL) throw new Error('Ttl must be an number and less then 50000 blocks')\n\n      return {\n        ...(await this.aensUpdate(name, o.pointers.map(p => p.id), { ...R.merge(opt, options), nameTtl })),\n        ...(await this.aensQuery(name))\n      }\n    }\n  }))\n}\n\n/**\n * Claim a previously preclaimed registration. This can only be done after the\n * preclaim step\n * @instance\n * @function\n * @category async\n * @alias module:@aeternity/aepp-sdk/es/ae/aens\n * @param {String} name\n * @param {Number} salt Salt from pre-claim, or 0 if it's a bid\n * @param {Object} [options={}] options\n * @param {String|Object} [options.onAccount] onAccount Make operation on specific account from sdk(you pass publickKey) or\n * using provided KeyPair(Can be keypair object or MemoryAccount)\n * @param {Number|String|BigNumber} [options.fee] fee\n * @param {Number|String|BigNumber} [options.ttl] ttl\n * @param {Number|String|BigNumber} [options.nonce] nonce\n * @param {Number|String} [options.nameFee] Name Fee (By default calculated by sdk)\n * @param {Number|String} [options.vsn = 2] Transaction vsn from Lima is 2\n * @return {Promise<Object>} the result of the claim\n * @example\n * const name = 'test.chain'\n * const salt = preclaimResult.salt // salt from pre-claim transaction\n *\n * await sdkInstance.aensClaim(name, salt, { ttl, fee, nonce, nameFee })\n */\nasync function claim (name, salt, options = { vsn: 2 }) {\n  isNameValid(name)\n  const opt = R.merge(this.Ae.defaults, options)\n\n  const minNameFee = getMinimumNameFee(name)\n  if (opt.nameFee !== this.Ae.defaults.nameFee && minNameFee.gt(opt.nameFee)) {\n    throw new Error(`the provided fee ${opt.nameFee} is not enough to execute the claim, required: ${minNameFee}`)\n  }\n  opt.nameFee = opt.nameFee !== this.Ae.defaults.nameFee ? opt.nameFee : minNameFee\n  const claimTx = await this.nameClaimTx(R.merge(opt, {\n    accountId: await this.address(opt),\n    nameSalt: salt,\n    name: encode(name, 'nm')\n  }))\n\n  const result = await this.send(claimTx, opt)\n  if (!isAuctionName(name)) {\n    delete opt.vsn\n    const nameInter = opt.waitMined ? await this.aensQuery(name, opt) : {}\n    return Object.assign(result, nameInter)\n  }\n  return { ...result, nameFee: opt.nameFee }\n}\n\n/**\n * Preclaim a name. Sends a hash of the name and a random salt to the node\n * @instance\n * @function\n * @category async\n * @alias module:@aeternity/aepp-sdk/es/ae/aens\n * @param {String} name\n * @param {Object} [options={}]\n * @param {String|Object} [options.onAccount] onAccount Make operation on specific account from sdk(you pass publickKey) or\n * using provided KeyPair(Can be keypair object or MemoryAccount)\n * @param {Number|String|BigNumber} [options.fee] fee\n * @param {Number|String|BigNumber} [options.ttl] ttl\n * @param {Number|String|BigNumber} [options.nonce] nonce\n * @return {Promise<Object>}\n * @example\n * const name = 'test.chain'\n * const salt = preclaimResult.salt // salt from pre-claim transaction\n *\n * await sdkInstance.aensPreclaim(name, { ttl, fee, nonce })\n * {\n *   ...transactionResult,\n *   claim, // Claim function (options={}) => claimTransactionResult\n *   salt,\n *   commitmentId\n * }\n */\nasync function preclaim (name, options = {}) {\n  isNameValid(name)\n  const opt = R.merge(this.Ae.defaults, options)\n  const _salt = salt()\n  const height = await this.height()\n  const commitmentId = commitmentHash(name, _salt)\n\n  const preclaimTx = await this.namePreclaimTx(R.merge(opt, {\n    accountId: await this.address(opt),\n    commitmentId\n  }))\n\n  const result = await this.send(preclaimTx, opt)\n\n  return Object.freeze({\n    ...result,\n    height,\n    claim: options => this.aensClaim(name, _salt, { ...options, onAccount: opt.onAccount }),\n    salt: _salt,\n    commitmentId\n  })\n}\n\n/**\n * Bid to name auction\n * @instance\n * @function\n * @category async\n * @alias module:@aeternity/aepp-sdk/es/ae/aens\n * @param {String} name Domain name\n * @param {String|Number} nameFee Name fee (bid fee)\n * @param {Object} [options={}]\n * @param {String|Object} [options.onAccount] onAccount Make operation on specific account from sdk(you pass publickKey) or\n * using provided KeyPair(Can be keypair object or MemoryAccount)\n * @param {Number|String|BigNumber} [options.fee] fee\n * @param {Number|String|BigNumber} [options.ttl] ttl\n * @param {Number|String|BigNumber} [options.nonce] nonce\n * @return {Promise<Object>} Transaction result\n * @example\n * const name = 'test.chain'\n * const bidFee = computeBidFee(name, startFee, incrementPercentage)\n *\n * await sdkInstance.aensBid(name, 213109412839123, { ttl, fee, nonce })\n */\nasync function bid (name, nameFee = NAME_FEE, options = {}) {\n  return this.aensClaim(name, 0, { ...options, nameFee, vsn: 2 })\n}\n\n/**\n * Aens Stamp\n *\n * Aens provides name-system related methods atop\n * {@link module:@aeternity/aepp-sdk/es/ae--Ae} clients.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/aens\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @return {Object} Aens instance\n */\nconst Aens = Ae.compose({\n  methods: {\n    aensQuery: query,\n    aensPreclaim: preclaim,\n    aensClaim: claim,\n    aensUpdate: update,\n    aensTransfer: transfer,\n    aensRevoke: revoke,\n    aensBid: bid\n  },\n  deepProps: {\n    Ae: {\n      defaults: {\n        clientTtl: CLIENT_TTL,\n        nameTtl: NAME_TTL, // aec_governance:name_claim_max_expiration() => 50000\n        nameFee: NAME_FEE\n      }\n    }\n  }\n})\n\nexport default Aens\n","import axios from 'axios'\nimport JsonBig from './json-big'\nimport * as R from 'ramda'\nimport stampit from '@stamp/it'\n\nasync function get (url, options) {\n  return processResponse(\n    axios.get(`${this.baseUrl}${url}`, R.merge(this.httpConfig, options))\n  )\n}\n\nasync function post (url, body, options) {\n  return processResponse(\n    axios.post(`${this.baseUrl}${url}`, body, R.merge(this.httpConfig, options))\n  )\n}\n\nasync function put (url, body, options) {\n  return processResponse(\n    axios.put(`${this.baseUrl}${url}`, body, R.merge(this.httpConfig, options))\n  )\n}\n\nasync function _delete (url, options) {\n  return processResponse(\n    axios.delete(`${this.baseUrl}${url}`, R.merge(this.httpConfig, options))\n  )\n}\n\nfunction changeBaseUrl (newUrl) {\n  this.baseUrl = newUrl\n}\n\nconst processResponse = async (res) => {\n  try {\n    return (await res).data\n  } catch (e) {\n    if (!e.response) throw e\n    throw Object.assign(\n      Error(`Http request for ${e.config.url} failed with status code ${e.response.status}. Status: ${e.response.statusText}. \\nError data: ${JSON.stringify(e.response.data)}`),\n      { error: e }\n    )\n  }\n}\n\nconst Http = stampit({\n  init ({ baseUrl }) {\n    this.baseUrl = baseUrl\n  },\n  methods: {\n    changeBaseUrl,\n    get,\n    post,\n    put,\n    delete: _delete\n  },\n  props: {\n    httpConfig: {\n      headers: { 'Content-Type': 'application/json' },\n      transformResponse: [(data) => {\n        try {\n          return JsonBig.parse(data)\n        } catch (e) {\n          return data\n        }\n      }]\n    }\n  }\n})\n\nexport default Http\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Contract Base module\n * @module @aeternity/aepp-sdk/es/contract\n * @export Contract\n * @example import ContractBase from '@aeternity/aepp-sdk/es/contract'\n */\n\nimport stampit from '@stamp/it'\nimport { required } from '@stamp/required'\n\n/**\n * Basic Contract Stamp\n *\n * This stamp include api call's related to contract functionality.\n * Attempting to create instances from the Stamp without overwriting all\n * abstract methods using composition will result in an exception.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/contract\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @return {Object} Contract instance\n */\nconst ContractBase = stampit({\n  deepConf: {\n    Contract: {\n      methods: [\n        'contractEncodeCallDataAPI',\n        'contractDecodeDataAPI',\n        'compileContractAPI',\n        'contractDecodeCallDataBySourceAPI',\n        'contractDecodeCallDataByCodeAPI',\n        'contractGetACI',\n        'setCompilerUrl',\n        'getCompilerVersion',\n        'contractDecodeCallResultAPI',\n        'validateByteCodeAPI',\n        'getFateAssembler',\n        'getBytecodeCompilerVersion'\n      ]\n    }\n  }\n}, required({\n  methods: {\n    contractEncodeCallDataAPI: required,\n    contractDecodeDataAPI: required,\n    compileContractAPI: required,\n    contractGetACI: required,\n    setCompilerUrl: required,\n    getCompilerVersion: required,\n    contractDecodeCallResultAPI: required,\n    validateByteCodeAPI: required,\n    getFateAssembler: required,\n    getBytecodeCompilerVersion: required\n  }\n}))\n\n/**\n * Get contract ACI\n * @function contractGetACI\n * @instance\n * @abstract\n * @category async\n * @rtype (source: String, options: Array) => aciObject: Promise[Object]\n * @param {String} source - Contract source code\n * @param {Object} [options={}]  Options\n * @param {Object} [options.filesystem]  Contract external namespaces map\n * @param {Object} [options.backend]  Contract vm(default: aevm)\n * @return {Object} - Contract aci object\n */\n\n/**\n * Encode contract data\n * @function contractEncodeCallDataAPI\n * @instance\n * @abstract\n * @category async\n * @rtype (source: String, name: String, args: Array, options: Array) => callData: Promise[String]\n * @param {String} source - Contract source code\n * @param {String} name - Function name\n * @param {Array} args - Function argument's\n * @param {Object} [options={}]  Options\n * @param {Object} [options.filesystem]  Contract external namespaces map\n * @param {Object} [options.backend]  Contract vm(default: aevm)\n * @return {String} - Contract encoded data\n */\n\n/**\n * Decode data\n * @function contractDecodeDataAPI\n * @instance\n * @abstract\n * @category async\n * @rtype (type: String, data: String) => decodedResult: Promise[String]\n * @param {String} type - Contract call result type\n * @param {String} data - Encoded contract call result\n * @return {String} - Decoded contract call result\n */\n\n/**\n * Decode contract call result data\n * @function contractDecodeCallResultAPI\n * @instance\n * @abstract\n * @category async\n * @rtype (source: String, fn: String, callValue: String, callResult: String, options: Array) => decodedResult: Promise[String]\n * @param {String} source - Contract source\n * @param {String} fn - Fn name\n * @param {String} callValue - result data (cb_das...)\n * @param {String} callResult - contract call result status('ok', 'revert', ...)\n * @param {Object} [options={}]  Options\n * @param {Object} [options.filesystem]  Contract external namespaces map\n * @param {Object} [options.backend]  Contract vm(default: aevm)\n * @return {String} - Decoded contract call result\n */\n\n/**\n * Decode call data by source\n * @function contractDecodeCallDataBySourceAPI\n * @instance\n * @abstract\n * @category async\n * @rtype (source: String, function: String, callData: String, options: Array) => decodedResult: Promise[String]\n * @param {String} source - contract source\n * @param {String} function - function name\n * @param {String} callData - Encoded contract call data\n * @param {Object} [options={}]  Options\n * @param {Object} [options.filesystem]  Contract external namespaces map\n * @param {Object} [options.backend]  Contract vm(default: aevm)\n * @return {String} - Decoded contract call data\n */\n\n/**\n * Decode call data by bytecode\n * @function contractDecodeCallDataByCodeAPI\n * @instance\n * @abstract\n * @category async\n * @rtype (code: String, callData: String) => decodedResult: Promise[String]\n * @param {String} code - contract byte code\n * @param {String} callData - Encoded contract call data\n * @param {String} backend - Contract vm(default: aevm)\n * @return {String} - Decoded contract call data\n */\n\n/**\n * Compile contract\n * @function compileContractAPI\n * @instance\n * @abstract\n * @category async\n * @rtype (code: String, options?: Object) => compiledContract: Object\n * @param {String} code - Contract source code\n * @param {Object} [options={}]  Options\n * @param {Object} [options.filesystem]  Contract external namespaces map\n * @param {Object} [options.backend]  Contract vm(default: aevm)\n * @return {Object} Object which contain bytecode of contract\n */\n\n/**\n * Set compiler url\n * @function setCompilerUrl\n * @instance\n * @abstract\n * @category async\n * @rtype (url: String) => void\n * @param {String} url - Compiler url\n * @return {void}\n */\n\n/**\n * Get Compiler Version\n * @function getCompilerVersion\n * @instance\n * @abstract\n * @category async\n * @rtype () => String\n * @return {String} Compiler version\n */\n\nexport default ContractBase\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * ContractCompilerAPI module\n *\n * This is the complement to {@link module:@aeternity/aepp-sdk/es/contract}.\n * @module @aeternity/aepp-sdk/es/contract/compiler\n * @export ContractCompilerAPI\n * @example import ContractCompilerAPI from '@aeternity/aepp-sdk/es/contract/compiler'\n */\n\nimport Http from '../utils/http'\nimport ContractBase from './index'\nimport semverSatisfies from '../utils/semver-satisfies'\nimport AsyncInit from '../utils/async-init'\nimport { VM_TYPE } from '../tx/builder/schema'\n\nasync function getCompilerVersion (options = {}) {\n  return this.http\n    .get('/api-version', options)\n    .then((res) => res['api-version'])\n}\n\nasync function contractEncodeCallDataAPI (source, name, args = [], options = {}) {\n  this.isInit()\n  return this.http\n    .post('/encode-calldata', { source, function: name, arguments: args, options: this.prepareCompilerOption(options) }, options)\n    .then(({ calldata }) => calldata)\n}\n\nasync function contractDecodeCallDataByCodeAPI (bytecode, calldata, backend = this.compilerOptions.backend, options = {}) {\n  this.isInit()\n  return this.http\n    .post('/decode-calldata/bytecode', { bytecode, calldata, backend }, options)\n}\n\nasync function contractDecodeCallDataBySourceAPI (source, fn, callData, options = {}) {\n  this.isInit()\n  return this.http\n    .post('/decode-calldata/source', { function: fn, source, calldata: callData, options: this.prepareCompilerOption(options) }, options)\n}\n\nasync function contractDecodeCallResultAPI (source, fn, callValue, callResult, options = {}) {\n  this.isInit()\n  return this.http\n    .post('/decode-call-result', { function: fn, source, 'call-result': callResult, 'call-value': callValue, options: this.prepareCompilerOption(options) }, options)\n}\n\nasync function contractDecodeDataAPI (type, data, options = {}) {\n  this.isInit()\n  return this.http\n    .post('/decode-data', { data, 'sophia-type': type }, options)\n    .then(({ data }) => data)\n}\n\nasync function validateByteCodeAPI (bytecode, source, options = {}) {\n  this.isInit()\n  return this.http\n    .post('/validate-byte-code', { bytecode, source, options: this.prepareCompilerOption(options) }, options)\n    .then(res => typeof res === 'object' ? true : res)\n}\n\nasync function compileContractAPI (code, options = {}) {\n  this.isInit()\n  return this.http.post('/compile', { code, options: this.prepareCompilerOption(options) }, options)\n    .then(({ bytecode }) => bytecode)\n}\n\nasync function contractGetACI (code, options = {}) {\n  this.isInit()\n  return this.http.post('/aci', { code, options: this.prepareCompilerOption(options) }, options)\n}\n\nasync function getFateAssembler (bytecode, options = {}) {\n  this.isInit()\n  return this.http.post('/fate-assembler', { bytecode, options: this.prepareCompilerOption(options) }, options)\n}\n\nasync function getBytecodeCompilerVersion (bytecode, options = {}) {\n  this.isInit()\n  return this.http.post('/compiler-version', { bytecode, options: this.prepareCompilerOption(options) }, options)\n}\n\nasync function setCompilerUrl (url, { forceCompatibility = false } = {}) {\n  this.http.changeBaseUrl(url)\n  this.compilerVersion = await this.getCompilerVersion().catch(e => null)\n  await this.checkCompatibility({ forceCompatibility })\n}\n\nasync function checkCompatibility ({ force = false, forceCompatibility = false } = {}) {\n  if (!this.compilerVersion && !force) throw new Error('Compiler do not respond')\n  if (!forceCompatibility && this.compilerVersion && !semverSatisfies(this.compilerVersion.split('-')[0], COMPILER_GE_VERSION, COMPILER_LT_VERSION)) {\n    const version = this.compilerVersion\n    this.compilerVersion = null\n    throw new Error(`Unsupported compiler version ${version}. ` +\n      `Supported: >= ${COMPILER_GE_VERSION} < ${COMPILER_LT_VERSION}`)\n  }\n}\n\nfunction prepareCompilerOption ({ backend = this.compilerOptions.backend, filesystem = {} } = {}) {\n  return { backend, file_system: filesystem }\n}\n\nfunction isInit () {\n  if (this.compilerVersion === null) throw Error('Compiler not defined')\n  return true\n}\n\n/**\n * Contract Compiler Stamp\n *\n * This stamp include api call's related to contract compiler functionality.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/contract/compiler\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @param {String} [options.compilerUrl] compilerUrl - Url for compiler API\n * @return {Object} Contract compiler instance\n * @example ContractCompilerAPI({ compilerUrl: 'COMPILER_URL' })\n */\nconst ContractCompilerAPI = AsyncInit.compose(ContractBase, {\n  async init ({ compilerUrl = this.compilerUrl, forceCompatibility = false }) {\n    this.http = Http({ baseUrl: compilerUrl })\n    this.compilerVersion = await this.getCompilerVersion().catch(e => null)\n    await this.checkCompatibility({ force: true, forceCompatibility })\n  },\n  methods: {\n    contractEncodeCallDataAPI,\n    contractDecodeDataAPI,\n    compileContractAPI,\n    contractGetACI,\n    contractDecodeCallDataByCodeAPI,\n    contractDecodeCallDataBySourceAPI,\n    contractDecodeCallResultAPI,\n    setCompilerUrl,\n    getCompilerVersion,\n    validateByteCodeAPI,\n    isInit,\n    checkCompatibility,\n    prepareCompilerOption,\n    getFateAssembler,\n    getBytecodeCompilerVersion\n  },\n  props: {\n    compilerVersion: null,\n    compilerOptions: {\n      backend: VM_TYPE.FATE\n    }\n  }\n})\n\nconst COMPILER_GE_VERSION = '4.0.0'\nexport const COMPILER_LT_VERSION = '5.0.0'\n\nexport default ContractCompilerAPI\n","import Joi from 'joi-browser'\nimport { isAeAddress, isHex } from '../../utils/string'\nimport { toBytes } from '../../utils/bytes'\nimport { decode } from '../../tx/builder/helpers'\nimport { parseBigNumber } from '../../utils/bignumber'\nimport { addressFromDecimal, hash } from '../../utils/crypto'\n\nexport const SOPHIA_TYPES = [\n  'int',\n  'string',\n  'tuple',\n  'address',\n  'bool',\n  'list',\n  'map',\n  'record',\n  'option',\n  'oracle',\n  'oracleQuery',\n  'hash',\n  'signature',\n  'bytes',\n  'variant'\n].reduce((acc, type) => ({ ...acc, [type]: type }), { ChainTtl: 'Chain.ttl' })\n\n/**\n * Transform decoded event to JS type\n * @param {Object[]} events Array of events\n * @param {Object} [options={}] Options\n * @param {Object} [options.schema=[]] SC function ACI schema\n * @return {Object}\n */\nexport function decodeEvents (events, options = { schema: [] }) {\n  if (!events.length) return []\n\n  return events.map(l => {\n    const [eName, ...eParams] = l.topics\n    const hexHash = toBytes(eName, true).toString('hex')\n    const { schema, isHasNonIndexed } = options.schema\n      .reduce(\n        (acc, el) => {\n          if (hash(el.name).toString('hex') === hexHash) {\n            l.name = el.name\n            return {\n              schema: el.types.filter(e => e !== SOPHIA_TYPES.string),\n              isHasNonIndexed: el.types.includes(SOPHIA_TYPES.string),\n              name: el.name\n            }\n          }\n          return acc\n        },\n        { schema: [], isHasNonIndexed: true }\n      )\n    return {\n      ...l,\n      decoded: [\n        ...isHasNonIndexed ? [decode(l.data).toString('utf-8')] : [],\n        ...eParams.map((event, i) => transformEvent(event, schema[i]))\n      ]\n    }\n  })\n}\n\n/**\n * Transform Event based on type\n * @param {String|Number} event Event data\n * @param {String} type Event type from schema\n * @return {*}\n */\nfunction transformEvent (event, type) {\n  switch (type) {\n    case SOPHIA_TYPES.int:\n      return parseBigNumber(event)\n    case SOPHIA_TYPES.bool:\n      return !!event\n    case SOPHIA_TYPES.hash:\n      return toBytes(event, true).toString('hex')\n    case SOPHIA_TYPES.address:\n      return addressFromDecimal(event).split('_')[1]\n    default:\n      return toBytes(event, true)\n  }\n}\n\nexport function injectVars (t, aciType) {\n  const [[baseType, generic]] = Object.entries(aciType.typedef)\n  const [[, varianValue]] = Object.entries(t)\n  switch (baseType) {\n    case SOPHIA_TYPES.variant:\n      return {\n        [baseType]: generic.map(el => {\n          const [tag, gen] = Object.entries(el)[0]\n          return {\n            [tag]: gen.map(type => {\n              const index = aciType.vars.map(e => e.name).indexOf(type)\n              return index === -1\n                ? type\n                : varianValue[index]\n            })\n          }\n        })\n      }\n  }\n}\n\n/**\n * Ling Type Defs\n * @param t\n * @param bindings\n * @return {Object}\n */\nexport function linkTypeDefs (t, bindings) {\n  const [, typeDef] = typeof t === 'object' ? Object.keys(t)[0].split('.') : t.split('.')\n  const aciType = [\n    ...bindings.typedef,\n    { name: 'state', typedef: bindings.state, vars: [] }\n  ].find(({ name }) => name === typeDef)\n  if (aciType.vars.length) {\n    aciType.typedef = injectVars(t, aciType)\n  }\n\n  return aciType.typedef\n}\n\n/**\n * Parse sophia type\n * @param type\n * @param returnType\n * @return {Object}\n */\nexport function readType (type, { bindings } = {}) {\n  let [t] = Array.isArray(type) ? type : [type]\n\n  // Link State and typeDef\n  if (\n    (typeof t === 'string' && t.indexOf(bindings.contractName) !== -1) ||\n    (typeof t === 'object' && Object.keys(t)[0] && Object.keys(t)[0].indexOf(bindings.contractName) !== -1)\n  ) {\n    t = linkTypeDefs(t, bindings)\n  }\n\n  // Map, Tuple, List, Record, Bytes\n  if (typeof t === 'object') {\n    const [[baseType, generic]] = Object.entries(t)\n    return { t: baseType, generic }\n  }\n  // Base types\n  if (typeof t === 'string') return { t }\n}\n\n// FUNCTION ARGUMENTS TRANSFORMATION ↓↓↓\n\n/**\n * Transform JS type to Sophia-type\n * @param type\n * @param value\n * @param bindings\n * @return {string}\n */\nexport function transform (type, value, { bindings } = {}) {\n  const { t, generic } = readType(type, { bindings })\n\n  switch (t) {\n    case SOPHIA_TYPES.ChainTtl:\n      return `${value}`\n    case SOPHIA_TYPES.string:\n      return `\"${value}\"`\n    case SOPHIA_TYPES.list:\n      return `[${value.map(el => transform(generic, el, { bindings }))}]`\n    case SOPHIA_TYPES.tuple:\n      return `(${value.map((el, i) => transform(generic[i], el, {\n        bindings\n      }))})`\n    case SOPHIA_TYPES.option: {\n      return value === undefined ? 'None' : `Some(${transform(generic, value, {\n        bindings\n      })})`\n    }\n    case SOPHIA_TYPES.hash:\n    case SOPHIA_TYPES.bytes:\n    case SOPHIA_TYPES.signature:\n      if (typeof value === 'string') {\n        if (isHex(value)) return `#${value}`\n        if (isAeAddress(value)) return `#${decode(value).toString('hex')}`\n      }\n      return `#${Buffer.from(value).toString('hex')}`\n    case SOPHIA_TYPES.record:\n      return `{${generic.reduce(\n        (acc, { name, type }, i) => {\n          acc += `${i !== 0 ? ',' : ''}${name} = ${transform(type, value[name], {\n            bindings\n          })}`\n          return acc\n        },\n        ''\n      )}}`\n    case SOPHIA_TYPES.map:\n      return transformMap(value, generic, { bindings })\n    case SOPHIA_TYPES.variant:\n      return transformVariant(value, generic, { bindings })\n  }\n\n  return `${value}`\n}\n\nfunction transformVariant (value, generic, { bindings }) {\n  const [[variant, variantArgs]] = typeof value === 'string' ? [[value, []]] : Object.entries(value)\n  const [[v, type]] = Object.entries(generic.find(o => Object.keys(o)[0].toLowerCase() === variant.toLowerCase()))\n  return `${v}${!type.length\n    ? ''\n    : `(${variantArgs.slice(0, type.length).map((el, i) => transform(type[i], el, {\n      bindings\n    }))})`\n  }`\n}\n\nexport function transformMap (value, generic, { bindings }) {\n  if (value instanceof Map) {\n    value = Array.from(value.entries())\n  }\n  if (!Array.isArray(value) && value instanceof Object) {\n    value = Object.entries(value)\n  }\n\n  return `{${value\n    .reduce(\n      (acc, [key, value], i) => {\n        if (i !== 0) acc += ','\n        acc += `[${transform(generic[0], key, {\n          bindings\n        })}] = ${transform(generic[1], value, { bindings })}`\n        return acc\n      },\n      ''\n    )\n  }}`\n}\n\n// FUNCTION RETURN VALUE TRANSFORMATION ↓↓↓\n\n/**\n * Transform decoded data to JS type\n * @param aci\n * @param result\n * @param transformDecodedData\n * @return {*}\n */\nexport function transformDecodedData (aci, result, { skipTransformDecoded = false, addressPrefix = 'ak', bindings } = {}) {\n  if (skipTransformDecoded) return result\n  const { t, generic } = readType(aci, { bindings })\n\n  switch (t) {\n    case SOPHIA_TYPES.bool:\n      return !!result\n    case SOPHIA_TYPES.address:\n      return result === 0\n        ? 0\n        : result\n    case SOPHIA_TYPES.hash:\n    case SOPHIA_TYPES.bytes:\n    case SOPHIA_TYPES.signature:\n      return result.split('#')[1]\n    case SOPHIA_TYPES.map: {\n      const [keyT, valueT] = generic\n      return result\n        .reduce(\n          (acc, [key, val]) => {\n            key = transformDecodedData(keyT, key, { bindings })\n            val = transformDecodedData(valueT, val, { bindings })\n            acc.push([key, val])\n            return acc\n          },\n          []\n        )\n    }\n    case SOPHIA_TYPES.option: {\n      if (result === 'None') return undefined\n      const [[variantType, [value]]] = Object.entries(result)\n      return variantType === 'Some' ? transformDecodedData(generic, value, { bindings }) : undefined\n    }\n    case SOPHIA_TYPES.list:\n      return result.map((value) => transformDecodedData(generic, value, { bindings }))\n    case SOPHIA_TYPES.tuple:\n      return result.map((value, i) => { return transformDecodedData(generic[i], value, { bindings }) })\n    case SOPHIA_TYPES.record: {\n      const genericMap = generic.reduce((acc, val) => ({ ...acc, [val.name]: { type: val.type } }), {})\n      return Object.entries(result).reduce(\n        (acc, [name, value]) =>\n          ({\n            ...acc,\n            [name]: transformDecodedData(genericMap[name].type, value, { bindings })\n          }),\n        {}\n      )\n    }\n  }\n  return result\n}\n\n// FUNCTION ARGUMENTS VALIDATION ↓↓↓\n\n/**\n * Prepare Joi validation schema for sophia types\n * @param type\n * @param bindings\n * @return {Object} JoiSchema\n */\nexport function prepareSchema (type, { bindings } = {}) {\n  let { t, generic } = readType(type, { bindings })\n\n  if (!Object.values(SOPHIA_TYPES).includes(t)) t = SOPHIA_TYPES.address // Handle Contract address transformation\n  switch (t) {\n    case SOPHIA_TYPES.int:\n      return Joi.number().error(getJoiErrorMsg)\n    case SOPHIA_TYPES.variant:\n      return Joi.alternatives().try([\n        Joi.string().valid(\n          ...generic.reduce((acc, el) => {\n            const [[t, g]] = Object.entries(el)\n            if (!g || !g.length) acc.push(t)\n            return acc\n          }, [])\n        ),\n        Joi.object(generic\n          .reduce(\n            (acc, el) => {\n              const variant = Object.keys(el)[0]\n              return { ...acc, [variant]: Joi.array() }\n            },\n            {})\n        ).or(...generic.map(e => Object.keys(e)[0]))\n      ])\n    case SOPHIA_TYPES.ChainTtl:\n      return Joi.string().error(getJoiErrorMsg)\n    case SOPHIA_TYPES.string:\n      return Joi.string().error(getJoiErrorMsg)\n    case SOPHIA_TYPES.address:\n      return Joi.string().regex(/^(ak_|ct_|ok_|oq_)/).error(getJoiErrorMsg)\n    case SOPHIA_TYPES.bool:\n      return Joi.boolean().error(getJoiErrorMsg)\n    case SOPHIA_TYPES.list:\n      return Joi.array().items(prepareSchema(generic, { bindings })).error(getJoiErrorMsg)\n    case SOPHIA_TYPES.tuple:\n      return Joi.array().ordered(generic.map(type => prepareSchema(type, { bindings }).required())).label('Tuple argument').error(getJoiErrorMsg)\n    case SOPHIA_TYPES.record:\n      return Joi.object(\n        generic.reduce((acc, { name, type }) => ({ ...acc, [name]: prepareSchema(type, { bindings }) }), {})\n      ).error(getJoiErrorMsg)\n    case SOPHIA_TYPES.hash:\n      return JoiBinary.binary().bufferCheck(32).error(getJoiErrorMsg)\n    case SOPHIA_TYPES.bytes:\n      return JoiBinary.binary().bufferCheck(generic).error(getJoiErrorMsg)\n    case SOPHIA_TYPES.signature:\n      return JoiBinary.binary().bufferCheck(64).error(getJoiErrorMsg)\n    case SOPHIA_TYPES.option:\n      return prepareSchema(generic, { bindings }).optional().error(getJoiErrorMsg)\n    // @Todo Need to transform Map to Array of arrays before validating it\n    // case SOPHIA_TYPES.map:\n    //   return Joi.array().items(Joi.array().ordered(generic.map(type => prepareSchema(type))))\n    default:\n      return Joi.any()\n  }\n}\n\n/**\n * Parse Joi validation error message\n * @param errors\n * @return {Object} JoiError\n */\nexport function getJoiErrorMsg (errors) {\n  return errors.map(err => {\n    const { path, type, context } = err\n    let value = Object.prototype.hasOwnProperty.call(context, 'value') ? context.value : context.label\n    value = typeof value === 'object' ? JSON.stringify(value).slice(1).slice(0, -1) : value\n    switch (type) {\n      case 'string.base':\n        return ({ ...err, message: `Value \"${value}\" at path: [${path}] not a string` })\n      case 'number.base':\n        return ({ ...err, message: `Value \"${value}\" at path: [${path}] not a number` })\n      case 'boolean.base':\n        return ({ ...err, message: `Value \"${value}\" at path: [${path}] not a boolean` })\n      case 'array.base':\n        return ({ ...err, message: `Value \"${value}\" at path: [${path}] not a array` })\n      case 'object.base':\n        return ({ ...err, message: `Value '${value}' at path: [${path}] not a object` })\n      case 'object.type':\n        return ({ ...err, message: `Value '${value}' at path: [${path}] not a ${context.type}` })\n      case 'binary.bufferCheck':\n        return ({\n          ...err,\n          message: `Value '${Buffer.from(value).toString('hex')}' at path: [${path}] not a ${context.size} bytes`\n        })\n      default:\n        return err\n    }\n  })\n}\n\n/**\n * Custom Joi Validator for binary type\n */\nconst JoiBinary = Joi.extend((joi) => ({\n  name: 'binary',\n  base: joi.any(),\n  pre (value, state, options) {\n    if (options.convert && typeof value === 'string') {\n      if (isAeAddress(value)) {\n        return decode(value)\n      }\n      try {\n        return Buffer.from(value, 'hex')\n      } catch (e) { return undefined }\n    }\n\n    return Buffer.from(value)\n  },\n  rules: [\n    {\n      name: 'bufferCheck',\n      params: {\n        size: joi.number().required()\n      },\n      validate (params, value, state, options) {\n        if (!Buffer.isBuffer(value)) {\n          return this.createError('binary.base', { value }, state, options)\n        }\n        if (value.length !== params.size) {\n          return this.createError('binary.bufferCheck', { value, size: params.size }, state, options)\n        }\n\n        return value\n      }\n    }\n  ]\n}))\n\n/**\n * Validation contract function arguments\n * @param aci\n * @param params\n */\nexport function validateArguments (aci, params) {\n  const validationSchema = Joi.array().ordered(\n    aci.arguments\n      .map(({ type }, i) => prepareSchema(type, { bindings: aci.bindings }).label(`[${params[i]}]`))\n  ).sparse(true).label('Argument')\n  const { error } = Joi.validate(params, validationSchema, { abortEarly: false })\n  if (error) {\n    throw error\n  }\n}\n","import * as R from 'ramda'\nimport { unpackTx } from '../../tx/builder'\n\n/**\n * Get function schema from contract ACI object\n * @param {Object} aci Contract ACI object\n * @param {String} name Function name\n * @return {Object} function ACI\n */\nexport function getFunctionACI (aci, name) {\n  const fn = aci.functions.find(f => f.name === name)\n  if (!fn && name !== 'init') throw new Error(`Function ${name} doesn't exist in contract`)\n\n  return {\n    ...fn,\n    bindings: {\n      state: aci.state,\n      typedef: aci.type_defs,\n      contractName: aci.name\n    },\n    event: aci.event ? aci.event.variant : []\n  }\n}\n\n/**\n * Build contract methods base on ACI\n * @return {Object} Contract instance methods\n */\nexport const buildContractMethods = (instance) => () => ({\n  ...instance.aci\n    ? instance\n      .aci\n      .functions\n      .reduce(\n        (acc, { name, arguments: aciArgs, stateful }) => ({\n          ...acc,\n          [name]: Object.assign(\n            function () {\n              const { opt, args } = parseArguments(aciArgs)(arguments)\n              if (name === 'init') return instance.deploy(args, opt)\n              return instance.call(name, args, { callStatic: !stateful, ...opt })\n            },\n            {\n              get () {\n                const { opt, args } = parseArguments(aciArgs)(arguments)\n                return instance.call(name, args, { ...opt, callStatic: true })\n              },\n              send () {\n                const { opt, args } = parseArguments(aciArgs)(arguments)\n                if (name === 'init') return instance.deploy(args, opt)\n                return instance.call(name, args, { ...opt, callStatic: false })\n              }\n            }\n          )\n        }),\n        {}\n      )\n    : {},\n  ...instance.aci ? {\n    init: Object.assign(\n      function () {\n        const { arguments: aciArgs } = getFunctionACI(instance.aci, 'init')\n        const { opt, args } = parseArguments(aciArgs)(arguments)\n        return instance.deploy(args, opt)\n      },\n      {\n        get () {\n          const { arguments: aciArgs } = getFunctionACI(instance.aci, 'init')\n          const { opt, args } = parseArguments(aciArgs)(arguments)\n          return instance.deploy(args, { ...opt, callStatic: true })\n        },\n        send () {\n          const { arguments: aciArgs } = getFunctionACI(instance.aci, 'init')\n          const { opt, args } = parseArguments(aciArgs)(arguments)\n          return instance.deploy(args, { ...opt, callStatic: false })\n        }\n      }\n    )\n  } : {}\n})\n\nconst parseArguments = (aciArgs = []) => (args) => ({\n  opt: args.length > aciArgs.length ? R.last(args) : {},\n  args: Object.values(args).slice(0, aciArgs.length)\n})\n\nexport const unpackByteCode = (bytecode) => unpackTx(bytecode, false, 'cb').tx\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * ContractACI module\n *\n * @module @aeternity/aepp-sdk/es/contract/aci\n * @export ContractACI\n * @example import ContractACI from '@aeternity/aepp-sdk/es/contract/aci'\n */\n\nimport * as R from 'ramda'\n\nimport {\n  validateArguments,\n  transform,\n  transformDecodedData,\n  decodeEvents\n} from './transformation'\nimport { buildContractMethods, getFunctionACI } from './helpers'\nimport { isAddressValid } from '../../utils/crypto'\nimport AsyncInit from '../../utils/async-init'\nimport { BigNumber } from 'bignumber.js'\nimport { COMPILER_LT_VERSION } from '../compiler'\nimport semverSatisfies from '../../utils/semver-satisfies'\nimport { AMOUNT, DEPOSIT, GAS, MIN_GAS_PRICE } from '../../tx/builder/schema'\n\n/**\n * Validated contract call arguments using contract ACI\n * @function validateCallParams\n * @rtype (aci: Object, params: Array) => Object\n * @param {Object} aci Contract ACI\n * @param {Array} params Contract call arguments\n * @return Promise{Array} Object with validation errors\n */\nasync function prepareArgsForEncode (aci, params) {\n  if (!aci || !aci.arguments) return params\n  // Validation\n  if (aci.arguments.length > params.length) {\n    throw new Error(`Function \"${aci.name}\" require ${aci.arguments.length} arguments of types [${aci.arguments.map(a => JSON.stringify(a.type))}] but get [${params.map(JSON.stringify)}]`)\n  }\n\n  validateArguments(aci, params)\n  const bindings = aci.bindings\n  // Cast argument from JS to Sophia type\n  return Promise.all(aci.arguments.map(async ({ type }, i) => transform(type, params[i], {\n    bindings\n  })))\n}\n\n/**\n * Generate contract ACI object with predefined js methods for contract usage - can be used for creating a reference to already deployed contracts\n * @alias module:@aeternity/aepp-sdk/es/contract/aci\n * @param {String} source Contract source code\n * @param {Object} [options={}] Options object\n * @param {String} [options.aci] Contract ACI\n * @param {String} [options.contractAddress] Contract address\n * @param {Object} [options.filesystem] Contact source external namespaces map\n * @param {Object} [options.forceCodeCheck=true] Don't check contract code\n * @param {Object} [options.opt] Contract options\n * @return {ContractInstance} JS Contract API\n * @example\n * const contractIns = await client.getContractInstance(sourceCode)\n * await contractIns.deploy([321]) or await contractIns.methods.init(321)\n * const callResult = await contractIns.call('setState', [123]) or await contractIns.methods.setState.send(123, options)\n * const staticCallResult = await contractIns.call('setState', [123], { callStatic: true }) or await contractIns.methods.setState.get(123, options)\n * Also you can call contract like: await contractIns.methods.setState(123, options)\n * Then sdk decide to make on-chain or static call(dry-run API) transaction based on function is stateful or not\n */\nasync function getContractInstance (source, { aci, contractAddress, filesystem = {}, forceCodeCheck = true, opt } = {}) {\n  aci = aci || await this.contractGetACI(source, { filesystem })\n  const defaultOptions = {\n    skipArgsConvert: false,\n    skipTransformDecoded: false,\n    callStatic: false,\n    deposit: DEPOSIT,\n    gasPrice: MIN_GAS_PRICE, // min gasPrice 1e9\n    amount: AMOUNT,\n    gas: GAS,\n    top: null, // using for contract call static\n    waitMined: true,\n    verify: false,\n    filesystem\n  }\n  const instance = {\n    interface: R.defaultTo(null, R.prop('interface', aci)),\n    aci: R.defaultTo(null, R.path(['encoded_aci', 'contract'], aci)),\n    source,\n    compiled: null,\n    deployInfo: { address: contractAddress },\n    options: R.merge(defaultOptions, opt),\n    compilerVersion: this.compilerVersion,\n    setOptions (opt) {\n      this.options = R.merge(this.options, opt)\n    }\n  }\n\n  // Check for valid contract address and contract code\n  if (contractAddress) {\n    if (!isAddressValid(contractAddress, 'ct')) throw new Error('Invalid contract address')\n    const contract = await this.getContract(contractAddress).catch(e => null)\n    if (!contract || !contract.active) throw new Error(`Contract with address ${contractAddress} not found on-chain or not active`)\n    // Check if we are using compiler version gte then 4.1.0(has comparing bytecode API)\n    if (!forceCodeCheck && semverSatisfies(this.compilerVersion, '4.1.0', COMPILER_LT_VERSION)) {\n      const onChanByteCode = (await this.getContractByteCode(contractAddress)).bytecode\n      const isCorrespondingBytecode = await this.validateByteCodeAPI(onChanByteCode, instance.source, instance.options).catch(e => false)\n      if (!isCorrespondingBytecode) throw new Error('Contract source do not correspond to the contract bytecode deployed on the chain')\n    }\n  }\n\n  /**\n   * Compile contract\n   * @alias module:@aeternity/aepp-sdk/es/contract/aci\n   * @rtype () => ContractInstance: Object\n   * @return {ContractInstance} Contract ACI object with predefined js methods for contract usage\n   */\n  instance.compile = compile({ client: this, instance })\n  /**\n   * Deploy contract\n   * @alias module:@aeternity/aepp-sdk/es/contract/aci\n   * @rtype (init: Array, options: Object = { skipArgsConvert: false }) => ContractInstance: Object\n   * @param {Array} init Contract init function arguments array\n   * @param {Object} [options={}] options Options object\n   * @param {Boolean} [options.skipArgsConvert=false] Skip Validation and Transforming arguments before prepare call-data\n   * @return {ContractInstance} Contract ACI object with predefined js methods for contract usage\n   */\n  instance.deploy = deploy({ client: this, instance })\n  /**\n   * Call contract function\n   * @alias module:@aeternity/aepp-sdk/es/contract/aci\n   * @rtype (init: Array, options: Object = { skipArgsConvert: false, skipTransformDecoded: false, callStatic: false }) => CallResult: Object\n   * @param {String} fn Function name\n   * @param {Array} params Array of function arguments\n   * @param {Object} [options={}] Array of function arguments\n   * @param {Boolean} [options.skipArgsConvert=false] Skip Validation and Transforming arguments before prepare call-data\n   * @param {Boolean} [options.skipTransformDecoded=false] Skip Transform decoded data to JS type\n   * @param {Boolean} [options.callStatic=false] Static function call\n   * @return {Object} CallResult\n   */\n  instance.call = call({ client: this, instance })\n\n  /**\n   * Generate proto function based on contract function using Contract ACI schema\n   * All function can be called like:\n   * 'await contract.methods.testFunction()' -> then sdk will decide to use dry-run or send tx on-chain base on if function stateful or not.\n   * Also you can manually do that:\n   * `await contract.methods.testFunction.get()` -> use call-static(dry-run)\n   * `await contract.methods.testFunction.send()` -> send tx on-chain\n   */\n  instance.methods = buildContractMethods(instance)()\n  return instance\n}\n\nconst decodeCallResult = async (result, fnACI, opt) => {\n  const eventsSchema = fnACI.event.map(e => {\n    const name = Object.keys(e)[0]\n    return { name, types: e[name] }\n  })\n\n  return {\n    decodedResult: await transformDecodedData(\n      fnACI.returns,\n      await result.decode(),\n      { ...opt, bindings: fnACI.bindings }\n    ),\n    decodedEvents: decodeEvents(result.result.log, { ...opt, schema: eventsSchema })\n  }\n}\nconst call = ({ client, instance }) => async (fn, params = [], options = {}) => {\n  const opt = R.merge(instance.options, options)\n  const fnACI = getFunctionACI(instance.aci, fn)\n  const source = opt.source || instance.source\n\n  if (!fn) throw new Error('Function name is required')\n  if (!instance.deployInfo.address) throw new Error('You need to deploy contract before calling!')\n  if (\n    BigNumber(opt.amount).gt(0) &&\n    (Object.prototype.hasOwnProperty.call(fnACI, 'payable') && !fnACI.payable)\n  ) throw new Error(`You try to pay \"${opt.amount}\" to function \"${fn}\" which is not payable. Only payable function can accept tokens`)\n  params = !opt.skipArgsConvert ? await prepareArgsForEncode(fnACI, params) : params\n  const result = opt.callStatic\n    ? await client.contractCallStatic(source, instance.deployInfo.address, fn, params, {\n      top: opt.top,\n      options: opt\n    })\n    : await client.contractCall(source, instance.deployInfo.address, fn, params, opt)\n  return {\n    ...result,\n    ...opt.waitMined ? await decodeCallResult(result, fnACI, opt) : {}\n  }\n}\n\nconst deploy = ({ client, instance }) => async (init = [], options = {}) => {\n  const opt = R.merge(instance.options, options)\n  const fnACI = getFunctionACI(instance.aci, 'init')\n  const source = opt.source || instance.source\n\n  if (!instance.compiled) await instance.compile(opt)\n  init = !opt.skipArgsConvert ? await prepareArgsForEncode(fnACI, init) : init\n\n  if (opt.callStatic) {\n    return client.contractCallStatic(source, null, 'init', init, {\n      top: opt.top,\n      options: opt,\n      bytecode: instance.compiled\n    })\n  } else {\n    const { owner, transaction, address, createdAt, result, rawTx } = await client.contractDeploy(instance.compiled, opt.source || instance.source, init, opt)\n    instance.deployInfo = { owner, transaction, address, createdAt, result, rawTx }\n    return instance.deployInfo\n  }\n}\n\nconst compile = ({ client, instance }) => async (options = {}) => {\n  const { bytecode } = await client.contractCompile(instance.source, { ...instance.options, ...options })\n  instance.compiled = bytecode\n  return instance.compiled\n}\n\n/**\n * Contract ACI Stamp\n *\n * @function\n * @alias module:@aeternity/aepp-sdk/es/contract/aci\n * @rtype Stamp\n * @return {Object} Contract compiler instance\n * @example ContractACI()\n */\nexport default AsyncInit.compose({\n  methods: {\n    getContractInstance\n  }\n})\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Contract module - routines to interact with the æternity contract\n *\n * High level documentation of the contracts are available at\n * https://github.com/aeternity/protocol/tree/master/contracts and\n *\n * @module @aeternity/aepp-sdk/es/ae/contract\n * @export Contract\n * @example import Contract from '@aeternity/aepp-sdk/es/ae/contract' (Using tree-shaking)\n * @example import { Contract } from '@aeternity/aepp-sdk' (Using bundle)\n */\n\nimport Ae from './'\nimport * as R from 'ramda'\nimport { isBase64 } from '../utils/string'\nimport ContractCompilerAPI from '../contract/compiler'\nimport ContractBase from '../contract'\nimport ContractACI from '../contract/aci'\nimport BigNumber from 'bignumber.js'\nimport NodePool from '../node-pool'\nimport { AMOUNT, DEPOSIT, DRY_RUN_ACCOUNT, GAS, MIN_GAS_PRICE } from '../tx/builder/schema'\nimport { decode, produceNameId } from '../tx/builder/helpers'\n\nfunction sendAndProcess (tx, options) {\n  return async function (onSuccess, onError) {\n    // Send transaction and get transaction info\n    const txData = await this.send(tx, options)\n\n    if (typeof options.waitMined === 'boolean' && !options.waitMined) {\n      return onSuccess({ hash: txData.hash, rawTx: txData.rawTx })\n    }\n\n    const result = await this.getTxInfo(txData.hash)\n    return result.returnType === 'ok'\n      ? onSuccess({ hash: txData.hash, rawTx: txData.rawTx, result, txData })\n      : typeof onError === 'function' ? onError(result) : this.handleCallError(result)\n  }\n}\n\n/**\n * Handle contract call error\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/contract\n * @category async\n * @param {Object} result call result object\n * @throws Error Decoded error\n * @return {Promise<void>}\n */\nasync function handleCallError (result) {\n  const error = Buffer.from(result.returnValue).toString()\n  if (isBase64(error.slice(3))) {\n    const decodedError = Buffer.from(error.slice(3), 'base64').toString()\n    throw Object.assign(Error(`Invocation failed: ${error}. Decoded: ${decodedError}`), R.merge(result, {\n      error,\n      decodedError\n    }))\n  }\n\n  const decodedError = await this.contractDecodeDataAPI('string', error)\n  throw Object.assign(Error(`Invocation failed: ${error}. Decoded: ${decodedError}`), R.merge(result, {\n    error,\n    decodedError\n  }))\n}\n\n/**\n * Encode call data for contract call\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/contract\n * @category async\n * @param {String} source Contract source code\n * @param {String} name Name of function to call\n * @param {Array} args Argument's for call\n * @param {Object} [options={}]  Options\n * @param {Object} [options.filesystem={}] Contract external namespaces map\n * @param {Object} [options.backend='fate'] Compiler backend\n * @return {Promise<String>}\n */\nasync function contractEncodeCall (source, name, args, options) {\n  return this.contractEncodeCallDataAPI(source, name, args, options)\n}\n\n/**\n * Decode contract call result data\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/contract\n * @category async\n * @param {String} source - source code\n * @param {String } fn - function name\n * @param {String} callValue - result call data\n * @param {String} callResult - result status\n * @param {Object} [options={}]  Options\n * @param {Object} [options.filesystem={}] Contract external namespaces map\n * @return {Promise<String>} Result object\n * @example\n * const decodedData = await client.contractDecodeData(SourceCode ,'functionName', 'cb_asdasdasd...', 'ok|revert')lt\n */\nasync function contractDecodeData (source, fn, callValue, callResult, options) {\n  return this.contractDecodeCallResultAPI(source, fn, callValue, callResult, options)\n}\n\n/**\n * Static contract call(using dry-run)\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/contract\n * @category async\n * @param {String} source Contract source code\n * @param {String} address Contract address\n * @param {String} name Name of function to call\n * @param {Array|String} args Argument's or callData for call/deploy transaction\n * @param {Object} [options={}]  Options\n * @param {String} [options.top] Block hash on which you want to call contract\n * @param {String} [options.bytecode] Block hash on which you want to call contract\n * @param {Object} [options.options]  Transaction options (fee, ttl, gas, amount, deposit)\n * @param {Object} [options.options.filesystem] Contract external namespaces map\n * @return {Promise<Object>} Result object\n * @example\n * const callResult = await client.contractCallStatic(source, address, fnName, args = [], { top, options = {} })\n * {\n *   result: TX_DATA,\n *   decode: (type) => Decode call result\n * }\n */\nasync function contractCallStatic (source, address, name, args = [], { top, options = {}, bytecode } = {}) {\n  const opt = R.merge(this.Ae.defaults, options)\n  const callerId = opt.onAccount\n    ? await this.address(opt)\n    : await this.address().catch(e => opt.dryRunAccount.pub)\n\n  // Prepare call-data\n  const callData = Array.isArray(args) ? await this.contractEncodeCall(source, name, args, opt) : args\n\n  // Get block hash by height\n  if (top && !isNaN(top)) {\n    top = (await this.getKeyBlock(top)).hash\n  }\n  // Prepare nonce\n  const nonce = top ? (await this.getAccount(callerId, { hash: top })).nonce + 1 : undefined\n  if (name === 'init') {\n    // Prepare deploy transaction\n    const { tx } = await this.contractCreateTx(R.merge(opt, {\n      callData,\n      code: bytecode,\n      ownerId: callerId,\n      nonce\n    }))\n    return this.dryRunContractTx(tx, callerId, source, name, { ...opt, top })\n  } else {\n    // Prepare `call` transaction\n    const tx = await this.contractCallTx(R.merge(opt, {\n      callerId,\n      contractId: address,\n      callData,\n      nonce\n    }))\n    return this.dryRunContractTx(tx, callerId, source, name, { ...opt, top })\n  }\n}\n\nasync function dryRunContractTx (tx, callerId, source, name, opt = {}) {\n  const { top } = opt\n  // Resolve Account for Dry-run\n  const dryRunAmount = BigNumber(opt.dryRunAccount.amount).gt(BigNumber(opt.amount || 0)) ? opt.dryRunAccount.amount : opt.amount\n  const dryRunAccount = {\n    amount: dryRunAmount,\n    pubKey: callerId\n  }\n  // Dry-run\n  const [{ result: status, callObj, reason }] = (await this.txDryRun([tx], [dryRunAccount], top)).results\n\n  // Process response\n  if (status !== 'ok') throw new Error('Dry run error, ' + reason)\n  const { returnType, returnValue } = callObj\n  if (returnType !== 'ok') {\n    await this.handleCallError(callObj)\n  }\n  return {\n    result: callObj,\n    decode: () => this.contractDecodeData(source, name, returnValue, returnType, opt)\n  }\n}\n\n/**\n * Call contract function\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/contract\n * @category async\n * @param {String} source Contract source code\n * @param {String} address Contract address\n * @param {String} name Name of function to call\n * @param {Array|String} argsOrCallData Argument's array or callData for call function\n * @param {Object} [options={}] Transaction options (fee, ttl, gas, amount, deposit)\n * @param {Object} [options.filesystem={}] Contract external namespaces map* @return {Promise<Object>} Result object\n * @example\n * const callResult = await client.contractCall(source, address, fnName, args = [], options)\n * {\n *   hash: TX_HASH,\n *   result: TX_DATA,\n *   decode: (type) => Decode call result\n * }\n */\nasync function contractCall (source, address, name, argsOrCallData = [], options = {}) {\n  const opt = R.merge(this.Ae.defaults, options)\n\n  const tx = await this.contractCallTx(R.merge(opt, {\n    callerId: await this.address(opt),\n    contractId: address,\n    callData: Array.isArray(argsOrCallData) ? await this.contractEncodeCall(source, name, argsOrCallData, opt) : argsOrCallData\n  }))\n\n  return sendAndProcess(tx, opt).call(\n    this,\n    ({ hash, rawTx, result, txData }) => ({\n      hash,\n      rawTx,\n      result,\n      txData,\n      decode: () => result ? this.contractDecodeData(source, name, result.returnValue, result.returnType, opt) : {}\n    })\n  )\n}\n\n/**\n * Deploy contract to the node\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/contract\n * @category async\n * @param {String} code Compiled contract\n * @param {String} source Contract source code\n * @param {Array|String} initState Arguments of contract constructor(init) function. Can be array of arguments or callData string\n * @param {Object} [options={}] Transaction options (fee, ttl, gas, amount, deposit)\n * @param {Object} [options.filesystem={}] Contract external namespaces map* @return {Promise<Object>} Result object\n * @return {Promise<Object>} Result object\n * @example\n * const deployed = await client.contractDeploy(bytecode, source, init = [], options)\n * {\n *   owner: OWNER_PUB_KEY,\n *   transaction: TX_HASH,\n *   address: CONTRACT_ADDRESS,\n *   createdAt: Date,\n *   result: DEPLOY_TX_DATA,\n *   call: (fnName, args = [], options) => Call contract function,\n *   callStatic: (fnName, args = [], options) => Static all contract function\n * }\n */\nasync function contractDeploy (code, source, initState = [], options = {}) {\n  const opt = R.merge(this.Ae.defaults, options)\n  const callData = Array.isArray(initState) ? await this.contractEncodeCall(source, 'init', initState, opt) : initState\n  const ownerId = await this.address(opt)\n\n  const { tx, contractId } = await this.contractCreateTx(R.merge(opt, {\n    callData,\n    code,\n    ownerId\n  }))\n\n  return sendAndProcess(tx, opt).call(\n    this,\n    ({ hash, rawTx, result, txData }) => Object.freeze({\n      result,\n      owner: ownerId,\n      transaction: hash,\n      rawTx,\n      txData,\n      address: contractId,\n      call: async (name, args = [], options = {}) => this.contractCall(source, contractId, name, args, R.merge(opt, options)),\n      callStatic: async (name, args = [], options = {}) => this.contractCallStatic(source, contractId, name, args, {\n        ...options,\n        options: { onAccount: opt.onAccount, ...R.merge(opt, options.options) }\n      }),\n      createdAt: new Date()\n    })\n  )\n}\n\n/**\n * Compile contract source code\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/contract\n * @category async\n * @param {String} source Contract sourece code\n * @param {Object} [options={}] Transaction options (fee, ttl, gas, amount, deposit)\n * @param {Object} [options.filesystem={}] Contract external namespaces map* @return {Promise<Object>} Result object\n * @param {Object} [options.backend='aevm'] Contract backend version (aevm|fate)\n * @return {Promise<Object>} Result object\n * @example\n * const compiled = await client.contractCompile(SOURCE_CODE)\n * {\n *   bytecode: CONTRACT_BYTE_CODE,\n *   deploy: (init = [], options = {}) => Deploy Contract,\n *   encodeCall: (fnName, args = []) => Prepare callData\n * }\n */\nasync function contractCompile (source, options = {}) {\n  const opt = R.merge(this.Ae.defaults, options)\n  const bytecode = await this.compileContractAPI(source, options)\n  return Object.freeze(Object.assign({\n    encodeCall: async (name, args) => this.contractEncodeCall(source, name, args, R.merge(opt, options)),\n    deploy: async (init, options = {}) => this.contractDeploy(bytecode, source, init, R.merge(opt, options)),\n    deployStatic: async (init, options = {}) => this.contractCallStatic(source, null, 'init', init, {\n      bytecode,\n      top: options.top,\n      options: R.merge(opt, options)\n    })\n  }, { bytecode }))\n}\n\n/**\n * Utility method to create a delegate signature for a contract\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/contract\n * @category async\n * @param {String[]} ids The list of id's to prepend\n * @param {Object} [opt={}] options\n * @param {{ onAccount: String | Object }} [opt={}] opt Options\n * @return {Promise<String>} Signature in hex representation\n */\nasync function delegateSignatureCommon (ids = [], opt = {}) {\n  return this.sign(\n    Buffer.concat(\n      [\n        Buffer.from(this.getNetworkId()),\n        decode(await this.address(opt)),\n        ...ids.map(e => decode(e))\n      ]\n    ),\n    opt\n  ).then(s => Buffer.from(s).toString('hex'))\n}\n\n/**\n * Helper to generate a signature to delegate a name pre-claim to a contract.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/contract\n * @category async\n * @param {String} contractId Contract Id\n * @param {{ onAccount: String | Object }} [opt={}] opt Options\n * @return {Promise<String>} Signature for delegation\n */\nasync function delegateNamePreclaimSignature (contractId, opt = {}) {\n  return this.delegateSignatureCommon([contractId], opt)\n}\n\n/**\n * Helper to generate a signature to delegate a name claim to a contract.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/contract\n * @category async\n * @param {String} name The name being claimed\n * @param {String} contractId Contract Id\n * @param {{ onAccount: String | Object }} [opt={}] opt Options\n * @return {Promise<String>} Signature for delegation\n */\nasync function delegateNameClaimSignature (contractId, name, opt = {}) {\n  return this.delegateSignatureCommon([produceNameId(name), contractId], opt)\n}\n\n/**\n * Helper to generate a signature to delegate a name transfer to a contract.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/contract\n * @category async\n * @param {String} contractId Contract Id\n * @param {String} name The name being transferred\n * @param {{ onAccount: String | Object }} [opt={}] opt Options\n * @return {Promise<String>} Signature for delegation\n */\nasync function delegateNameTransferSignature (contractId, name, opt = {}) {\n  return this.delegateSignatureCommon([produceNameId(name), contractId], opt)\n}\n\n/**\n * Helper to generate a signature to delegate a name revoke to a contract.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/contract\n * @category async\n * @param {String} contractId Contract Id\n * @param {String} name The name being revoked\n * @param {{ onAccount: String | Object }} [opt={}] opt Options\n * @return {Promise<String>} Signature for delegation\n */\nasync function delegateNameRevokeSignature (contractId, name, opt = {}) {\n  return this.delegateSignatureCommon([produceNameId(name), contractId], opt)\n}\n\n/**\n * Helper to generate a signature to delegate a Oracle register to a contract.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/contract\n * @category async\n * @param {String} contractId Contract Id\n * @param {{ onAccount: String | Object }} [opt={}] opt Options\n * @return {Promise<String>} Signature for delegation\n */\nasync function delegateOracleRegisterSignature (contractId, opt = {}) {\n  return this.delegateSignatureCommon([contractId], opt)\n}\n\n/**\n * Helper to generate a signature to delegate a Oracle extend to a contract.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/contract\n * @category async\n * @param {String} contractId Contract Id\n * @param {{ onAccount: String | Object }} [opt={}] opt Options\n * @return {Promise<String>} Signature for delegation\n */\nasync function delegateOracleExtendSignature (contractId, opt = {}) {\n  return this.delegateSignatureCommon([contractId], opt)\n}\n\n/**\n * Helper to generate a signature to delegate a Oracle respond to a contract.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/contract\n * @category async\n * @param {String} queryId Oracle Query Id\n * @param {String} contractId Contract Id\n * @param {{ onAccount: String | Object }} [opt={}] opt Options\n * @return {Promise<String>} Signature for delegation\n */\nasync function delegateOracleRespondSignature (queryId, contractId, opt = {}) {\n  return this.delegateSignatureCommon([queryId, contractId], opt)\n}\n\n/**\n * Contract Stamp\n *\n * Provide contract implementation\n * {@link module:@aeternity/aepp-sdk/es/ae--Ae} clients.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/contract\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @return {Object} Contract instance\n * @example\n * import Transaction from '@aeternity/aepp-sdk/es/tx/tx\n * import MemoryAccount from '@aeternity/aepp-sdk/es/account/memory\n * import ChainNode from '@aeternity/aepp-sdk/es/chain/node\n * import ContractCompilerAPI from '@aeternity/aepp-sdk/es/contract/compiler\n * // or using bundle\n * import {\n *   Transaction,\n *   MemoryAccount,\n *   ChainNode,\n *   ContractCompilerAPI\n * } from '@aeternity/aepp-sdk\n *\n * const ContractWithAE = await Contract\n *    .compose(Transaction, MemoryAccount, ChainNode) // AE implementation\n *    .compose(ContractCompilerAPI) // ContractBase implementation\n * const client = await ContractWithAe({ url, internalUrl, compilerUrl, keypair, ... })\n *\n */\nexport const ContractAPI = Ae.compose(ContractBase, ContractACI, {\n  methods: {\n    contractCompile,\n    contractCallStatic,\n    contractDeploy,\n    contractCall,\n    contractEncodeCall,\n    contractDecodeData,\n    dryRunContractTx,\n    handleCallError,\n    // Delegation for contract\n    // AENS\n    delegateSignatureCommon,\n    delegateNamePreclaimSignature,\n    delegateNameClaimSignature,\n    delegateNameTransferSignature,\n    delegateNameRevokeSignature,\n    // Oracle\n    delegateOracleRegisterSignature,\n    delegateOracleExtendSignature,\n    delegateOracleRespondSignature\n  },\n  deepProps: {\n    Ae: {\n      defaults: {\n        deposit: DEPOSIT,\n        gasPrice: MIN_GAS_PRICE, // min gasPrice 1e9\n        amount: AMOUNT,\n        gas: GAS,\n        options: '',\n        dryRunAccount: DRY_RUN_ACCOUNT\n      }\n    }\n  }\n})\n\nexport const Contract = ContractAPI.compose(NodePool)\nexport const ContractWithCompiler = Contract.compose(ContractCompilerAPI)\nexport default ContractWithCompiler\n","import BigNumber from 'bignumber.js'\nimport { MAX_AUTH_FUN_GAS, TX_TYPE } from '../../tx/builder/schema'\nimport { buildTx } from '../../tx/builder'\nimport { hash } from '../../utils/crypto'\n\nexport const prepareGaParams = (ins) => async (authData, authFnName) => {\n  if (typeof authData !== 'object') throw new Error('AuthData must be an object')\n  if (authData.gas && BigNumber(authData.gas).gt(MAX_AUTH_FUN_GAS)) throw new Error(`the maximum gas value for ga authFun is ${MAX_AUTH_FUN_GAS}, got ${authData.gas}`)\n  const gas = authData.gas || MAX_AUTH_FUN_GAS\n  if (authData.callData) {\n    if (authData.callData.split('_')[0] !== 'cb') throw new Error('Auth data must be a string with \"cb\" prefix.')\n    return { authCallData: authData.callData, gas }\n  } else {\n    if (!authData.source || !authData.args) throw new Error('Auth data must contain source code and arguments.')\n    return { authCallData: await ins.contractEncodeCall(authData.source, authFnName, authData.args), gas }\n  }\n}\n\nexport const getContractAuthFan = (ins) => async (source, fnName) => {\n  const { bytecode } = await ins.contractCompile(source)\n\n  return { bytecode, authFun: hash(fnName) }\n}\n\nexport const wrapInEmptySignedTx = (rlp) => buildTx({ encodedTx: rlp, signatures: [] }, TX_TYPE.signed)\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Generalize Account module - routines to use generalize account\n *\n * @module @aeternity/aepp-sdk/es/contract/ga\n * @export GeneralizeAccount\n * @example import GeneralizeAccount from '@aeternity/aepp-sdk/es/contract/ga' (Using tree-shaking)\n * @example import { GeneralizeAccount } from '@aeternity/aepp-sdk' (Using bundle)\n */\nimport * as R from 'ramda'\n\nimport { ContractAPI } from '../../ae/contract'\nimport { TX_TYPE } from '../../tx/builder/schema'\nimport { buildTx } from '../../tx/builder'\nimport { getContractAuthFan, prepareGaParams, wrapInEmptySignedTx } from './helpers'\nimport { assertedType, decodeBase64Check } from '../../utils/crypto'\n\n/**\n * GeneralizeAccount Stamp\n *\n * Provide Generalize Account implementation\n * {@link module:@aeternity/aepp-sdk/es/contract/ga} clients.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/contract/ga\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @return {Object} GeneralizeAccount instance\n * @example\n * const authContract = ``\n * await client.createGeneralizeAccount(authFnName, authContract, [...authFnArguments]\n * // Make spend using GA\n * const callData = 'cb_...' // encoded call data for auth contract\n * await client.spend(10000, receiverPub, { authData: { callData } })\n * // or\n * await client.spend(10000, receiverPub, { authData: { source: authContract, args: [...authContractArgs] } }) // sdk will prepare callData itself\n */\nexport const GeneralizeAccount = ContractAPI.compose({\n  methods: {\n    createGeneralizeAccount,\n    createMetaTx,\n    isGA\n  }\n})\nexport default GeneralizeAccount\n\n/**\n * @alias module:@aeternity/aepp-sdk/es/contract/ga\n * @function\n * Check if account is GA account\n * @param {String} address - Account address\n * @return {Boolean}\n */\nasync function isGA (address) {\n  const { contractId } = await this.getAccount(address)\n  return !!contractId\n}\n\n/**\n * Convert current account to GA account\n * @alias module:@aeternity/aepp-sdk/es/contract/ga\n * @function\n * @param {String} authFnName - Authorization function name\n * @param {String} source - Auth contract source code\n * @param {Array} args - init arguments\n * @param {Object} options - Options\n * @return {Promise<Readonly<{result: *, owner: *, createdAt: Date, address, rawTx: *, transaction: *}>>}\n */\nasync function createGeneralizeAccount (authFnName, source, args, options = {}) {\n  const opt = R.merge(this.Ae.defaults, options)\n  const ownerId = await this.address(opt)\n\n  if (await this.isGA(ownerId)) throw new Error(`Account ${ownerId} is already GA`)\n\n  const { authFun, bytecode } = await getContractAuthFan(this)(source, authFnName)\n  const callData = await this.contractEncodeCall(source, 'init', args)\n\n  const { tx, contractId } = await this.gaAttachTx(R.merge(opt, { ownerId, code: bytecode, callData, authFun }))\n\n  const { hash, rawTx } = await this.send(tx, opt)\n\n  return Object.freeze({\n    owner: ownerId,\n    transaction: hash,\n    rawTx,\n    gaContractId: contractId\n  })\n}\n\n/**\n * Create a metaTx transaction\n * @alias module:@aeternity/aepp-sdk/es/contract/ga\n * @function\n * @param {String} rawTransaction Inner transaction\n * @param {Object} authData Object with gaMeta params\n * @param {String} authFnName - Authorization function name\n * @param {Object} options - Options\n * @return {String}\n */\nasync function createMetaTx (rawTransaction, authData, authFnName, options = {}) {\n  if (!authData) throw new Error('authData is required')\n  // Check if authData is callData or if it's an object prepare a callData from source and args\n  const { authCallData, gas } = await prepareGaParams(this)(authData, authFnName)\n  const opt = R.merge(this.Ae.defaults, options)\n  // Get transaction rlp binary\n  const rlpBinaryTx = decodeBase64Check(assertedType(rawTransaction, 'tx'))\n  // Wrap in SIGNED tx with empty signatures\n  const { rlpEncoded } = wrapInEmptySignedTx(rlpBinaryTx)\n  // Get abi\n  const { abiVersion } = await this.getVmVersion(TX_TYPE.contractCall)\n  // Prepare params for META tx\n  const params = { ...opt, tx: rlpEncoded, gaId: await this.address(opt), abiVersion: abiVersion, authData: authCallData, gas }\n  // Calculate fee, get absolute ttl (ttl + height), get account nonce\n  const { fee, ttl } = await this.prepareTxParams(TX_TYPE.gaMeta, params)\n  // Build META tx\n  const { rlpEncoded: metaTxRlp } = buildTx({ ...params, fee: `${fee}`, ttl }, TX_TYPE.gaMeta)\n  // Wrap in empty signed tx\n  const { tx } = wrapInEmptySignedTx(metaTxRlp)\n  // Send tx to the chain\n  return tx\n}\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * RPC client module\n * @module @aeternity/aepp-sdk/es/rpc/client\n * @export RpcClient\n * @example import RpcClient from '@aeternity/aepp-sdk/es/rpc/client'\n */\n\nimport stampit from '@stamp/it'\nimport AsyncInit from '../utils/async-init'\nimport * as R from 'ramda'\n\nfunction post (method) {\n  return function (...params) {\n    return this.post(method, params)\n  }\n}\n\n/**\n * RPC client Stamp\n * @function\n * @alias module:@aeternity/aepp-sdk/es/rpc/client\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @param {Object} [options.parent=window.parent] - IFrame parent window\n * @param {Object} [options.self=window] - IFrame window\n * @return {Object} RPC client\n * @example RpcClient()\n */\nconst RpcClient = stampit(AsyncInit, {\n  async init ({ parent = window.parent, self = window }, { stamp }) {\n    if (parent === self) {\n      throw new Error('rpc client: Can\\'t send messages to itself')\n    }\n\n    let sequence = 0\n    const callbacks = {}\n\n    function receive ({ data }) {\n      if (typeof data !== 'object' || data.type === 'webpackOk') {\n        return\n      }\n\n      const { result: { resolve, reject }, id } = data\n\n      if (callbacks[id]) {\n        if (resolve !== undefined) {\n          callbacks[id].resolve(resolve)\n        } else if (reject) {\n          callbacks[id].reject(reject)\n        }\n        delete callbacks[id]\n      }\n    }\n\n    this.post = (method, params) => {\n      const ret = new Promise((resolve, reject) => {\n        callbacks[sequence] = { resolve, reject }\n      })\n\n      parent.postMessage({ jsonrpc: '2.0', id: sequence, method, params, session: this.session }, '*')\n      sequence++\n\n      return ret\n    }\n\n    const handler = receive\n    self.addEventListener('message', handler, false)\n    this.destroyClient = () =>\n      self.removeEventListener('message', handler, false)\n\n    this.session = await this.post('hello')\n  },\n  props: {\n    handler: null\n  },\n  methods: {},\n  composers ({ stamp, composables }) {\n    // Combine Ae and Contract methods\n    const methods = [\n      ...(R.path(['compose', 'deepConfiguration', 'Ae', 'methods'], stamp) || []),\n      ...(R.path(['compose', 'deepConfiguration', 'Contract', 'methods'], stamp) || [])\n    ]\n    const rpcMethods = R.fromPairs(methods.map(m => [m, post(m)]))\n    if (stamp.compose.methods) {\n      // remove signTransaction and getNetworkId from AEPP instance, let's go it through RPC\n      ['signTransaction', 'getNetworkId'].forEach(m => delete stamp.compose.methods[m])\n    }\n    stamp.compose.methods = Object.assign(rpcMethods, stamp.compose.methods)\n  }\n})\n\nexport default RpcClient\n","import * as R from 'ramda'\n\nconst asEnum = (array) => R.zipObj(array, array)\n\nexport const VERSION = 1\n\nexport const MESSAGE_DIRECTION = asEnum(['to_waellet', 'to_aepp'])\n\nexport const WALLET_TYPE = asEnum([\n  'window',\n  'extension'\n])\n\nexport const NOTIFICATIONS = asEnum([\n  'readyToConnect',\n  'closeConnection',\n  'updateNetwork',\n  'updateAddress'\n])\n\nexport const REQUESTS = asEnum([\n  'connect',\n  'subscribeAddress',\n  'sign',\n  'address',\n  'signMessage'\n])\n\nexport const SUBSCRIPTION_VALUES = asEnum([\n  'current',\n  'connected'\n])\n\nexport const SUBSCRIPTION_TYPES = asEnum([\n  'subscribe',\n  'unsubscribe'\n])\n\nexport const METHODS = {\n  wallet: {\n    [NOTIFICATIONS.readyToConnect]: 'connection.announcePresence',\n    [NOTIFICATIONS.updateAddress]: 'address.update'\n  },\n  aepp: {\n    [REQUESTS.address]: 'address.get',\n    [REQUESTS.connect]: 'connection.open',\n    [REQUESTS.sign]: 'transaction.sign',\n    [REQUESTS.signMessage]: 'message.sign',\n    [REQUESTS.subscribeAddress]: 'address.subscribe'\n  },\n  [NOTIFICATIONS.updateNetwork]: 'networkId.update',\n  [NOTIFICATIONS.closeConnection]: 'connection.close'\n}\n\nexport const RPC_STATUS = {\n  CONNECTED: 'CONNECTED',\n  DISCONNECTED: 'DISCONNECTED',\n  CONNECTION_REJECTED: 'CONNECTION_REJECTED',\n  WAITING_FOR_CONNECTION_APPROVE: 'WAITING_FOR_CONNECTION_APPROVE',\n  WAITING_FOR_CONNECTION_REQUEST: 'WAITING_FOR_CONNECTION_REQUEST',\n  WAITING_FOR_SUBSCRIPTION: 'WAITING_FOR_SUBSCRIPTION'\n}\n\nexport const ERRORS = {\n  broadcastFailde: (error = {}) => ({\n    code: 3,\n    data: error,\n    message: 'Broadcast failed'\n  }),\n  invalidTransaction: (error = {}) => ({\n    code: 2,\n    data: error,\n    message: 'Invalid transaction'\n  }),\n  rejectedByUser: (error = {}) => ({\n    code: 4,\n    data: error,\n    message: 'Operation rejected by user'\n  }),\n  connectionDeny: (error = {}) => ({\n    code: 9,\n    data: error,\n    message: 'Wallet deny your connection request'\n  }),\n  notAuthorize: (error = {}) => ({\n    code: 10,\n    data: error,\n    message: 'You are not connected to the wallet'\n  }),\n  unsupportedProtocol: (error = {}) => ({\n    code: 5,\n    data: error,\n    message: 'Unsupported Protocol Version'\n  }),\n  unsupportedNetwork: (error = {}) => ({\n    code: 8,\n    data: error,\n    message: 'Unsupported Network'\n  })\n}\n","/**\n * Browser helper functions\n */\n/* eslint-disable no-undef */\nexport const getBrowserAPI = (force = false) => {\n  if (chrome === Object(chrome) && chrome.runtime) return chrome\n  if (browser === Object(browser) && browser.runtime) return browser\n  if (!force) throw new Error('Browser is not detected')\n  return {}\n}\n\nexport const isInIframe = () => window !== window.parent\n\nexport const getWindow = () => {\n  if (!window) throw new Error('Browser is not detected')\n  return window\n}\n\n/**\n * RPC helper functions\n */\nexport const sendMessage = (connection) => {\n  let messageId = 0\n\n  return ({ id, method, params, result, error }, isNotificationOrResponse = false) => {\n    // Increment id for each request\n    isNotificationOrResponse || (messageId += 1)\n    id = isNotificationOrResponse ? (id || null) : messageId\n    const msgData = params\n      ? { params }\n      : result\n        ? { result }\n        : { error }\n    connection.sendMessage({\n      jsonrpc: '2.0',\n      ...id ? { id } : {},\n      method,\n      ...msgData\n    })\n    return id\n  }\n}\n\nexport const receive = (handler) => (msg, origin) => {\n  if (!msg || !msg.jsonrpc || msg.jsonrpc !== '2.0' || !msg.method) {\n    console.warn('Receive invalid message', msg)\n    return\n  }\n  handler(msg, origin)\n}\n\nexport const getHandler = (schema, msg) => {\n  const handler = schema[msg.method]\n  if (!handler || typeof handler !== 'function') {\n    console.log(`Unknown message method ${msg.method}`)\n    return () => () => true\n  }\n  return handler\n}\n\nexport const message = (method, params = {}) => ({ method, params })\n\nexport const responseMessage = (id, method, { error, result } = {}) => ({ id, method, ...(error ? { error } : { result }) })\n\nexport const sendResponseMessage = (client) => (id, method, data) => client.sendMessage(responseMessage(id, method, data), true)\n\nexport const voidFn = () => undefined\n","/**\n * RPC client helpers\n *\n * @module @aeternity/aepp-sdk/es/utils/aepp-wallet-communication/rpc/rpc-client\n * @export { RpcClient, RpcClients }\n * @example import RpcClient from '@aeternity/aepp-sdk/es/utils/aepp-wallet-communication/rpc/rpc-client'\n * @example import RpcClients from '@aeternity/aepp-sdk/es/utils/aepp-wallet-communication/rpc/rpc-client'\n */\nimport stampit from '@stamp/it'\n\nimport { RPC_STATUS, SUBSCRIPTION_TYPES } from '../schema'\nimport { receive, sendMessage } from '../helpers'\n\n/**\n * Contain functionality for managing multiple RPC clients (RpcClient stamp)\n * @alias module:@aeternity/aepp-sdk/es/utils/aepp-wallet-communication/rpc/rpc-client.RpcClients\n * @function\n * @rtype Stamp\n * @return {Object}\n */\nexport const RpcClients = stampit({\n  init () {\n    this.clients = new Map()\n  },\n  methods: {\n    /**\n     * Check if has client by id\n     * @function hasClient\n     * @instance\n     * @memberOf @aeternity/aepp-sdk/es/utils/aepp-wallet-communication/rpc/rpc-client\n     * @rtype (id: (String|Number)) => Boolean\n     * @param {(String|Number)} id Client ID\n     * @return {Boolean}\n     */\n    hasClient (id) {\n      return this.clients.has(id)\n    },\n    /**\n     * Add new client\n     * @function addClient\n     * @instance\n     * @rtype (id: (String|Number), connectionInfo: Object) => void\n     * @param {(String|Number)} id Client ID\n     * @param {Object} connectionData Object containing `connectionInfo` and `connection` objects\n     * @return {void}\n     */\n    addClient (id, connectionData) {\n      if (this.hasClient(id)) console.warn(`Wallet RpcClient with id ${id} already exist`)\n      this.clients.set(id, RpcClient({ id, ...connectionData }))\n    },\n    /**\n     * Get clien by id\n     * @function getClient\n     * @instance\n     * @rtype (id: (String|Number)) => Object\n     * @param {(String|Number)} id Client ID\n     * @return {Object} RpcClient\n     */\n    getClient (id) {\n      return this.clients.get(id)\n    },\n    /**\n     * Remove and disiconnect client by ID\n     * @function removeClient\n     * @instance\n     * @rtype (id: (String|Number), { forceConnectionClose: boolean = false }) => boolean\n     * @param {(String|Number)} id Client ID\n     * @param forceConnectionClose\n     * @return {Boolean}\n     */\n    removeClient (id, { forceConnectionClose = false } = {}) {\n      if (!this.hasClient(id)) throw new Error(`Wallet RpcClient with id ${id} do not exist`)\n      this.clients.get(id).disconnect(forceConnectionClose)\n      this.clients.delete(id)\n      return true\n    },\n    /**\n     * Update client info by id\n     * @function updateClientInfo\n     * @instance\n     * @rtype (id: (String|Number), info: Object) => void\n     * @param {(String|Number)} id Client ID\n     * @param {Object} info Info to update (will be merged with current info object)\n     * @return {void}\n     */\n    updateClientInfo (id, info) {\n      const client = this.getClient(id)\n      client.info = { ...client.info, ...info }\n      this.clients.set(id, client)\n    },\n    /**\n     * Send notification to all client passing condition\n     * @function sentNotificationByCondition\n     * @instance\n     * @rtype (msg: Object, condition: Function) => void\n     * @param {Object} msg Msg object\n     * @param {Function} condition Condition function of (client: RpcClient) => Boolean\n     * @return {void}\n     */\n    sentNotificationByCondition (msg, condition) {\n      if (typeof condition !== 'function') throw new Error('Condition argument must be a function which return boolean')\n      const clients = Array.from(\n        this.clients.values()\n      )\n        .filter(condition)\n      clients.forEach(client => client.sendMessage(msg, true))\n    }\n  }\n})\n\n/**\n * Contain functionality for using RPC conection\n * @alias module:@aeternity/aepp-sdk/es/utils/aepp-wallet-communication/rpc/rpc-client\n * @function\n * @rtype Stamp\n * @param {Object} param Init params object\n * @param {String} param.id Client id\n * @param {String} param.name Client name\n * @param {Object} param.connection Connection object\n * @param {Function[]} param.handlers Arrays with two function for handling messages ([ onMessage: Function, onDisconnect: Function])\n * @return {Object}\n */\nexport const RpcClient = stampit({\n  init ({ id, name, networkId, icons, connection, handlers: [onMessage, onDisconnect] }) {\n    this.id = id\n    this.connection = connection\n    this.info = { name, networkId, icons }\n    // {\n    //    [msg.id]: { resolve, reject }\n    // }\n    this.callbacks = {}\n    this.actions = {}\n    this.addressSubscription = []\n    this.accounts = {}\n\n    this.sendMessage = sendMessage(this.connection)\n    const disconnect = (aepp, connection) => {\n      this.disconnect(true)\n      typeof onDisconnect === 'function' && onDisconnect(connection, this)\n    }\n    connection.connect(receive(onMessage), disconnect)\n  },\n  methods: {\n    /**\n     * Check if is connected\n     * @function isConnected\n     * @instance\n     * @rtype () => Boolean\n     * @return {Boolean} is connected\n     */\n    isConnected () {\n      return this.info.status === RPC_STATUS.CONNECTED\n    },\n    /**\n     * Get selected account\n     * @function getCurrentAccount\n     * @instance\n     * @rtype ({ onAccount } = {}) => String\n     * @param {Object} options Options\n     * @return {String}\n     */\n    getCurrentAccount ({ onAccount } = {}) {\n      if (!this.accounts.current || !Object.keys(this.accounts.current).length) throw new Error('You do not subscribed for account.')\n      if (\n        onAccount &&\n        (!this.accounts.connected || !Object.keys(this.accounts.connected).length || !Object.keys(this.accounts.connected).includes(onAccount))\n      ) throw new Error(`You do not subscribed for connected account's or account ${onAccount} is not connected to the wallet.`)\n      return onAccount || Object.keys(this.accounts.current)[0]\n    },\n    /**\n     * Disconnect\n     * @function disconnect\n     * @instance\n     * @rtype () => void\n     * @return {void}\n     */\n    disconnect (forceConnectionClose = false) {\n      this.info.status = RPC_STATUS.DISCONNECTED\n      this.addressSubscription = []\n      this.accounts = {}\n      forceConnectionClose || this.connection.disconnect()\n    },\n    /**\n     * Update subsription\n     * @function updateSubscription\n     * @instance\n     * @rtype (type: String, value: String) => void\n     * @param {String} type Subscription type\n     * @param {String} value Subscription value\n     * @return {String[]}\n     */\n    updateSubscription (type, value) {\n      if (type === SUBSCRIPTION_TYPES.subscribe && !this.addressSubscription.includes(value)) {\n        this.addressSubscription.push(value)\n      }\n      if (type === SUBSCRIPTION_TYPES.unsubscribe && this.addressSubscription.includes(value)) {\n        this.addressSubscription = this.addressSubscription.filter(s => s !== value)\n      }\n      return this.addressSubscription\n    },\n    /**\n     * Add new action to actions\n     * @function addAction\n     * @instance\n     * @rtype (action: Object, [r: Function, j: Function]) => Object\n     * @param {Object} action Action object\n     * @param {Function[]} resolvers Array with two function [resolve, reject] action\n     * @return {Object}\n     */\n    addAction (action, [r, j]) {\n      const removeAction = ((ins) => (id) => delete ins[id])(this.actions)\n      if (Object.prototype.hasOwnProperty.call(this.callbacks, action.id)) throw new Error('Action for this request already exist')\n      this.actions[action.id] = {\n        ...action,\n        accept (...args) {\n          removeAction(action.id)\n          r(...args)\n        },\n        deny (...args) {\n          removeAction(action.id)\n          j(...args)\n        }\n      }\n      return this.actions[action.id]\n    },\n    /**\n     * Add new callback for request\n     * @function addCallback\n     * @instance\n     * @rtype (msgId: (String|Number)) => Object\n     * @param {(String|Number)} msgId Request message id\n     * @return {Promise} Promise which will be resolved after receiving response message\n     */\n    addCallback (msgId) {\n      if (Object.prototype.hasOwnProperty.call(this.callbacks, msgId)) throw new Error('Callback Already exist')\n      return new Promise((resolve, reject) => {\n        this.callbacks[msgId] = { resolve, reject }\n      })\n    },\n    /**\n     * Process response message\n     * @function processResponse\n     * @instance\n     * @rtype (msg: Object, transformResult: Function) => void\n     * @param {Object} msg Message object\n     * @param {Function=} transformResult Optional parser function for message\n     * @return {void}\n     */\n    processResponse ({ id, error, result }, transformResult) {\n      if (result) {\n        this.resolveCallback(id, typeof transformResult === 'function' ? transformResult({\n          id,\n          result\n        }) : [result])\n      } else if (error) {\n        this.rejectCallback(id, [error])\n      }\n    },\n    /**\n     * Resolve callback function\n     * Trigger Promise resolution from `addCallBack` function\n     * @function resolveCallback\n     * @instance\n     * @rtype (msgId: Number, args: Array) => void\n     * @param {Number} msgId Message Id\n     * @param {Array} args Arguments array\n     * @return {void}\n     */\n    resolveCallback (msgId, args = []) {\n      if (!this.callbacks[msgId]) throw new Error(`Can't find callback for this messageId ${msgId}`)\n      this.callbacks[msgId].resolve(...args)\n      delete this.callbacks[msgId]\n    },\n    /**\n     * Reject callback function\n     * Trigger Promise rejection from `addCallBack` function\n     * @function rejectCallback\n     * @instance\n     * @rtype (msgId: Number, args: Array) => void\n     * @param {Number} msgId Message Id\n     * @param {Array} args Arguments array\n     * @return {void}\n     */\n    rejectCallback (msgId, args = []) {\n      if (!this.callbacks[msgId]) throw new Error(`Can't find callback for this messageId ${msgId}`)\n      this.callbacks[msgId].reject(...args)\n      delete this.callbacks[msgId]\n    }\n  }\n})\n","/**\n * RPC handler for AEPP side\n *\n * @module @aeternity/aepp-sdk/es/utils/aepp-wallet-communication/rpc/aepp-rpc\n * @export AeppRpc\n * @example import ContentScriptBridge from '@aeternity/aepp-sdk/es/utils/aepp-wallet-communication/rpc/aepp-rpc'\n */\nimport * as R from 'ramda'\nimport { v4 as uuid } from 'uuid'\n\nimport Ae from '../../../ae'\nimport { RpcClient } from './rpc-clients'\nimport { getHandler, message, voidFn } from '../helpers'\nimport { METHODS, RPC_STATUS, VERSION } from '../schema'\n\nconst NOTIFICATIONS = {\n  [METHODS.wallet.updateAddress]: (instance) =>\n    ({ params }) => {\n      instance.rpcClient.accounts = params\n      instance.onAddressChange(params)\n    },\n  [METHODS.updateNetwork]: (instance) =>\n    (msg) => {\n      instance.rpcClient.info.networkId = msg.params.networkId\n      instance.onNetworkChange(msg.params)\n    },\n  [METHODS.closeConnection]: (instance) =>\n    (msg) => {\n      instance.disconnectWallet()\n      instance.onDisconnect(msg.params)\n    }\n}\n\nconst RESPONSES = {\n  [METHODS.aepp.address]: (instance) =>\n    (msg) => instance.rpcClient.processResponse(msg),\n  [METHODS.aepp.connect]: (instance) =>\n    (msg) => {\n      if (msg.result) instance.rpcClient.info.status = RPC_STATUS.CONNECTED\n      instance.rpcClient.processResponse(msg)\n    },\n  [METHODS.aepp.subscribeAddress]: (instance) =>\n    (msg) => {\n      if (\n        msg.result &&\n        Object.prototype.hasOwnProperty.call(msg.result, 'address')\n      ) instance.rpcClient.accounts = msg.result.address\n\n      instance.rpcClient.processResponse(msg, ({ id, result }) => [result])\n    },\n  [METHODS.aepp.sign]: (instance) =>\n    (msg) => {\n      instance.rpcClient.processResponse(msg, ({ id, result }) => [result.signedTransaction || result.transactionHash])\n    },\n  [METHODS.aepp.signMessage]: (instance) =>\n    (msg) => {\n      instance.rpcClient.processResponse(msg, ({ id, result }) => [result.signature])\n    }\n}\n\nconst REQUESTS = {}\n\nconst handleMessage = (instance) => async (msg) => {\n  if (!msg.id) {\n    return getHandler(NOTIFICATIONS, msg)(instance)(msg)\n  } else if (Object.prototype.hasOwnProperty.call(instance.rpcClient.callbacks, msg.id)) {\n    return getHandler(RESPONSES, msg)(instance)(msg)\n  } else {\n    return getHandler(REQUESTS, msg)(instance)(msg)\n  }\n}\n\n/**\n * Contain functionality for wallet interaction and connect it to sdk\n * @alias module:@aeternity/aepp-sdk/es/utils/aepp-wallet-communication/rpc/aepp-rpc\n * @function\n * @rtype Stamp\n * @param {Object} param Init params object\n * @param {String=} [param.name] Aepp name\n * @param {Function} onAddressChange Call-back function for update address event\n * @param {Function} onDisconnect Call-back function for disconnect event\n * @param {Function} onNetworkChange Call-back function for update network event\n * @param {Object} connection Wallet connection object\n * @return {Object}\n */\nexport const AeppRpc = Ae.compose({\n  async init ({ name, onAddressChange = voidFn, onDisconnect = voidFn, onNetworkChange = voidFn, connection }) {\n    const eventsHandlers = ['onDisconnect', 'onAddressChange', 'onNetworkChange']\n    this.connection = connection\n    this.name = name\n\n    if (connection) {\n      // Init RPCClient\n      await this.connectToWallet(connection)\n    }\n    // Event callbacks\n    this.onDisconnect = onDisconnect\n    this.onAddressChange = onAddressChange\n    this.onNetworkChange = onNetworkChange\n    // validation\n    eventsHandlers.forEach(event => {\n      if (typeof this[event] !== 'function') throw new Error(`Call-back for ${event} must be an function!`)\n    })\n  },\n  deepProps: { Ae: { defaults: { walletBroadcast: true } } },\n  methods: {\n    sign () {\n    },\n    /**\n     * Connect to wallet\n     * @function connectToWallet\n     * @instance\n     * @rtype (connection: Object) => void\n     * @param {Object} connection Wallet connection object\n     * @return {void}\n     */\n    async connectToWallet (connection) {\n      if (this.rpcClient && this.rpcClient.isConnected()) throw new Error('You are already connected to wallet ' + this.rpcClient)\n      this.rpcClient = RpcClient({\n        connection,\n        networkId: this.getNetworkId(),\n        ...connection.connectionInfo,\n        id: uuid(),\n        handlers: [handleMessage(this), this.onDisconnect]\n      })\n      return this.sendConnectRequest()\n    },\n    /**\n     * Disconnect from wallet\n     * @function disconnectWallet\n     * @instance\n     * @rtype (force: Boolean = false) => void\n     * @param {Boolean} sendDisconnect=false Force sending close connection message\n     * @return {void}\n     */\n    async disconnectWallet (sendDisconnect = true) {\n      if (!this.rpcClient || !this.rpcClient.connection.isConnected() || !this.rpcClient.isConnected()) throw new Error('You are not connected to Wallet')\n      sendDisconnect && this.rpcClient.sendMessage(message(METHODS.closeConnection, { reason: 'bye' }), true)\n      this.rpcClient.disconnect()\n      this.rpcClient = null\n    },\n    async address ({ onAccount } = {}) {\n      if (!this.rpcClient || !this.rpcClient.connection.isConnected() || !this.rpcClient.isConnected()) throw new Error('You are not connected to Wallet')\n      if (!this.rpcClient.getCurrentAccount()) throw new Error('You do not subscribed for account.')\n      return this.rpcClient.getCurrentAccount({ onAccount })\n    },\n    /**\n     * Ask address from wallet\n     * @function askAddresses\n     * @instance\n     * @rtype () => Promise\n     * @return {Promise} Address from wallet\n     */\n    async askAddresses () {\n      if (!this.rpcClient || !this.rpcClient.connection.isConnected() || !this.rpcClient.isConnected()) throw new Error('You are not connected to Wallet')\n      if (!this.rpcClient.getCurrentAccount()) throw new Error('You do not subscribed for account.')\n      return this.rpcClient.addCallback(\n        this.rpcClient.sendMessage(message(METHODS.aepp.address))\n      )\n    },\n    /**\n     * Subscribe for addresses from wallet\n     * @function subscribeAddress\n     * @instance\n     * @rtype (type: String, value: String) => Promise\n     * @param {String} type Type of subscription can be one of ['current'(just for selected account updates), 'connected(all accounts)']\n     * @param {String} value Subscription action('subscribe'|'unsubscribe')\n     * @return {Promise} Address from wallet\n     */\n    async subscribeAddress (type, value) {\n      if (!this.rpcClient || !this.rpcClient.connection.isConnected() || !this.rpcClient.isConnected()) throw new Error('You are not connected to Wallet')\n      return this.rpcClient.addCallback(\n        this.rpcClient.sendMessage(message(METHODS.aepp.subscribeAddress, { type, value }))\n      )\n    },\n    /**\n     * Overwriting of `signTransaction` AE method\n     * All sdk API which use it will be send notification to wallet and wait for callBack\n     * @function signTransaction\n     * @instance\n     * @rtype (tx: String, options = {}) => Promise\n     * @return {Promise<String>} Signed transaction\n     */\n    async signTransaction (tx, opt = {}) {\n      if (!this.rpcClient || !this.rpcClient.connection.isConnected() || !this.rpcClient.isConnected()) throw new Error('You are not connected to Wallet')\n      if (!this.rpcClient.getCurrentAccount()) throw new Error('You do not subscribed for account.')\n      return this.rpcClient.addCallback(\n        this.rpcClient.sendMessage(message(METHODS.aepp.sign, { ...opt, tx, returnSigned: true }))\n      )\n    },\n    /**\n     * Overwriting of `signMessage` AE method\n     * All sdk API which use it will be send notification to wallet and wait for callBack\n     * @function signMessage\n     * @instance\n     * @rtype (msg: String, options = {}) => Promise\n     * @return {Promise<String>} Signed transaction\n     */\n    async signMessage (msg, opt = {}) {\n      if (!this.rpcClient || !this.rpcClient.connection.isConnected() || !this.rpcClient.isConnected()) throw new Error('You are not connected to Wallet')\n      if (!this.rpcClient.getCurrentAccount()) throw new Error('You do not subscribed for account.')\n      return this.rpcClient.addCallback(\n        this.rpcClient.sendMessage(message(METHODS.aepp.signMessage, { ...opt, message: msg }))\n      )\n    },\n    /**\n     * Send connection request to wallet\n     * @function sendConnectRequest\n     * @instance\n     * @rtype () => Promise\n     * @return {Promise} Connection response\n     */\n    async sendConnectRequest () {\n      return this.rpcClient.addCallback(\n        this.rpcClient.sendMessage(message(METHODS.aepp.connect, {\n          name: this.name,\n          version: VERSION,\n          networkId: this.getNetworkId()\n        }))\n      )\n    },\n    /**\n     * Overwriting of `send` AE method\n     * All sdk API which use it will be send notification to wallet and wait for callBack\n     * This method will sign, broadcast and wait until transaction will be accepted using rpc communication with wallet\n     * @function send\n     * @instance\n     * @rtype (tx: String, options = {}) => Promise\n     * @param {String} tx\n     * @param {Object} [options={}]\n     * @param {Object} [options.walletBroadcast=true]\n     * @return {Promise<Object>} Transaction broadcast result\n     */\n    async send (tx, options = {}) {\n      if (!this.rpcClient || !this.rpcClient.connection.isConnected() || !this.rpcClient.isConnected()) throw new Error('You are not connected to Wallet')\n      if (!this.rpcClient.getCurrentAccount()) throw new Error('You do not subscribed for account.')\n      const opt = R.merge(this.Ae.defaults, options)\n      if (!opt.walletBroadcast) {\n        const signed = await this.signTransaction(tx, { onAccount: opt.onAccount })\n        return this.sendTransaction(signed, opt)\n      }\n      return this.rpcClient.addCallback(\n        this.rpcClient.sendMessage(message(METHODS.aepp.sign, { onAccount: opt.onAccount, tx, returnSigned: false }))\n      )\n    }\n  }\n})\n\nexport default AeppRpc\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Oracle module - routines to interact with the æternity oracle system\n *\n * The high-level description of the oracle system is\n * https://github.com/aeternity/protocol/blob/master/ORACLE.md in the protocol\n * repository.\n * @module @aeternity/aepp-sdk/es/ae/oracle\n * @export Oracle\n * @example import Oracle from '@aeternity/aepp-sdk/es/ae/oracle'\n */\n\nimport Ae from './'\nimport * as R from 'ramda'\nimport { decodeBase64Check } from '../utils/crypto'\nimport { ORACLE_TTL, QUERY_FEE, QUERY_TTL, RESPONSE_TTL } from '../tx/builder/schema'\n\n/**\n * Constructor for Oracle Object (helper object for using Oracle)\n * @alias module:@aeternity/aepp-sdk/es/ae/oracle\n * @instance\n * @function\n * @category async\n * @param {String} oracleId Oracle public key\n * @return {Promise<Object>} Oracle object\n */\nasync function getOracleObject (oracleId) {\n  const oracle = await this.getOracle(oracleId)\n  const { oracleQueries: queries } = await this.getOracleQueries(oracleId)\n  return {\n    ...oracle,\n    queries,\n    pollQueries: (onQuery, { interval } = {}) => this.pollForQueries(oracleId, onQuery, { interval }),\n    postQuery: (query, options) => this.postQueryToOracle(oracleId, query, options),\n    respondToQuery: (queryId, response, options) => this.respondToQuery(oracleId, queryId, response, options),\n    extendOracle: (oracleTtl, options) => this.extendOracleTtl(oracleId, oracleTtl, options),\n    getQuery: async (queryId) => {\n      return getQueryObject.bind(this)(oracleId, queryId)\n    }\n  }\n}\n\n/**\n * Poll for oracle queries\n * @alias module:@aeternity/aepp-sdk/es/ae/oracle\n * @instance\n * @function\n * @category async\n * @param {String} oracleId Oracle public key\n * @param {Function} onQuery OnQuery callback\n * @param {Object} [options] Options object\n * @param {Number} [options.interval] Poll interval(default: 5000)\n * @return {Function} stopPolling - Stop polling function\n */\nasync function pollForQueries (oracleId, onQuery, { interval = 5000 } = {}) {\n  const queries = (await this.getOracleQueries(oracleId)).oracleQueries || []\n  let quriesIds = queries.map(q => q.id)\n  await onQuery(queries)\n\n  async function pollQueries () {\n    const { oracleQueries: q } = await this.getOracleQueries(oracleId)\n    const newQueries = q.filter(({ id }) => !quriesIds.includes(id))\n    if (newQueries.length) {\n      quriesIds = [...quriesIds, ...newQueries.map(a => a.id)]\n      onQuery(newQueries)\n    }\n  }\n  const intervalId = setInterval(pollQueries.bind(this), interval)\n  return () => clearInterval(intervalId)\n}\n\n/**\n * Constructor for OracleQuery Object (helper object for using OracleQuery)\n * @alias module:@aeternity/aepp-sdk/es/ae/oracle\n * @instance\n * @function\n * @category async\n * @param {String} oracleId Oracle public key\n * @param {String} queryId Oracle Query id\n * @return {Promise<Object>} OracleQuery object\n */\nasync function getQueryObject (oracleId, queryId) {\n  const q = await this.getOracleQuery(oracleId, queryId)\n  return {\n    ...q,\n    decodedQuery: decodeBase64Check(q.query.slice(3)).toString(),\n    decodedResponse: decodeBase64Check(q.response.slice(3)).toString(),\n    respond: (response, options) => this.respondToQuery(oracleId, queryId, response, options),\n    pollForResponse: ({ attempts, interval }) => this.pollForQueryResponse(oracleId, queryId, { attempts, interval }),\n    decode: (data) => decodeBase64Check(data.slice(3))\n  }\n}\n\n/**\n * Poll for oracle query response\n * @alias module:@aeternity/aepp-sdk/es/ae/oracle\n * @instance\n * @function\n * @category async\n * @param {String} oracleId Oracle public key\n * @param {String} queryId Oracle Query id\n * @param {Object} [options] Options object\n * @param {Object} [options.attempts] Poll attempt's(default: 20)\n * @param {Object} [options.interval] Poll interval(default: 5000)\n * @return {Promise<Object>} OracleQuery object\n */\nexport async function pollForQueryResponse (oracleId, queryId, { attempts = 20, interval = 5000 } = {}) {\n  const emptyResponse = 'or_Xfbg4g=='\n  async function pause (duration) {\n    await new Promise(resolve => setTimeout(resolve, duration))\n  }\n  async function probe (left) {\n    const query = await this.getOracleQuery(oracleId, queryId)\n    if (query.response !== emptyResponse) {\n      return { response: query.response, decode: () => decodeBase64Check(query.response.slice(3)) }\n    }\n    if (left > 0) {\n      await pause(interval)\n      return probe.bind(this)(left - 1)\n    }\n    throw Error(`Giving up after ${attempts * interval}ms`)\n  }\n  return probe.bind(this)(attempts)\n}\n\n/**\n * Register oracle\n * @alias module:@aeternity/aepp-sdk/es/ae/oracle\n * @instance\n * @function\n * @category async\n * @param {String} queryFormat Format of query\n * @param {String} responseFormat Format of query response\n * @param {Object} [options={}] Options\n * @param {String|Number} [options.queryFee] queryFee Oracle query Fee\n * @param {Object} [options.oracleTtl] oracleTtl OracleTtl object {type: 'delta|block', value: 'number'}\n * @param {Number} [options.abiVersion] abiVersion Always 0 (do not use virtual machine)\n * @param {Number|String} [options.fee] fee Transaction fee\n * @param {Number|String} [options.ttl] Transaction time to leave\n * @return {Promise<Object>} Oracle object\n */\nasync function registerOracle (queryFormat, responseFormat, options = {}) {\n  const opt = R.merge(this.Ae.defaults, options) // Preset VmVersion for oracle\n  const accountId = await this.address(opt)\n\n  const oracleRegisterTx = await this.oracleRegisterTx(R.merge(opt, {\n    accountId,\n    queryFormat,\n    responseFormat\n  }))\n  return {\n    ...(await this.send(oracleRegisterTx, opt)),\n    ...(await this.getOracleObject(`ok_${accountId.slice(3)}`))\n  }\n}\n\n/**\n * Post query to oracle\n * @alias module:@aeternity/aepp-sdk/es/ae/oracle\n * @instance\n * @function\n * @category async\n * @param {String} oracleId Oracle public key\n * @param {String} query Oracle query object\n * @param {Object} [options={}]\n * @param {String|Number} [options.queryTtl] queryTtl Oracle query time to leave\n * @param {String|Number} [options.responseTtl] queryFee Oracle query response time to leave\n * @param {String|Number} [options.queryFee] queryFee Oracle query fee\n * @param {Number} [options.fee] fee Transaction fee\n * @param {Number} [options.ttl] Transaction time to leave\n * @return {Promise<Object>} Query object\n */\nasync function postQueryToOracle (oracleId, query, options = {}) {\n  const opt = R.merge(this.Ae.defaults, options)\n  const senderId = await this.address(opt)\n\n  const { tx: oracleRegisterTx, queryId } = await this.oraclePostQueryTx(R.merge(opt, {\n    oracleId,\n    senderId,\n    query\n  }))\n  return {\n    ...(await this.send(oracleRegisterTx, opt)),\n    ...(await (await this.getOracleObject(oracleId)).getQuery(queryId))\n  }\n}\n\n/**\n * Extend oracle ttl\n * @alias module:@aeternity/aepp-sdk/es/ae/oracle\n * @instance\n * @function\n * @category async\n * @param {String} oracleId Oracle public key\n * @param {String} oracleTtl Oracle time to leave for extend\n * @param {Object} [options={}]\n * @param {Number} [options.fee] fee Transaction fee\n * @param {Number} [options.ttl] Transaction time to leave\n * @return {Promise<Object>} Oracle object\n */\nasync function extendOracleTtl (oracleId, oracleTtl, options = {}) {\n  const opt = R.merge(this.Ae.defaults, options)\n  const callerId = await this.address(opt)\n\n  const oracleExtendTx = await this.oracleExtendTx(R.merge(opt, {\n    oracleId,\n    callerId,\n    oracleTtl\n  }))\n  return {\n    ...(await this.send(oracleExtendTx, opt)),\n    ...(await this.getOracleObject(oracleId))\n  }\n}\n\n/**\n * Extend oracle ttl\n * @alias module:@aeternity/aepp-sdk/es/ae/oracle\n * @instance\n * @function\n * @category async\n * @param {String} oracleId Oracle public key\n * @param {String} queryId Oracle query id\n * @param {String} response Oracle query response\n * @param {Object} [options={}]\n * @param {Number} [options.responseTtl] responseTtl Query response time to leave\n * @param {Number} [options.fee] Transaction fee\n * @param {Number} [options.ttl] Transaction time to leave\n * @return {Promise<Object>} Oracle object\n */\nasync function respondToQuery (oracleId, queryId, response, options = {}) {\n  const opt = R.merge(this.Ae.defaults, options)\n  const callerId = await this.address(opt)\n\n  const oracleRespondTx = await this.oracleRespondTx(R.merge(opt, {\n    oracleId,\n    queryId,\n    callerId,\n    response\n  }))\n  return {\n    ...(await this.send(oracleRespondTx, opt)),\n    ...(await this.getOracleObject(oracleId))\n  }\n}\n\n/**\n * Oracle Stamp\n *\n * Oracle provides oracle-system related methods atop\n * {@link module:@aeternity/aepp-sdk/es/ae--Ae} clients.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/oracle\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @return {Object} Oracle instance\n */\nconst Oracle = Ae.compose({\n  methods: {\n    registerOracle,\n    respondToQuery,\n    extendOracleTtl,\n    postQueryToOracle,\n    pollForQueryResponse,\n    pollForQueries,\n    getOracleObject,\n    getQueryObject\n  },\n  deepProps: {\n    Ae: {\n      defaults: {\n        queryFee: QUERY_FEE,\n        oracleTtl: ORACLE_TTL,\n        queryTtl: QUERY_TTL,\n        responseTtl: RESPONSE_TTL\n      }\n    }\n  }\n})\n\nexport default Oracle\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Aepp module\n * @module @aeternity/aepp-sdk/es/ae/aepp\n * @export Aepp\n * @example import Ae from '@aeternity/aepp-sdk/es/ae/aepp'\n */\n\nimport Ae from './'\nimport Aens from './aens'\nimport Rpc from '../rpc/client'\nimport { ContractAPI, ContractWithCompiler as Contract } from './contract'\nimport AeppRpc from '../utils/aepp-wallet-communication/rpc/aepp-rpc'\nimport Chain from '../chain/node'\nimport Tx from '../tx/tx'\nimport Oracle from './oracle'\nimport GeneralizeAccount from '../contract/ga'\n\n/**\n * Aepp Stamp\n *\n * Aepp provides Ae base functionality with Contract and Aens.\n * This stamp can be used only with Wallet, all Aepp method's going through RPC to Wallet.\n * {@link module:@aeternity/aepp-sdk/es/ae--Ae} clients.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/aepp\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @return {Object} Aepp instance\n */\nexport const Aepp = Ae.compose(ContractAPI, Aens, Oracle, GeneralizeAccount, Rpc)\nexport const RpcAepp = Ae.compose(Tx, Oracle, Contract, Aens, Chain, AeppRpc)\nexport default Aepp\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\nimport stampit from '@stamp/it'\nimport * as R from 'ramda'\nimport { v4 as uuid } from 'uuid'\n\nfunction createSession () {\n  const id = uuid()\n  this.rpcSessions[id] = { id }\n  return id\n}\n\nfunction hello () {\n  return Promise.resolve(this.createSession())\n}\n\nasync function receive ({ data, origin, source }) {\n  if (typeof data !== 'object' || data.jsonrpc !== '2.0') return\n\n  const { id, method, params, session } = data\n\n  function error () {\n    return Promise.reject(Error(`Error: No such method ${method}`))\n  }\n\n  R.call(\n    (this.rpcMethods[method] || error).bind(this),\n    { params, session: this.rpcSessions[session], origin }\n  ).then(result => {\n    const resolve = typeof result === 'object' && Object.prototype.toString.call(result) === '[object Object]'\n      ? Object.entries(result)\n        .filter(([key, value]) => typeof value !== 'function')\n        .reduce((p, [key, value]) => ({ ...p, [key]: value }), {})\n      : result\n    source.postMessage({ jsonrpc: '2.0', id, result: { resolve } }, '*')\n  }).catch(error => {\n    source.postMessage({ jsonrpc: '2.0', id, result: { reject: error.message } }, '*')\n  })\n}\n\nconst RpcServer = stampit({\n  init ({ self = window }) {\n    const handler = this.receive.bind(this)\n    self.addEventListener('message', handler, false)\n    this.destroyServer = () =>\n      self.removeEventListener('message', handler, false)\n  },\n  methods: {\n    receive,\n    createSession\n  },\n  props: {\n    rpcSessions: {}\n  },\n  deepProps: {\n    rpcMethods: { hello }\n  }\n})\n\nexport default RpcServer\n","/**\n * RPC handler for WAELLET side\n *\n * @module @aeternity/aepp-sdk/es/utils/aepp-wallet-communication/rpc/wallet-rpc\n * @export WalletRpc\n * @example import WalletRpc from '@aeternity/aepp-sdk/es/utils/aepp-wallet-communication/rpc/wallet-rpc'\n */\nimport Ae from '../../../ae'\nimport Accounts from '../../../accounts'\nimport Selector from '../../../account/selector'\n\nimport { RpcClients } from './rpc-clients'\nimport { getBrowserAPI, getHandler, message, sendResponseMessage } from '../helpers'\nimport { ERRORS, METHODS, RPC_STATUS, VERSION, WALLET_TYPE, SUBSCRIPTION_VALUES } from '../schema'\nimport { v4 as uuid } from 'uuid'\n\nconst rpcClients = RpcClients()\n\nconst NOTIFICATIONS = {\n  [METHODS.closeConnection]: (instance, { client }) =>\n    (msg) => {\n      client.disconnect(true)\n      instance.onDisconnect(msg.params, client)\n    }\n}\n\nconst RESPONSES = {}\n\nconst REQUESTS = {\n  // Store client info and prepare two fn for each client `connect` and `denyConnection`\n  // which automatically prepare and send response for that client\n  [METHODS.aepp.connect]: (instance, { client }) =>\n    ({ id, method, params: { name, networkId, version, icons } }, origin) => {\n      // Check if protocol and network is compatible with wallet\n      if (version !== VERSION) return sendResponseMessage(client)(id, method, { error: ERRORS.unsupportedProtocol() })\n      if (networkId !== instance.getNetworkId()) return sendResponseMessage(client)(id, method, { error: ERRORS.unsupportedNetwork() })\n\n      // Action methods\n      const accept = (id) => () => {\n        rpcClients.updateClientInfo(client.id, { status: RPC_STATUS.CONNECTED })\n        sendResponseMessage(client)(id, method, { result: instance.getWalletInfo() })\n      }\n      const deny = (id) => (error) => {\n        rpcClients.updateClientInfo(client.id, { status: RPC_STATUS.CONNECTION_REJECTED })\n        sendResponseMessage(client)(id, METHODS.aepp.connect, { error: ERRORS.connectionDeny(error) })\n      }\n\n      // Store new AEPP and wait for connection approve\n      rpcClients.updateClientInfo(client.id, {\n        status: RPC_STATUS.WAITING_FOR_CONNECTION_APPROVE,\n        name,\n        networkId,\n        icons,\n        version\n      })\n\n      // Call onConnection callBack to notice Wallet about new AEPP\n      instance.onConnection(\n        client,\n        client.addAction({\n          id,\n          method,\n          params: { name, networkId, version }\n        }, [accept(id), deny(id)]),\n        origin\n      )\n    },\n  [METHODS.aepp.subscribeAddress]: (instance, { client }) =>\n    ({ id, method, params: { type, value } }, origin) => {\n      // Authorization check\n      if (!client.isConnected()) return sendResponseMessage(client)(id, method, { error: ERRORS.notAuthorize() })\n\n      const accept = (id) =>\n        () => sendResponseMessage(client)(\n          id,\n          method,\n          {\n            result: {\n              subscription: client.updateSubscription(type, value),\n              address: instance.getAccounts()\n            }\n          })\n      const deny = (id) => (error) => sendResponseMessage(client)(id, method, { error: ERRORS.rejectedByUser(error) })\n\n      instance.onSubscription(\n        client,\n        client.addAction({ id, method, params: { type, value } }, [accept(id), deny(id)]),\n        origin\n      )\n    },\n  [METHODS.aepp.address]: (instance, { client }) =>\n    ({ id, method }, origin) => {\n      // Authorization check\n      if (!client.isConnected()) return sendResponseMessage(client)(id, method, { error: ERRORS.notAuthorize() })\n\n      const accept = (id) =>\n        () => sendResponseMessage(client)(\n          id,\n          method,\n          {\n            result: instance.addresses()\n          })\n      const deny = (id) => (error) => sendResponseMessage(client)(id, method, { error: ERRORS.rejectedByUser(error) })\n\n      instance.onAskAccounts(\n        client,\n        client.addAction({ id, method }, [accept(id), deny(id)]),\n        origin\n      )\n    },\n  [METHODS.aepp.sign]: (instance, { client }) =>\n    async ({ id, method, params: { tx, onAccount, returnSigned = false } }, origin) => {\n      // Authorization check\n      if (!client.isConnected()) return sendResponseMessage(client)(id, method, { error: ERRORS.notAuthorize() })\n      // NetworkId check\n      if (client.info.networkId !== instance.getNetworkId()) return sendResponseMessage(client)(id, method, { error: ERRORS.unsupportedNetwork() })\n\n      const accept = (id) => async (rawTx) => {\n        try {\n          const result = {\n            result: {\n              ...returnSigned\n                ? { signedTransaction: await instance.signTransaction(rawTx || tx, { onAccount }) }\n                : { transactionHash: await instance.send(rawTx || tx, { onAccount, verify: false }) }\n            }\n          }\n          sendResponseMessage(client)(\n            id,\n            method,\n            result\n          )\n        } catch (e) {\n          if (!returnSigned) {\n            // Validate transaction\n            const validationResult = await instance.unpackAndVerify(rawTx || tx)\n            if (validationResult.validation.length) return sendResponseMessage(client)(id, method, { error: ERRORS.invalidTransaction(validationResult) })\n            // Send broadcast failed error to aepp\n            sendResponseMessage(client)(id, method, { error: ERRORS.broadcastFailde(e.message) })\n          }\n          throw e\n        }\n      }\n\n      const deny = (id) => (error) => sendResponseMessage(client)(id, method, { error: ERRORS.rejectedByUser(error) })\n\n      instance.onSign(\n        client,\n        client.addAction({ id, method, params: { tx, returnSigned, onAccount } }, [accept(id), deny(id)]),\n        origin\n      )\n    },\n  [METHODS.aepp.signMessage]: (instance, { client }) =>\n    async ({ id, method, params: { message, onAccount } }, origin) => {\n      // Authorization check\n      if (!client.isConnected()) return sendResponseMessage(client)(id, method, { error: ERRORS.notAuthorize() })\n\n      const accept = (id) => async () => sendResponseMessage(client)(\n        id,\n        method,\n        {\n          result: { signature: await instance.signMessage(message, { onAccount, returnHex: true }) }\n        }\n      )\n\n      const deny = (id) => (error) => sendResponseMessage(client)(id, method, { error: ERRORS.rejectedByUser(error) })\n\n      instance.onMessageSign(\n        client,\n        client.addAction({ id, method, params: { message, onAccount } }, [accept(id), deny(id)]),\n        origin\n      )\n    }\n}\n\nconst handleMessage = (instance, id) => async (msg, origin) => {\n  const client = rpcClients.getClient(id)\n  if (!msg.id) {\n    return getHandler(NOTIFICATIONS, msg)(instance, { client })(msg, origin)\n  }\n  if (Object.prototype.hasOwnProperty.call(client.callbacks, msg.id)) {\n    return getHandler(RESPONSES, msg)(instance, { client })(msg, origin)\n  } else {\n    return getHandler(REQUESTS, msg)(instance, { client })(msg, origin)\n  }\n}\n\n/**\n * Contain functionality for aepp interaction and managing multiple aepps\n * @alias module:@aeternity/aepp-sdk/es/utils/aepp-wallet-communication/rpc/wallet-rpc\n * @function\n * @rtype Stamp\n * @param {Object} param Init params object\n * @param {String=} [param.name] Wallet name\n * @param {Function} onConnection Call-back function for incoming AEPP connection (Second argument contain function for accept/deny request)\n * @param {Function} onSubscription Call-back function for incoming AEPP account subscription (Second argument contain function for accept/deny request)\n * @param {Function} onSign Call-back function for incoming AEPP sign request (Second argument contain function for accept/deny request)\n * @param {Function} onAskAccounts Call-back function for incoming AEPP get address request (Second argument contain function for accept/deny request)\n * @param {Function} onMessageSign Call-back function for incoming AEPP sign message request (Second argument contain function for accept/deny request)\n * @param {Function} onDisconnect Call-back function for disconnect event\n * @return {Object}\n */\nexport const WalletRpc = Ae.compose(Accounts, Selector, {\n  init ({ name, onConnection, onSubscription, onSign, onDisconnect, onAskAccounts, onMessageSign }) {\n    const eventsHandlers = ['onConnection', 'onSubscription', 'onSign', 'onDisconnect', 'onMessageSign']\n    // CallBacks for events\n    this.onConnection = onConnection\n    this.onSubscription = onSubscription\n    this.onSign = onSign\n    this.onDisconnect = onDisconnect\n    this.onAskAccounts = onAskAccounts\n    this.onMessageSign = onMessageSign\n\n    eventsHandlers.forEach(event => {\n      if (typeof this[event] !== 'function') throw new Error(`Call-back for ${event} must be an function!`)\n    })\n    //\n    this.name = name\n    this.id = uuid()\n\n    const _selectAccount = this.selectAccount.bind(this)\n    const _addAccount = this.addAccount.bind(this)\n    const _selectNode = this.selectNode.bind(this)\n\n    // Overwrite AE methods\n    this.selectAccount = (address) => {\n      _selectAccount(address)\n      rpcClients.sentNotificationByCondition(\n        message(METHODS.wallet.updateAddress, this.getAccounts()),\n        (client) =>\n          (\n            client.addressSubscription.includes(SUBSCRIPTION_VALUES.current) ||\n            client.addressSubscription.includes(SUBSCRIPTION_VALUES.connected)\n          ) &&\n          client.isConnected())\n    }\n    this.addAccount = async (account, { select, meta } = {}) => {\n      await _addAccount(account, { select })\n      // Send notification 'update.address' to all Aepp which are subscribed for connected accounts\n      rpcClients.sentNotificationByCondition(\n        message(METHODS.wallet.updateAddress, this.getAccounts()),\n        (client) =>\n          client.isConnected() &&\n          (\n            client.addressSubscription.includes(SUBSCRIPTION_VALUES.connected) ||\n            (select && client.addressSubscription.includes(SUBSCRIPTION_VALUES.current))\n          )\n      )\n    }\n    this.selectNode = (name) => {\n      _selectNode(name)\n      // Send notification 'update.network' to all Aepp which connected\n      rpcClients.sentNotificationByCondition(\n        message(METHODS.updateNetwork, { networkId: this.getNetworkId() }),\n        (client) => client.isConnected()\n      )\n    }\n  },\n  methods: {\n    /**\n     * Get RpcClients object which contain all connected AEPPS\n     * @function getClients\n     * @instance\n     * @rtype () => Object\n     * @return {Object}\n     */\n    getClients () {\n      return rpcClients\n    },\n    /**\n     * Remove specific RpcClient by ID\n     * @function removeRpcClient\n     * @instance\n     * @rtype (id: string) => Boolean\n     * @param {String} id Client ID\n     * @param {Object} [opt = {}]\n     * @return {Object}\n     */\n    removeRpcClient (id, opt = { forceConnectionClose: false }) {\n      return rpcClients.removeClient(id, opt)\n    },\n    /**\n     * Add new AEPP connection\n     * @function addRpcClient\n     * @instance\n     * @rtype (clientConnection: Object) => Object\n     * @param {Object} clientConnection AEPP connection object\n     * @return {String} Client ID\n     */\n    addRpcClient (clientConnection) {\n      // @TODO  detect if aepp has some history based on origin????: if yes use this instance for connection\n      const id = uuid()\n      rpcClients.addClient(\n        id,\n        {\n          id,\n          info: { status: RPC_STATUS.WAITING_FOR_CONNECTION_REQUEST },\n          connection: clientConnection,\n          handlers: [handleMessage(this, id), this.onDisconnect]\n        }\n      )\n      return id\n    },\n    /**\n     * Share wallet info\n     * Send shareWalletInfo message to notify AEPP about wallet\n     * @function shareWalletInfo\n     * @instance\n     * @rtype (postFn: Function) => void\n     * @param {Function} postFn Send message function like `(msg) => void`\n     * @return {void}\n     */\n    shareWalletInfo (postFn) {\n      postFn({\n        jsonrpc: '2.0',\n        ...message(METHODS.wallet.readyToConnect, { ...this.getWalletInfo() })\n      })\n    },\n    /**\n     * Get Wallet info object\n     * @function getWalletInfo\n     * @instance\n     * @rtype () => Object\n     * @return {Object} Object with wallet information(id, name, network, ...)\n     */\n    getWalletInfo () {\n      const runtime = getBrowserAPI(true).runtime\n      return {\n        id: runtime && runtime.id ? runtime.id : this.id,\n        name: this.name,\n        networkId: this.getNetworkId(),\n        origin: window.location.origin,\n        type: runtime && runtime.id ? WALLET_TYPE.extension : WALLET_TYPE.window\n      }\n    },\n    /**\n     * Get Wallet accounts\n     * @function getAccounts\n     * @instance\n     * @rtype () => Object\n     * @return {Object} Object with accounts information({ connected: Object, current: Object })\n     */\n    getAccounts () {\n      return {\n        current: this.Selector.address ? { [this.Selector.address]: {} } : {},\n        connected: this.addresses()\n          .filter(a => a !== this.Selector.address)\n          .reduce((acc, a) => ({ ...acc, [a]: {} }), {})\n      }\n    }\n  }\n})\n\nexport default WalletRpc\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Wallet module\n * @module @aeternity/aepp-sdk/es/ae/wallet\n * @export Wallet\n * @example import Wallet from '@aeternity/aepp-sdk/es/ae/wallet'\n */\n\nimport * as R from 'ramda'\n\nimport Ae from './'\nimport Account from '../account'\nimport ContractBase from '../contract'\nimport Accounts from '../accounts'\nimport Chain from '../chain/node'\nimport Rpc from '../rpc/server'\nimport Tx from '../tx/tx'\nimport TxBase from '../tx'\nimport Contract from './contract'\nimport GeneralizeAccount from '../contract/ga'\nimport { WalletRpc } from '../utils/aepp-wallet-communication/rpc/wallet-rpc'\nimport Oracle from './oracle'\nimport Aens from './aens'\n\nconst contains = R.flip(R.contains)\nconst isTxMethod = contains(TxBase.compose.deepConfiguration.Ae.methods)\nconst isChainMethod = contains(Chain.compose.deepConfiguration.Ae.methods)\nconst isAccountMethod = contains(Account.compose.deepConfiguration.Ae.methods)\nconst isContractMethod = contains(ContractBase.compose.deepConfiguration.Contract.methods)\nconst handlers = [\n  { pred: isTxMethod, handler: 'onTx', error: 'Creating transaction [{}] rejected' },\n  { pred: isChainMethod, handler: 'onChain', error: 'Chain operation [{}] rejected' },\n  { pred: isAccountMethod, handler: 'onAccount', error: 'Account operation [{}] rejected' },\n  { pred: isContractMethod, handler: 'onContract', error: 'Contract operation [{}] rejected' }\n]\n\n/**\n * Confirm client connection attempt and associate new session with currently\n * selected account preset\n * @instance\n * @category async\n * @return {Promise<String>} Session ID\n */\nasync function hello () {\n  const id = await Rpc.compose.deepProperties.rpcMethods.hello.call(this)\n  this.rpcSessions[id].address = await this.address()\n  return Promise.resolve(id)\n}\n\nasync function rpc (method, params, session) {\n  const { handler, error } = R.find(({ pred }) => pred(method), handlers)\n\n  if (handler === undefined) {\n    return Promise.reject(Error(`Unknown method ${method}`))\n  } else if (await this[handler](method, params, session)) {\n    return this[method].apply(this, params)\n  } else {\n    return Promise.reject(Error(error.replace(/{}/, method)))\n  }\n}\n\nfunction onTx () {\n  console.log('Implement onTx!')\n  return Promise.resolve(false)\n}\n\nfunction onChain () {\n  console.log('Implement onChain!')\n  return Promise.resolve(false)\n}\n\nfunction onAccount () {\n  console.log('Implement onAccount!')\n  return Promise.resolve(false)\n}\n\nfunction onContract () {\n  console.log('Implement onContract!')\n  return Promise.resolve(false)\n}\n\nasync function rpcSign ({ params, session }) {\n  if (await this.onAccount('sign', params, session)) {\n    return this.signWith(session.address, params[0])\n  } else {\n    return Promise.reject(Error('Signing rejected'))\n  }\n}\n\nasync function rpcAddress ({ params, session }) {\n  if (await this.onAccount('address', params, session)) {\n    return Promise.resolve(session.address)\n  } else {\n    return Promise.reject(Error('Address rejected'))\n  }\n}\n\n/**\n * Wallet Stamp\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/wallet\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @param {String} options.url - Node instance to connect to\n * @param {Account[]} [options.accounts] - Accounts to initialize with\n * @param {String} [options.account] - Public key of account to preselect\n * @param {Function} [options.onTx] - Tx method protector function\n * @param {Function} [options.onChain] - Chain method protector function\n * @param {Function} [options.onAccount] - Account method protector function\n * @param {Function} [options.onContract] - Contract method protector function\n * @return {Object} Wallet instance\n * @example Wallet({\n  url: 'https://sdk-testnet.aepps.com/',\n  accounts: [MemoryAccount({keypair})],\n  address: keypair.publicKey,\n  onTx: confirm,\n  onChain: confirm,\n  onAccount: confirm\n  onContract: confirm\n})\n */\nexport const Wallet = Ae.compose(Accounts, Chain, Tx, Contract, GeneralizeAccount, Rpc, {\n  init ({ onTx = this.onTx, onChain = this.onChain, onAccount = this.onAccount, onContract = this.onContract }, { stamp }) {\n    this.onTx = onTx\n    this.onChain = onChain\n    this.onAccount = onAccount\n    this.onContract = onContract\n\n    // Combine `AE` methods with `Contract` and `AENS`\n    const methods = [\n      ...stamp.compose.deepConfiguration.Ae.methods,\n      ...stamp.compose.deepConfiguration.Contract.methods\n    ]\n    this.rpcMethods = Object.assign(R.fromPairs(methods.map(m => [m, ({ params, session }) => this.rpc(m, params, session)])), this.rpcMethods)\n  },\n  methods: { rpc, onTx, onChain, onAccount, onContract },\n  deepProps: {\n    rpcMethods: {\n      sign: rpcSign,\n      address: rpcAddress,\n      hello\n    }\n  }\n})\n\nexport const RpcWallet = Ae.compose(WalletRpc, Tx, Contract, Oracle, Aens, GeneralizeAccount, Chain)\n\nexport default Wallet\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\nimport { w3cwebsocket as W3CWebSocket } from 'websocket'\nimport { EventEmitter } from 'events'\nimport * as R from 'ramda'\nimport JSONBig from '../utils/json-big'\nimport { pascalToSnake } from '../utils/string'\nimport { awaitingConnection, awaitingReconnection, channelOpen } from './handlers'\n\n// Send ping message every 10 seconds\nconst PING_TIMEOUT_MS = 10000\n// Close connection if pong message is not received within 5 seconds\nconst PONG_TIMEOUT_MS = 5000\n\nconst options = new WeakMap()\nconst status = new WeakMap()\nconst state = new WeakMap()\nconst fsm = new WeakMap()\nconst websockets = new WeakMap()\nconst eventEmitters = new WeakMap()\nconst messageQueue = new WeakMap()\nconst messageQueueLocked = new WeakMap()\nconst actionQueue = new WeakMap()\nconst actionQueueLocked = new WeakMap()\nconst sequence = new WeakMap()\nconst channelId = new WeakMap()\nconst rpcCallbacks = new WeakMap()\nconst pingTimeoutId = new WeakMap()\nconst pongTimeoutId = new WeakMap()\nconst fsmId = new WeakMap()\n\nfunction channelURL (url, params) {\n  const paramString = R.join('&', R.values(R.mapObjIndexed((value, key) =>\n    `${pascalToSnake(key)}=${encodeURIComponent(value)}`, params)))\n\n  return `${url}?${paramString}`\n}\n\nfunction emit (channel, ...args) {\n  eventEmitters.get(channel).emit(...args)\n}\n\nfunction enterState (channel, nextState) {\n  if (!nextState) {\n    throw new Error('State Channels FSM entered unknown state')\n  }\n  fsm.set(channel, nextState)\n  if (nextState.handler.enter) {\n    nextState.handler.enter(channel)\n  }\n  dequeueAction(channel)\n}\n\nfunction changeStatus (channel, newStatus) {\n  const prevStatus = status.get(channel)\n  if (newStatus !== prevStatus) {\n    status.set(channel, newStatus)\n    emit(channel, 'statusChanged', newStatus)\n  }\n}\n\nfunction changeState (channel, newState) {\n  state.set(channel, newState)\n  emit(channel, 'stateChanged', newState)\n}\n\nfunction send (channel, message) {\n  websockets.get(channel).send(JSONBig.stringify(message))\n}\n\nfunction enqueueAction (channel, guard, action) {\n  actionQueue.set(channel, [\n    ...actionQueue.get(channel) || [],\n    { guard, action }\n  ])\n  dequeueAction(channel)\n}\n\nasync function dequeueAction (channel) {\n  const locked = actionQueueLocked.get(channel)\n  const queue = actionQueue.get(channel) || []\n  if (locked || !queue.length) {\n    return\n  }\n  const state = fsm.get(channel)\n  const index = queue.findIndex(item => item.guard(channel, state))\n  if (index === -1) {\n    return\n  }\n  actionQueue.set(channel, queue.filter((_, i) => index !== i))\n  actionQueueLocked.set(channel, true)\n  const nextState = await Promise.resolve(queue[index].action(channel, state))\n  actionQueueLocked.set(channel, false)\n  enterState(channel, nextState)\n}\n\nasync function handleMessage (channel, message) {\n  const { handler, state } = fsm.get(channel)\n  enterState(channel, await Promise.resolve(handler(channel, message, state)))\n}\n\nasync function dequeueMessage (channel) {\n  const queue = messageQueue.get(channel)\n  if (messageQueueLocked.get(channel) || !queue.length) {\n    return\n  }\n  const [message, ...remaining] = queue\n  messageQueue.set(channel, remaining || [])\n  messageQueueLocked.set(channel, true)\n  await handleMessage(channel, message)\n  messageQueueLocked.set(channel, false)\n  dequeueMessage(channel)\n}\n\nfunction ping (channel) {\n  clearTimeout(pingTimeoutId.get(channel))\n  clearTimeout(pongTimeoutId.get(channel))\n  pingTimeoutId.set(channel, setTimeout(() => {\n    send(channel, {\n      jsonrpc: '2.0',\n      method: 'channels.system',\n      params: {\n        action: 'ping'\n      }\n    })\n    pongTimeoutId.set(channel, setTimeout(() => {\n      disconnect(channel)\n      emit(channel, 'error', Error('Server pong timed out'))\n    }, PONG_TIMEOUT_MS))\n  }, PING_TIMEOUT_MS))\n}\n\nfunction onMessage (channel, data) {\n  const message = JSONBig.parse(data)\n  if (message.id) {\n    const callback = rpcCallbacks.get(channel).get(message.id)\n    try {\n      callback(message)\n    } finally {\n      rpcCallbacks.get(channel).delete(message.id)\n    }\n  } else if (message.method === 'channels.message') {\n    emit(channel, 'message', message.params.data.message)\n  } else if (message.method === 'channels.system.pong') {\n    if (\n      (message.params.channel_id === channelId.get(channel)) ||\n      // Skip channelId check if channelId is not known yet\n      (channelId.get(channel) == null)\n    ) {\n      ping(channel)\n    }\n  } else {\n    messageQueue.set(channel, [...(messageQueue.get(channel) || []), message])\n    dequeueMessage(channel)\n  }\n}\n\nfunction wrapCallErrorMessage (message) {\n  const [{ message: details } = {}] = message.error.data || []\n  if (details) {\n    return Error(`${message.error.message}: ${details}`)\n  }\n  return Error(message.error.message)\n}\n\nfunction call (channel, method, params) {\n  return new Promise((resolve, reject) => {\n    const id = sequence.set(channel, sequence.get(channel) + 1).get(channel)\n    rpcCallbacks.get(channel).set(id, (message) => {\n      if (message.result) return resolve(message.result)\n      if (message.error) return reject(wrapCallErrorMessage(message))\n    })\n    send(channel, { jsonrpc: '2.0', method, id, params })\n  })\n}\n\nfunction disconnect (channel) {\n  websockets.get(channel).close()\n  clearTimeout(pingTimeoutId.get(channel))\n  clearTimeout(pongTimeoutId.get(channel))\n}\n\nfunction WebSocket (url, callbacks) {\n  function fireOnce (target, key, fn) {\n    const once = R.once(fn)\n    const original = target[key]\n    target[key] = (...args) => {\n      once(...args)\n      if (typeof original === 'function') {\n        original(...args)\n      }\n    }\n  }\n\n  return new Promise((resolve, reject) => {\n    const ws = new W3CWebSocket(url)\n    Object.entries(callbacks).forEach(([key, callback]) => { ws[key] = callback })\n    fireOnce(ws, 'onopen', () => resolve(ws))\n    fireOnce(ws, 'onerror', (err) => reject(err))\n  })\n}\n\nasync function initialize (channel, channelOptions) {\n  const optionsKeys = ['sign', 'url']\n  const params = R.pickBy((_, key) => !optionsKeys.includes(key), channelOptions)\n  const { url } = channelOptions\n  const wsUrl = channelURL(url, { ...params, protocol: 'json-rpc' })\n\n  options.set(channel, channelOptions)\n  if (params.existingFsmId) {\n    fsm.set(channel, { handler: awaitingReconnection })\n  } else {\n    fsm.set(channel, { handler: awaitingConnection })\n  }\n  eventEmitters.set(channel, new EventEmitter())\n  sequence.set(channel, 0)\n  rpcCallbacks.set(channel, new Map())\n  changeStatus(channel, 'connecting')\n  const ws = await WebSocket(wsUrl, {\n    onopen: () => {\n      changeStatus(channel, 'connected')\n      if (params.reconnectTx) {\n        enterState(channel, { handler: channelOpen })\n        setTimeout(async () =>\n          changeState(channel, (await call(channel, 'channels.get.offchain_state', {})).signed_tx)\n        , 0)\n      }\n      ping(channel)\n    },\n    onclose: () => {\n      changeStatus(channel, 'disconnected')\n      clearTimeout(pingTimeoutId.get(channel))\n      clearTimeout(pongTimeoutId.get(channel))\n    },\n    onmessage: ({ data }) => onMessage(channel, data)\n  })\n  websockets.set(channel, ws)\n}\n\nexport {\n  initialize,\n  options,\n  status,\n  state,\n  eventEmitters,\n  emit,\n  changeStatus,\n  changeState,\n  send,\n  enqueueAction,\n  channelId,\n  call,\n  disconnect,\n  fsmId\n}\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\nimport { generateKeyPair, encodeContractAddress, encodeBase64Check } from '../utils/crypto'\nimport {\n  options,\n  changeStatus,\n  changeState,\n  call,\n  send,\n  emit,\n  channelId,\n  disconnect,\n  fsmId\n} from './internal'\nimport { unpackTx, buildTx } from '../tx/builder'\n\nfunction encodeRlpTx (rlpBinary) {\n  return `tx_${encodeBase64Check(rlpBinary)}`\n}\n\nasync function appendSignature (tx, signFn) {\n  const { signatures, encodedTx } = unpackTx(tx).tx\n  const result = await signFn(encodeRlpTx(encodedTx.rlpEncoded))\n  if (typeof result === 'string') {\n    const { tx: signedTx, txType } = unpackTx(result)\n    return encodeRlpTx(buildTx({\n      signatures: signatures.concat(signedTx.signatures),\n      encodedTx: signedTx.encodedTx.rlpEncoded\n    }, txType).rlpEncoded)\n  }\n  return result\n}\n\nfunction handleUnexpectedMessage (channel, message, state) {\n  if (state && state.reject) {\n    state.reject(Object.assign(\n      Error(`Unexpected message received:\\n\\n${JSON.stringify(message)}`),\n      { wsMessage: message }\n    ))\n  }\n  return { handler: channelOpen }\n}\n\nexport function awaitingConnection (channel, message, state) {\n  if (message.method === 'channels.info') {\n    if (['channel_accept', 'funding_created'].includes(message.params.data.event)) {\n      changeStatus(channel, {\n        channel_accept: 'accepted',\n        funding_created: 'halfSigned'\n      }[message.params.data.event])\n      return { handler: awaitingChannelCreateTx }\n    }\n    if (message.params.data.event === 'channel_reestablished') {\n      return { handler: awaitingOpenConfirmation }\n    }\n    if (message.params.data.event === 'fsm_up') {\n      fsmId.set(channel, message.params.data.fsm_id)\n      return { handler: awaitingConnection }\n    }\n    return { handler: awaitingConnection }\n  }\n  if (message.method === 'channels.error') {\n    emit(channel, 'error', new Error(message.payload.message))\n    return { handler: channelClosed }\n  }\n}\n\nexport async function awaitingReconnection (channel, message, state) {\n  if (message.method === 'channels.info') {\n    if (message.params.data.event === 'fsm_up') {\n      fsmId.set(channel, message.params.data.fsm_id)\n      changeState(channel, (await call(channel, 'channels.get.offchain_state', {})).signed_tx)\n      return { handler: channelOpen }\n    }\n  }\n  return handleUnexpectedMessage(channel, message, state)\n}\n\nexport async function awaitingChannelCreateTx (channel, message, state) {\n  const tag = {\n    initiator: 'initiator_sign',\n    responder: 'responder_sign'\n  }[options.get(channel).role]\n  if (message.method === `channels.sign.${tag}`) {\n    if (message.params.data.tx) {\n      const signedTx = await options.get(channel).sign(tag, message.params.data.tx)\n      send(channel, { jsonrpc: '2.0', method: `channels.${tag}`, params: { tx: signedTx } })\n      return { handler: awaitingOnChainTx }\n    }\n    const signedTx = await appendSignature(message.params.data.signed_tx, tx => options.get(channel).sign(tag, tx))\n    send(channel, { jsonrpc: '2.0', method: `channels.${tag}`, params: { signed_tx: signedTx } })\n    return { handler: awaitingOnChainTx }\n  }\n}\n\nexport function awaitingOnChainTx (channel, message, state) {\n  if (message.method === 'channels.on_chain_tx') {\n    if (\n      message.params.data.info === 'funding_signed' &&\n      options.get(channel).role === 'initiator'\n    ) {\n      return { handler: awaitingBlockInclusion }\n    }\n    if (\n      message.params.data.info === 'funding_created' &&\n      options.get(channel).role === 'responder'\n    ) {\n      return { handler: awaitingBlockInclusion }\n    }\n  }\n  if (\n    message.method === 'channels.info' &&\n    message.params.data.event === 'funding_signed' &&\n    options.get(channel).role === 'initiator'\n  ) {\n    changeStatus(channel, 'signed')\n    return { handler: awaitingOnChainTx }\n  }\n}\n\nexport function awaitingBlockInclusion (channel, message, state) {\n  if (message.method === 'channels.info') {\n    const handler = {\n      funding_created: awaitingBlockInclusion,\n      own_funding_locked: awaitingBlockInclusion,\n      funding_locked: awaitingOpenConfirmation\n    }[message.params.data.event]\n    if (handler) {\n      return { handler }\n    }\n  }\n  if (message.method === 'channels.on_chain_tx') {\n    emit(channel, 'onChainTx', message.params.data.tx, {\n      info: message.params.data.info,\n      type: message.params.data.type\n    })\n    return { handler: awaitingBlockInclusion }\n  }\n}\n\nexport function awaitingOpenConfirmation (channel, message, state) {\n  if (message.method === 'channels.info' && message.params.data.event === 'open') {\n    channelId.set(channel, message.params.channel_id)\n    return { handler: awaitingInitialState }\n  }\n}\n\nexport function awaitingInitialState (channel, message, state) {\n  if (message.method === 'channels.update') {\n    changeState(channel, message.params.data.state)\n    return { handler: channelOpen }\n  }\n}\n\nexport async function channelOpen (channel, message, state) {\n  switch (message.method) {\n    case 'channels.info':\n      switch (message.params.data.event) {\n        case 'update':\n        case 'withdraw_created':\n        case 'deposit_created':\n          return { handler: awaitingTxSignRequest }\n        case 'own_withdraw_locked':\n        case 'withdraw_locked':\n        case 'own_deposit_locked':\n        case 'deposit_locked':\n        case 'peer_disconnected':\n        case 'channel_reestablished':\n        case 'open':\n          // TODO: Better handling of peer_disconnected event.\n          //\n          //       We should enter intermediate state where offchain transactions\n          //       are blocked until channel is reestablished.\n          emit(channel, message.params.data.event)\n          return { handler: channelOpen }\n        case 'fsm_up':\n          fsmId.set(channel, message.params.data.fsm_id)\n          return { handler: channelOpen }\n        case 'close_mutual':\n          return { handler: channelOpen }\n        case 'closing':\n          changeStatus(channel, 'closing')\n          return { handler: channelOpen }\n        case 'closed_confirmed':\n          changeStatus(channel, 'closed')\n          return { handler: channelClosed }\n        case 'died':\n          changeStatus(channel, 'died')\n          return { handler: channelClosed }\n        case 'shutdown':\n          return { handler: channelOpen }\n      }\n      break\n    case 'channels.on_chain_tx':\n      emit(channel, 'onChainTx', message.params.data.tx, {\n        info: message.params.data.info,\n        type: message.params.data.type\n      })\n      return { handler: channelOpen }\n    case 'channels.leave':\n      // TODO: emit event\n      return { handler: channelOpen }\n    case 'channels.update':\n      changeState(channel, message.params.data.state)\n      return { handler: channelOpen }\n    case 'channels.sign.shutdown_sign_ack':\n      return awaitingTxSignRequest(channel, message, state)\n  }\n}\nchannelOpen.enter = (channel) => {\n  changeStatus(channel, 'open')\n}\n\nexport async function awaitingOffChainTx (channel, message, state) {\n  if (message.method === 'channels.sign.update') {\n    const { sign } = state\n    if (message.params.data.tx) {\n      const signedTx = await sign(message.params.data.tx, { updates: message.params.data.updates })\n      send(channel, { jsonrpc: '2.0', method: 'channels.update', params: { tx: signedTx } })\n      return { handler: awaitingOffChainUpdate, state }\n    }\n    const signedTx = await appendSignature(message.params.data.signed_tx, tx =>\n      sign(tx, { updates: message.params.data.updates })\n    )\n    if (typeof signedTx === 'string') {\n      send(channel, { jsonrpc: '2.0', method: 'channels.update', params: { signed_tx: signedTx } })\n      return { handler: awaitingOffChainUpdate, state }\n    }\n    if (typeof signedTx === 'number') {\n      send(channel, { jsonrpc: '2.0', method: 'channels.update', params: { error: signedTx } })\n      return { handler: awaitingOffChainTx, state }\n    }\n  }\n  if (message.method === 'channels.error') {\n    state.reject(new Error(message.data.message))\n    return { handler: channelOpen }\n  }\n  if (message.error) {\n    const { data = [] } = message.error\n    if (data.find(i => i.code === 1001)) {\n      state.reject(new Error('Insufficient balance'))\n    } else if (data.find(i => i.code === 1002)) {\n      state.reject(new Error('Amount cannot be negative'))\n    } else {\n      state.reject(new Error(message.error.message))\n    }\n    return { handler: channelOpen }\n  }\n  if (message.method === 'channels.conflict') {\n    state.resolve({\n      accepted: false,\n      errorCode: message.params.data.error_code,\n      errorMessage: message.params.data.error_msg\n    })\n    return { handler: channelOpen }\n  }\n  if (message.method === 'channels.info') {\n    if (message.params.data.event === 'aborted_update') {\n      state.resolve({ accepted: false })\n      return { handler: channelOpen }\n    }\n  }\n  return handleUnexpectedMessage(channel, message, state)\n}\n\nexport function awaitingOffChainUpdate (channel, message, state) {\n  if (message.method === 'channels.update') {\n    changeState(channel, message.params.data.state)\n    state.resolve({ accepted: true, signedTx: message.params.data.state })\n    return { handler: channelOpen }\n  }\n  if (message.method === 'channels.conflict') {\n    state.resolve({\n      accepted: false,\n      errorCode: message.params.data.error_code,\n      errorMessage: message.params.data.error_msg\n    })\n    return { handler: channelOpen }\n  }\n  if (message.method === 'channels.info') {\n    if (message.params.data.event === 'aborted_update') {\n      state.resolve({ accepted: false })\n      return { handler: channelOpen }\n    }\n  }\n  if (message.error) {\n    state.reject(new Error(message.error.message))\n    return { handler: channelOpen }\n  }\n  return handleUnexpectedMessage(channel, message, state)\n}\n\nexport async function awaitingTxSignRequest (channel, message, state) {\n  const [, tag] = message.method.match(/^channels\\.sign\\.([^.]+)$/) || []\n  if (tag) {\n    if (message.params.data.tx) {\n      const signedTx = await options.get(channel).sign(tag, message.params.data.tx, {\n        updates: message.params.data.updates\n      })\n      if (signedTx) {\n        send(channel, { jsonrpc: '2.0', method: `channels.${tag}`, params: { tx: signedTx } })\n        return { handler: channelOpen }\n      }\n    } else {\n      const signedTx = await appendSignature(message.params.data.signed_tx, tx =>\n        options.get(channel).sign(tag, tx, { updates: message.params.data.updates })\n      )\n      if (typeof signedTx === 'string') {\n        send(channel, { jsonrpc: '2.0', method: `channels.${tag}`, params: { signed_tx: signedTx } })\n        return { handler: channelOpen }\n      }\n      if (typeof signedTx === 'number') {\n        send(channel, { jsonrpc: '2.0', method: `channels.${tag}`, params: { error: signedTx } })\n        return { handler: awaitingUpdateConflict, state }\n      }\n    }\n    // soft-reject via competing update\n    send(channel, {\n      jsonrpc: '2.0',\n      method: 'channels.update.new',\n      params: {\n        from: generateKeyPair().publicKey,\n        to: generateKeyPair().publicKey,\n        amount: 1\n      }\n    })\n    return { handler: awaitingUpdateConflict, state }\n  }\n  return handleUnexpectedMessage(channel, message, state)\n}\n\nexport function awaitingUpdateConflict (channel, message, state) {\n  if (message.error) {\n    return { handler: awaitingUpdateConflict, state }\n  }\n  if (message.method === 'channels.conflict') {\n    return { handler: channelOpen }\n  }\n  return handleUnexpectedMessage(channel, message, state)\n}\n\nexport async function awaitingShutdownTx (channel, message, state) {\n  if (message.method === 'channels.sign.shutdown_sign') {\n    if (message.params.data.tx) {\n      const signedTx = await state.sign(message.params.data.tx)\n      send(channel, { jsonrpc: '2.0', method: 'channels.shutdown_sign', params: { tx: signedTx } })\n      return { handler: awaitingShutdownOnChainTx, state }\n    }\n    const signedTx = await appendSignature(message.params.data.signed_tx, tx => state.sign(tx))\n    send(channel, { jsonrpc: '2.0', method: 'channels.shutdown_sign', params: { signed_tx: signedTx } })\n    return { handler: awaitingShutdownOnChainTx, state }\n  }\n  return handleUnexpectedMessage(channel, message, state)\n}\n\nexport function awaitingShutdownOnChainTx (channel, message, state) {\n  if (message.method === 'channels.on_chain_tx') {\n    state.resolve(message.params.data.tx)\n    return { handler: channelClosed }\n  }\n  return handleUnexpectedMessage(channel, message, state)\n}\n\nexport function awaitingLeave (channel, message, state) {\n  if (message.method === 'channels.leave') {\n    state.resolve({ channelId: message.params.channel_id, signedTx: message.params.data.state })\n    disconnect(channel)\n    return { handler: channelClosed }\n  }\n  if (message.method === 'channels.error') {\n    state.reject(new Error(message.data.message))\n    return { handler: channelOpen }\n  }\n  return handleUnexpectedMessage(channel, message, state)\n}\n\nexport async function awaitingWithdrawTx (channel, message, state) {\n  if (message.method === 'channels.sign.withdraw_tx') {\n    const { sign } = state\n    if (message.params.data.tx) {\n      const signedTx = await sign(message.params.data.tx, { updates: message.params.data.updates })\n      send(channel, { jsonrpc: '2.0', method: 'channels.withdraw_tx', params: { tx: signedTx } })\n      return { handler: awaitingWithdrawCompletion, state }\n    }\n    const signedTx = await appendSignature(message.params.data.signed_tx, tx =>\n      sign(tx, { updates: message.params.data.updates })\n    )\n    if (typeof signedTx === 'string') {\n      send(channel, { jsonrpc: '2.0', method: 'channels.withdraw_tx', params: { signed_tx: signedTx } })\n      return { handler: awaitingWithdrawCompletion, state }\n    }\n    if (typeof signedTx === 'number') {\n      send(channel, { jsonrpc: '2.0', method: 'channels.withdraw_tx', params: { error: signedTx } })\n      return { handler: awaitingWithdrawCompletion, state }\n    }\n  }\n  return handleUnexpectedMessage(channel, message, state)\n}\n\nexport function awaitingWithdrawCompletion (channel, message, state) {\n  if (message.method === 'channels.on_chain_tx') {\n    if (state.onOnChainTx) {\n      state.onOnChainTx(message.params.data.tx)\n    }\n    return { handler: awaitingWithdrawCompletion, state }\n  }\n  if (message.method === 'channels.info') {\n    if (['own_withdraw_locked', 'withdraw_locked'].includes(message.params.data.event)) {\n      const callback = {\n        own_withdraw_locked: state.onOwnWithdrawLocked,\n        withdraw_locked: state.onWithdrawLocked\n      }[message.params.data.event]\n      if (callback) {\n        callback()\n      }\n      return { handler: awaitingWithdrawCompletion, state }\n    }\n  }\n  if (message.method === 'channels.update') {\n    changeState(channel, message.params.data.state)\n    state.resolve({ accepted: true, signedTx: message.params.data.state })\n    return { handler: channelOpen }\n  }\n  if (message.method === 'channels.conflict') {\n    state.resolve({\n      accepted: false,\n      errorCode: message.params.data.error_code,\n      errorMessage: message.params.data.error_msg\n    })\n    return { handler: channelOpen }\n  }\n  if (message.method === 'channels.info') {\n    if (message.params.data.event === 'aborted_update') {\n      state.resolve({ accepted: false })\n      return { handler: channelOpen }\n    }\n  }\n  return handleUnexpectedMessage(channel, message, state)\n}\n\nexport async function awaitingDepositTx (channel, message, state) {\n  if (message.method === 'channels.sign.deposit_tx') {\n    const { sign } = state\n    if (message.params.data.tx) {\n      const signedTx = await sign(message.params.data.tx, { updates: message.params.data.updates })\n      send(channel, { jsonrpc: '2.0', method: 'channels.deposit_tx', params: { tx: signedTx } })\n      return { handler: awaitingDepositCompletion, state }\n    }\n    const signedTx = await appendSignature(message.params.data.signed_tx, tx =>\n      sign(tx, { updates: message.params.data.updates })\n    )\n    if (typeof signedTx === 'string') {\n      send(channel, { jsonrpc: '2.0', method: 'channels.deposit_tx', params: { signed_tx: signedTx } })\n      return { handler: awaitingDepositCompletion, state }\n    }\n    if (typeof signedTx === 'number') {\n      send(channel, { jsonrpc: '2.0', method: 'channels.deposit_tx', params: { error: signedTx } })\n      return { handler: awaitingDepositCompletion, state }\n    }\n  }\n  return handleUnexpectedMessage(channel, message, state)\n}\n\nexport function awaitingDepositCompletion (channel, message, state) {\n  if (message.method === 'channels.on_chain_tx') {\n    if (state.onOnChainTx) {\n      state.onOnChainTx(message.params.data.tx)\n    }\n    return { handler: awaitingDepositCompletion, state }\n  }\n  if (message.method === 'channels.info') {\n    if (['own_deposit_locked', 'deposit_locked'].includes(message.params.data.event)) {\n      const callback = {\n        own_deposit_locked: state.onOwnDepositLocked,\n        deposit_locked: state.onDepositLocked\n      }[message.params.data.event]\n      if (callback) {\n        callback()\n      }\n      return { handler: awaitingDepositCompletion, state }\n    }\n  }\n  if (message.method === 'channels.update') {\n    changeState(channel, message.params.data.state)\n    state.resolve({ accepted: true, signedTx: message.params.data.state })\n    return { handler: channelOpen }\n  }\n  if (message.method === 'channels.conflict') {\n    state.resolve({\n      accepted: false,\n      errorCode: message.params.data.error_code,\n      errorMessage: message.params.data.error_msg\n    })\n    return { handler: channelOpen }\n  }\n  if (message.method === 'channels.info') {\n    if (message.params.data.event === 'aborted_update') {\n      state.resolve({ accepted: false })\n      return { handler: channelOpen }\n    }\n  }\n  return handleUnexpectedMessage(channel, message, state)\n}\n\nexport async function awaitingNewContractTx (channel, message, state) {\n  if (message.method === 'channels.sign.update') {\n    if (message.params.data.tx) {\n      const signedTx = await state.sign(message.params.data.tx)\n      send(channel, { jsonrpc: '2.0', method: 'channels.update', params: { tx: signedTx } })\n      return { handler: awaitingNewContractCompletion, state }\n    }\n    const signedTx = await appendSignature(message.params.data.signed_tx, tx => state.sign(tx))\n    if (typeof signedTx === 'string') {\n      send(channel, { jsonrpc: '2.0', method: 'channels.update', params: { signed_tx: signedTx } })\n      return { handler: awaitingNewContractCompletion, state }\n    }\n    if (typeof signedTx === 'number') {\n      send(channel, { jsonrpc: '2.0', method: 'channels.update', params: { error: signedTx } })\n      return { handler: awaitingNewContractCompletion, state }\n    }\n  }\n  return handleUnexpectedMessage(channel, message, state)\n}\n\nexport function awaitingNewContractCompletion (channel, message, state) {\n  if (message.method === 'channels.update') {\n    const { round } = unpackTx(message.params.data.state).tx.encodedTx.tx\n    const owner = options.get(channel)[{\n      initiator: 'initiatorId',\n      responder: 'responderId'\n    }[options.get(channel).role]]\n    changeState(channel, message.params.data.state)\n    state.resolve({\n      accepted: true,\n      address: encodeContractAddress(owner, round),\n      signedTx: message.params.data.state\n    })\n    return { handler: channelOpen }\n  }\n  if (message.method === 'channels.conflict') {\n    state.resolve({\n      accepted: false,\n      errorCode: message.params.data.error_code,\n      errorMessage: message.params.data.error_msg\n    })\n    return { handler: channelOpen }\n  }\n  if (message.method === 'channels.info') {\n    if (message.params.data.event === 'aborted_update') {\n      state.resolve({ accepted: false })\n      return { handler: channelOpen }\n    }\n  }\n  return handleUnexpectedMessage(channel, message, state)\n}\n\nexport async function awaitingCallContractUpdateTx (channel, message, state) {\n  if (message.method === 'channels.sign.update') {\n    if (message.params.data.tx) {\n      const signedTx = await state.sign(message.params.data.tx)\n      send(channel, { jsonrpc: '2.0', method: 'channels.update', params: { tx: signedTx } })\n      return { handler: awaitingCallContractCompletion, state }\n    }\n    const signedTx = await appendSignature(message.params.data.signed_tx, tx => state.sign(tx))\n    if (typeof signedTx === 'string') {\n      send(channel, { jsonrpc: '2.0', method: 'channels.update', params: { signed_tx: signedTx } })\n      return { handler: awaitingCallContractCompletion, state }\n    }\n    if (typeof signedTx === 'number') {\n      send(channel, { jsonrpc: '2.0', method: 'channels.update', params: { error: signedTx } })\n      return { handler: awaitingCallContractCompletion, state }\n    }\n  }\n  return handleUnexpectedMessage(channel, message, state)\n}\n\nexport function awaitingCallContractCompletion (channel, message, state) {\n  if (message.method === 'channels.update') {\n    changeState(channel, message.params.data.state)\n    state.resolve({ accepted: true, signedTx: message.params.data.state })\n    return { handler: channelOpen }\n  }\n  if (message.method === 'channels.conflict') {\n    state.resolve({\n      accepted: false,\n      errorCode: message.params.data.error_code,\n      errorMessage: message.params.data.error_msg\n    })\n    return { handler: channelOpen }\n  }\n  if (message.method === 'channels.info') {\n    if (message.params.data.event === 'aborted_update') {\n      state.resolve({ accepted: false })\n      return { handler: channelOpen }\n    }\n  }\n  return handleUnexpectedMessage(channel, message, state)\n}\n\nexport function awaitingCallsPruned (channels, message, state) {\n  if (message.method === 'channels.calls_pruned.reply') {\n    state.resolve()\n    return { handler: channelOpen }\n  }\n  state.reject(new Error('Unexpected message received'))\n  return { handler: channelClosed }\n}\n\nexport function channelClosed (channel, message, state) {\n  return { handler: channelClosed }\n}\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Channel module\n * @module @aeternity/aepp-sdk/es/channel/index\n * @export Channel\n * @example import Channel from '@aeternity/aepp-sdk/es/channel/index'\n */\n\nimport AsyncInit from '../utils/async-init'\nimport { snakeToPascal } from '../utils/string'\nimport { buildTx, unpackTx } from '../tx/builder'\nimport { TX_TYPE } from '../tx/builder/schema'\nimport * as handlers from './handlers'\nimport {\n  eventEmitters,\n  status as channelStatus,\n  state as channelState,\n  initialize,\n  enqueueAction,\n  send,\n  channelId,\n  call,\n  disconnect as channelDisconnect,\n  fsmId as channelFsmId\n} from './internal'\nimport * as R from 'ramda'\n\nfunction snakeToPascalObjKeys (obj) {\n  return Object.entries(obj).reduce((result, [key, val]) => ({\n    ...result,\n    [snakeToPascal(key)]: val\n  }), {})\n}\n\n/**\n * Register event listener function\n *\n * Possible events:\n *\n *   - \"error\"\n *   - \"onChainTx\"\n *   - \"ownWithdrawLocked\"\n *   - \"withdrawLocked\"\n *   - \"ownDepositLocked\"\n *   - \"depositLocked\"\n *\n * @param {String} event - Event name\n * @param {Function} callback - Callback function\n */\nfunction on (event, callback) {\n  eventEmitters.get(this).on(event, callback)\n}\n\n/**\n * Remove event listener function\n *\n * @param {String} event - Event name\n * @param {Function} callback - Callback function\n */\nfunction off (event, callback) {\n  eventEmitters.get(this).removeListener(event, callback)\n}\n\n/**\n * Close the connection\n */\nfunction disconnect () {\n  return channelDisconnect(this)\n}\n\n/**\n * Get current status\n *\n * @return {String}\n */\nfunction status () {\n  return channelStatus.get(this)\n}\n\n/**\n * Get current state\n *\n * @return {Promise<Object>}\n */\nasync function state () {\n  return snakeToPascalObjKeys(await call(this, 'channels.get.offchain_state', {}))\n}\n\n/**\n * Get current round\n *\n * If round cannot be determined (for example when channel has not been opened)\n * it will return `null`.\n *\n * @return {Number}\n */\nfunction round () {\n  const state = channelState.get(this)\n  if (!state) {\n    return null\n  }\n  const { txType, tx } = unpackTx(channelState.get(this)).tx.encodedTx\n  switch (txType) {\n    case TX_TYPE.channelCreate:\n      return 1\n    case TX_TYPE.channelOffChain:\n    case TX_TYPE.channelWithdraw:\n    case TX_TYPE.channelDeposit:\n      return parseInt(tx.round, 10)\n    default:\n      return null\n  }\n}\n\n/**\n * Get channel id\n *\n * @return {String}\n */\nfunction id () {\n  return channelId.get(this)\n}\n\n/**\n * Get channel's fsm id\n *\n * @return {String}\n */\nfunction fsmId () {\n  return channelFsmId.get(this)\n}\n\n/**\n * Trigger a transfer update\n *\n * The transfer update is moving tokens from one channel account to another.\n * The update is a change to be applied on top of the latest state.\n *\n * Sender and receiver are the channel parties. Both the initiator and responder\n * can take those roles. Any public key outside of the channel is considered invalid.\n *\n * @param {String} from - Sender's public address\n * @param {String} to - Receiver's public address\n * @param {Number} amount - Transaction amount\n * @param {Function} sign - Function which verifies and signs offchain transaction\n * @param {Array<String>} metadata\n * @return {Promise<Object>}\n * @example channel.update(\n *   'ak_Y1NRjHuoc3CGMYMvCmdHSBpJsMDR6Ra2t5zjhRcbtMeXXLpLH',\n *   'ak_V6an1xhec1xVaAhLuak7QoEbi6t7w5hEtYWp9bMKaJ19i6A9E',\n *   10,\n *   async (tx) => await account.signTransaction(tx)\n * ).then(({ accepted, signedTx }) =>\n *   if (accepted) {\n *     console.log('Update has been accepted')\n *   }\n * )\n */\nfunction update (from, to, amount, sign, metadata) {\n  return new Promise((resolve, reject) => {\n    enqueueAction(\n      this,\n      (channel, state) => state.handler === handlers.channelOpen,\n      (channel, state) => {\n        send(channel, {\n          jsonrpc: '2.0',\n          method: 'channels.update.new',\n          params: { from, to, amount, meta: metadata }\n        })\n        return {\n          handler: handlers.awaitingOffChainTx,\n          state: {\n            resolve,\n            reject,\n            sign\n          }\n        }\n      }\n    )\n  })\n}\n\n/**\n * Get proof of inclusion\n *\n * If a certain address of an account or a contract is not found\n * in the state tree - the response is an error.\n *\n * @param {Object} addresses\n * @param {Array<String>} [addresses.accounts] - List of account addresses to include in poi\n * @param {Array<String>} [addresses.contracts] - List of contract addresses to include in poi\n * @return {Promise<String>}\n * @example channel.poi({\n *   accounts: [\n *     'ak_Y1NRjHuoc3CGMYMvCmdHSBpJsMDR6Ra2t5zjhRcbtMeXXLpLH',\n *     'ak_V6an1xhec1xVaAhLuak7QoEbi6t7w5hEtYWp9bMKaJ19i6A9E'\n *   ],\n *   contracts: ['ct_2dCUAWYZdrWfACz3a2faJeKVTVrfDYxCQHCqAt5zM15f3u2UfA']\n * }).then(poi => console.log(poi))\n */\nasync function poi ({ accounts, contracts }) {\n  return (await call(this, 'channels.get.poi', { accounts, contracts })).poi\n}\n\n/**\n * Get balances\n *\n * The accounts paramcontains a list of addresses to fetch balances of.\n * Those can be either account balances or a contract ones, encoded as an account addresses.\n *\n * If a certain account address had not being found in the state tree - it is simply\n * skipped in the response.\n *\n * @param {Array<String>} accounts - List of addresses to fetch balances from\n * @return {Promise<Object>}\n * @example channel.balances([\n *   'ak_Y1NRjHuoc3CGMYMvCmdHSBpJsMDR6Ra2t5zjhRcbtMeXXLpLH',\n *   'ak_V6an1xhec1xVaAhLuak7QoEbi6t7w5hEtYWp9bMKaJ19i6A9E'\n *   'ct_2dCUAWYZdrWfACz3a2faJeKVTVrfDYxCQHCqAt5zM15f3u2UfA'\n * ]).then(balances =>\n *   console.log(balances['ak_Y1NRjHuoc3CGMYMvCmdHSBpJsMDR6Ra2t5zjhRcbtMeXXLpLH'])\n * )\n */\nasync function balances (accounts) {\n  return R.reduce((acc, item) => ({\n    ...acc,\n    [item.account]: item.balance\n  }), {}, await call(this, 'channels.get.balances', { accounts }))\n}\n\n/**\n * Leave channel\n *\n * It is possible to leave a channel and then later reestablish the channel\n * off-chain state and continue operation. When a leave method is called,\n * the channel fsm passes it on to the peer fsm, reports the current mutually\n * signed state and then terminates.\n *\n * The channel can be reestablished by instantiating another Channel instance\n * with two extra params: existingChannelId and offchainTx (returned from leave\n * method as channelId and signedTx respectively).\n *\n * @return {Promise<Object>}\n * @example channel.leave().then(({ channelId, signedTx }) => {\n *   console.log(channelId)\n *   console.log(signedTx)\n * })\n */\nfunction leave () {\n  return new Promise((resolve, reject) => {\n    enqueueAction(\n      this,\n      (channel, state) => state.handler === handlers.channelOpen,\n      (channel, state) => {\n        send(channel, { jsonrpc: '2.0', method: 'channels.leave', params: {} })\n        return {\n          handler: handlers.awaitingLeave,\n          state: { resolve, reject }\n        }\n      })\n  })\n}\n\n/**\n * Trigger mutual close\n *\n * At any moment after the channel is opened, a closing procedure can be triggered.\n * This can be done by either of the parties. The process is similar to the off-chain updates.\n *\n * @param {Function} sign - Function which verifies and signs mutual close transaction\n * @return {Promise<String>}\n * @example channel.shutdown(\n *   async (tx) => await account.signTransaction(tx)\n * ).then(tx => console.log('on_chain_tx', tx))\n */\nfunction shutdown (sign) {\n  return new Promise((resolve, reject) => {\n    enqueueAction(\n      this,\n      (channel, state) => state.handler === handlers.channelOpen,\n      (channel, state) => {\n        send(channel, { jsonrpc: '2.0', method: 'channels.shutdown', params: {} })\n        return {\n          handler: handlers.awaitingShutdownTx,\n          state: {\n            sign,\n            resolve,\n            reject\n          }\n        }\n      }\n    )\n  })\n}\n\n/**\n * Withdraw tokens from the channel\n *\n * After the channel had been opened any of the participants can initiate a withdrawal.\n * The process closely resembles the update. The most notable difference is that the\n * transaction has been co-signed: it is channel_withdraw_tx and after the procedure\n * is finished - it is being posted on-chain.\n *\n * Any of the participants can initiate a withdrawal. The only requirements are:\n *\n *   - Channel is already opened\n *   - No off-chain update/deposit/withdrawal is currently being performed\n *   - Channel is not being closed or in a solo closing state\n *   - The withdrawal amount must be equal to or greater than zero, and cannot exceed\n *     the available balance on the channel (minus the channel_reserve)\n *\n * After the other party had signed the withdraw transaction, the transaction is posted\n * on-chain and onOnChainTx callback is called with on-chain transaction as first argument.\n * After computing transaction hash it can be tracked on the chain: entering the mempool,\n * block inclusion and a number of confirmations.\n *\n * After the minimum_depth block confirmations onOwnWithdrawLocked callback is called\n * (without any arguments).\n *\n * When the other party had confirmed that the block height needed is reached\n * onWithdrawLocked callback is called (without any arguments).\n *\n * @param {Number} amount - Amount of tokens to withdraw\n * @param {Function} sign - Function which verifies and signs withdraw transaction\n * @param {Object} [callbacks]\n * @param {Function} [callbacks.onOnChainTx] - Called when withdraw transaction has been posted on chain\n * @param {Function} [callbacks.onOwnWithdrawLocked]\n * @param {Function} [callbacks.onWithdrawLocked]\n * @return {Promise<Object>}\n * @example channel.withdraw(\n *   100,\n *   async (tx) => await account.signTransaction(tx),\n *   { onOnChainTx: (tx) => console.log('on_chain_tx', tx) }\n * ).then(({ accepted, signedTx }) => {\n *   if (accepted) {\n *     console.log('Withdrawal has been accepted')\n *   } else {\n *     console.log('Withdrawal has been rejected')\n *   }\n * })\n */\nfunction withdraw (amount, sign, { onOnChainTx, onOwnWithdrawLocked, onWithdrawLocked } = {}) {\n  return new Promise((resolve, reject) => {\n    enqueueAction(\n      this,\n      (channel, state) => state.handler === handlers.channelOpen,\n      (channel, state) => {\n        send(channel, { jsonrpc: '2.0', method: 'channels.withdraw', params: { amount } })\n        return {\n          handler: handlers.awaitingWithdrawTx,\n          state: {\n            sign,\n            resolve,\n            reject,\n            onOnChainTx,\n            onOwnWithdrawLocked,\n            onWithdrawLocked\n          }\n        }\n      }\n    )\n  })\n}\n\n/**\n * Deposit tokens into the channel\n *\n * After the channel had been opened any of the participants can initiate a deposit.\n * The process closely resembles the update. The most notable difference is that the\n * transaction has been co-signed: it is channel_deposit_tx and after the procedure\n * is finished - it is being posted on-chain.\n *\n * Any of the participants can initiate a deposit. The only requirements are:\n *\n *   - Channel is already opened\n *   - No off-chain update/deposit/withdrawal is currently being performed\n *   - Channel is not being closed or in a solo closing state\n *   - The deposit amount must be equal to or greater than zero, and cannot exceed\n *     the available balance on the channel (minus the channel_reserve)\n *\n * After the other party had signed the deposit transaction, the transaction is posted\n * on-chain and onOnChainTx callback is called with on-chain transaction as first argument.\n * After computing transaction hash it can be tracked on the chain: entering the mempool,\n * block inclusion and a number of confirmations.\n *\n * After the minimum_depth block confirmations onOwnDepositLocked callback is called\n * (without any arguments).\n *\n * When the other party had confirmed that the block height needed is reached\n * onDepositLocked callback is called (without any arguments).\n *\n * @param {Number} amount - Amount of tokens to deposit\n * @param {Function} sign - Function which verifies and signs deposit transaction\n * @param {Object} [callbacks]\n * @param {Function} [callbacks.onOnChainTx] - Called when deposit transaction has been posted on chain\n * @param {Function} [callbacks.onOwnDepositLocked]\n * @param {Function} [callbacks.onDepositLocked]\n * @return {Promise<Object>}\n * @example channel.deposit(\n *   100,\n *   async (tx) => await account.signTransaction(tx),\n *   { onOnChainTx: (tx) => console.log('on_chain_tx', tx) }\n * ).then(({ accepted, state }) => {\n *   if (accepted) {\n *     console.log('Deposit has been accepted')\n *     console.log('The new state is:', state)\n *   } else {\n *     console.log('Deposit has been rejected')\n *   }\n * })\n */\nfunction deposit (amount, sign, { onOnChainTx, onOwnDepositLocked, onDepositLocked } = {}) {\n  return new Promise((resolve, reject) => {\n    enqueueAction(\n      this,\n      (channel, state) => state.handler === handlers.channelOpen,\n      (channel, state) => {\n        send(channel, { jsonrpc: '2.0', method: 'channels.deposit', params: { amount } })\n        return {\n          handler: handlers.awaitingDepositTx,\n          state: {\n            sign,\n            resolve,\n            reject,\n            onOnChainTx,\n            onOwnDepositLocked,\n            onDepositLocked\n          }\n        }\n      }\n    )\n  })\n}\n\n/**\n * Trigger create contract update\n *\n * The create contract update is creating a contract inside the channel's internal state tree.\n * The update is a change to be applied on top of the latest state.\n *\n * That would create a contract with the poster being the owner of it. Poster commits initially\n * a deposit amount of tokens to the new contract.\n *\n * @param {Object} options\n * @param {String} options.code - Api encoded compiled AEVM byte code\n * @param {String} options.callData - Api encoded compiled AEVM call data for the code\n * @param {Number} options.deposit - Initial amount the owner of the contract commits to it\n * @param {Number} options.vmVersion - Version of the AEVM\n * @param {Number} options.abiVersion - Version of the ABI\n * @param {Function} sign - Function which verifies and signs create contract transaction\n * @return {Promise<Object>}\n * @example channel.createContract({\n *   code: 'cb_HKtpipK4aCgYb17wZ...',\n *   callData: 'cb_1111111111111111...',\n *   deposit: 10,\n *   vmVersion: 3,\n *   abiVersion: 1\n * }).then(({ accepted, signedTx, address }) => {\n *   if (accepted) {\n *     console.log('New contract has been created')\n *     console.log('Contract address:', address)\n *   } else {\n *     console.log('New contract has been rejected')\n *   }\n * })\n */\nfunction createContract ({ code, callData, deposit, vmVersion, abiVersion }, sign) {\n  return new Promise((resolve, reject) => {\n    enqueueAction(\n      this,\n      (channel, state) => state.handler === handlers.channelOpen,\n      (channel, state) => {\n        send(channel, {\n          jsonrpc: '2.0',\n          method: 'channels.update.new_contract',\n          params: {\n            code,\n            call_data: callData,\n            deposit,\n            vm_version: vmVersion,\n            abi_version: abiVersion\n          }\n        })\n        return {\n          handler: handlers.awaitingNewContractTx,\n          state: {\n            sign,\n            resolve,\n            reject\n          }\n        }\n      }\n    )\n  })\n}\n\n/**\n * Trigger call a contract update\n *\n * The call contract update is calling a preexisting contract inside the channel's\n * internal state tree. The update is a change to be applied on top of the latest state.\n *\n * That would call a contract with the poster being the caller of it. Poster commits\n * an amount of tokens to the contract.\n *\n * The call would also create a call object inside the channel state tree. It contains\n * the result of the contract call.\n *\n * It is worth mentioning that the gas is not consumed, because this is an off-chain\n * contract call. It would be consumed if it were a on-chain one. This could happen\n * if a call with a similar computation amount is to be forced on-chain.\n *\n * @param {Object} options\n * @param {String} [options.amount] - Amount the caller of the contract commits to it\n * @param {String} [options.callData] - ABI encoded compiled AEVM call data for the code\n * @param {Number} [options.contract] - Address of the contract to call\n * @param {Number} [options.abiVersion] - Version of the ABI\n * @param {Function} sign - Function which verifies and signs contract call transaction\n * @return {Promise<Object>}\n * @example channel.callContract({\n *   contract: 'ct_9sRA9AVE4BYTAkh5RNfJYmwQe1NZ4MErasQLXZkFWG43TPBqa',\n *   callData: 'cb_1111111111111111...',\n *   amount: 0,\n *   abiVersion: 1\n * }).then(({ accepted, signedTx }) => {\n *   if (accepted) {\n *     console.log('Contract called succesfully')\n *   } else {\n *     console.log('Contract call has been rejected')\n *   }\n * })\n */\nfunction callContract ({ amount, callData, contract, abiVersion }, sign) {\n  return new Promise((resolve, reject) => {\n    enqueueAction(\n      this,\n      (channel, state) => state.handler === handlers.channelOpen,\n      (channel, state) => {\n        send(channel, {\n          jsonrpc: '2.0',\n          method: 'channels.update.call_contract',\n          params: {\n            amount,\n            call_data: callData,\n            contract_id: contract,\n            abi_version: abiVersion\n          }\n        })\n        return {\n          handler: handlers.awaitingCallContractUpdateTx,\n          state: { resolve, reject, sign }\n        }\n      }\n    )\n  })\n}\n\n/**\n * Call contract using dry-run\n *\n * In order to get the result of a potential contract call, one might need to\n * dry-run a contract call. It takes the exact same arguments as a call would\n * and returns the call object.\n *\n * The call is executed in the channel's state but it does not impact the state\n * whatsoever. It uses as an environment the latest channel's state and the current\n * top of the blockchain as seen by the node.\n *\n * @param {Object} options\n * @param {String} [options.amount] - Amount the caller of the contract commits to it\n * @param {String} [options.callData] - ABI encoded compiled AEVM call data for the code\n * @param {Number} [options.contract] - Address of the contract to call\n * @param {Number} [options.abiVersion] - Version of the ABI\n * @return {Promise<Object>}\n * @example channel.callContractStatic({\n  *   contract: 'ct_9sRA9AVE4BYTAkh5RNfJYmwQe1NZ4MErasQLXZkFWG43TPBqa',\n  *   callData: 'cb_1111111111111111...',\n  *   amount: 0,\n  *   abiVersion: 1\n  * }).then(({ returnValue, gasUsed }) => {\n  *   console.log('Returned value:', returnValue)\n  *   console.log('Gas used:', gasUsed)\n  * })\n  */\nasync function callContractStatic ({ amount, callData, contract, abiVersion }) {\n  return snakeToPascalObjKeys(await call(this, 'channels.dry_run.call_contract', {\n    amount,\n    call_data: callData,\n    contract_id: contract,\n    abi_version: abiVersion\n  }))\n}\n\n/**\n * Get contract call result\n *\n * The combination of a caller, contract and a round of execution determines the\n * contract call. Providing an incorrect set of those results in an error response.\n *\n * @param {Object} options\n * @param {String} [options.caller] - Address of contract caller\n * @param {String} [options.contract] - Address of the contract\n * @param {Number} [options.round] - Round when contract was called\n * @return {Promise<Object>}\n * @example channel.getContractCall({\n *   caller: 'ak_Y1NRjHuoc3CGMYMvCmdHSBpJsMDR6Ra2t5zjhRcbtMeXXLpLH',\n *   contract: 'ct_9sRA9AVE4BYTAkh5RNfJYmwQe1NZ4MErasQLXZkFWG43TPBqa',\n *   round: 3\n * }).then(({ returnType, returnValue }) => {\n *   if (returnType === 'ok') console.log(returnValue)\n * })\n */\nasync function getContractCall ({ caller, contract, round }) {\n  return snakeToPascalObjKeys(\n    await call(this, 'channels.get.contract_call', {\n      caller_id: caller,\n      contract_id: contract,\n      round\n    })\n  )\n}\n\n/**\n * Get contract latest state\n *\n * @param {String} contract - Address of the contract\n * @return {Promise<Object>}\n * @example channel.getContractState(\n *   'ct_9sRA9AVE4BYTAkh5RNfJYmwQe1NZ4MErasQLXZkFWG43TPBqa'\n * ).then(({ contract }) => {\n *   console.log('deposit:', contract.deposit)\n * })\n */\nasync function getContractState (contract) {\n  const result = await call(this, 'channels.get.contract', { pubkey: contract })\n  return snakeToPascalObjKeys({\n    ...result,\n    contract: snakeToPascalObjKeys(result.contract)\n  })\n}\n\n/**\n * Clean up all locally stored contract calls\n *\n * Contract calls are kept locally in order for the participant to be able to look them up.\n * They consume memory and in order for the participant to free it - one can prune all messages.\n * This cleans up all locally stored contract calls and those will no longer be available for\n * fetching and inspection.\n *\n * @return {Promise}\n */\nfunction cleanContractCalls () {\n  return new Promise((resolve, reject) => {\n    enqueueAction(\n      this,\n      (channel, state) => state.handler === handlers.channelOpen,\n      (channel, state) => {\n        send(channel, {\n          jsonrpc: '2.0',\n          method: 'channels.clean_contract_calls',\n          params: {}\n        })\n        return {\n          handler: handlers.awaitingCallsPruned,\n          state: { resolve, reject }\n        }\n      }\n    )\n  })\n}\n\n/**\n * Send generic message\n *\n * If message is an object it will be serialized into JSON string\n * before sending.\n *\n * If there is ongoing update that has not yet been finished the message\n * will be sent after that update is finalized.\n *\n * @param {String|Object} message\n * @param {String} recipient - Address of the recipient\n * @example channel.sendMessage(\n *   'hello world',\n *   'ak_Y1NRjHuoc3CGMYMvCmdHSBpJsMDR6Ra2t5zjhRcbtMeXXLpLH'\n * )\n */\nfunction sendMessage (message, recipient) {\n  let info = message\n  if (typeof message === 'object') {\n    info = JSON.stringify(message)\n  }\n  const doSend = (channel) => send(channel, {\n    jsonrpc: '2.0',\n    method: 'channels.message',\n    params: { info, to: recipient }\n  })\n  if (this.status() === 'connecting') {\n    const onStatusChanged = (status) => {\n      if (status !== 'connecting') {\n        // For some reason we can't immediately send a message when connection is\n        // established established. Thus we wait 500ms which seems to work.\n        setTimeout(() => doSend(this), 500)\n        this.off('statusChanged', onStatusChanged)\n      }\n    }\n    this.on('statusChanged', onStatusChanged)\n  } else {\n    doSend(this)\n  }\n}\n\nasync function reconnect (options, txParams) {\n  const { sign } = options\n\n  return Channel({\n    ...options,\n    reconnectTx: await sign('reconnect', buildTx(txParams, TX_TYPE.channelReconnect).tx)\n  })\n}\n\n/**\n * Channel\n *\n * @function\n * @alias module:@aeternity/aepp-sdk/es/channel/index\n * @rtype Channel\n * @param {Object} options - Channel params\n * @param {String} options.url - Channel url (for example: \"ws://localhost:3001\")\n * @param {String} options.role - Participant role (\"initiator\" or \"responder\")\n * @param {String} options.initiatorId - Initiator's public key\n * @param {String} options.responderId - Responder's public key\n * @param {Number} options.pushAmount - Initial deposit in favour of the responder by the initiator\n * @param {Number} options.initiatorAmount - Amount of tokens the initiator has committed to the channel\n * @param {Number} options.responderAmount - Amount of tokens the responder has committed to the channel\n * @param {Number} options.channelReserve - The minimum amount both peers need to maintain\n * @param {Number} [options.ttl] - Minimum block height to include the channel_create_tx\n * @param {String} options.host - Host of the responder's node\n * @param {Number} options.port - The port of the responders node\n * @param {Number} options.lockPeriod - Amount of blocks for disputing a solo close\n * @param {Number} [options.existingChannelId] - Existing channel id (required if reestablishing a channel)\n * @param {Number} [options.offchainTx] - Offchain transaction (required if reestablishing a channel)\n * @param {Number} [options.timeoutIdle] - The time waiting for a new event to be initiated (default: 600000)\n * @param {Number} [options.timeoutFundingCreate] - The time waiting for the initiator to produce the create channel transaction after the noise session had been established (default: 120000)\n * @param {Number} [options.timeoutFundingSign] - The time frame the other client has to sign an off-chain update after our client had initiated and signed it. This applies only for double signed on-chain intended updates: channel create transaction, deposit, withdrawal and etc. (default: 120000)\n * @param {Number} [options.timeoutFundingLock] - The time frame the other client has to confirm an on-chain transaction reaching maturity (passing minimum depth) after the local node has detected this. This applies only for double signed on-chain intended updates: channel create transaction, deposit, withdrawal and etc. (default: 360000)\n * @param {Number} [options.timeoutSign] - The time frame the client has to return a signed off-chain update or to decline it. This applies for all off-chain updates (default: 500000)\n * @param {Number} [options.timeoutAccept] - The time frame the other client has to react to an event. This applies for all off-chain updates that are not meant to land on-chain, as well as some special cases: opening a noise connection, mutual closing acknowledgement and reestablishing an existing channel (default: 120000)\n * @param {Number} [options.timeoutInitialized] - the time frame the responder has to accept an incoming noise session. Applicable only for initiator (default: timeout_accept's value)\n * @param {Number} [options.timeoutAwaitingOpen] - The time frame the initiator has to start an outgoing noise session to the responder's node. Applicable only for responder (default: timeout_idle's value)\n * @param {Function} options.sign - Function which verifies and signs transactions\n * @return {Promise<Object>} Channel instance\n * @example Channel({\n *   url: 'ws://localhost:3001',\n *   role: 'initiator'\n *   initiatorId: 'ak_Y1NRjHuoc3CGMYMvCmdHSBpJsMDR6Ra2t5zjhRcbtMeXXLpLH',\n *   responderId: 'ak_V6an1xhec1xVaAhLuak7QoEbi6t7w5hEtYWp9bMKaJ19i6A9E',\n *   initiatorAmount: 1e18,\n *   responderAmount: 1e18,\n *   pushAmount: 0,\n *   channelReserve: 0,\n *   ttl: 1000,\n *   host: 'localhost',\n *   port: 3002,\n *   lockPeriod: 10,\n *   async sign (tag, tx) => await account.signTransaction(tx)\n * })\n */\nconst Channel = AsyncInit.compose({\n  async init (options) {\n    initialize(this, options)\n  },\n  methods: {\n    on,\n    off,\n    status,\n    state,\n    round,\n    id,\n    fsmId,\n    update,\n    poi,\n    balances,\n    leave,\n    shutdown,\n    sendMessage,\n    withdraw,\n    deposit,\n    createContract,\n    callContract,\n    callContractStatic,\n    getContractCall,\n    getContractState,\n    disconnect,\n    cleanContractCalls\n  },\n  statics: {\n    reconnect\n  }\n})\n\nexport default Channel\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Universal module\n * @module @aeternity/aepp-sdk/es/ae/universal\n * @export Universal\n * @example import Ae from '@aeternity/aepp-sdk/es/ae/universal'\n */\n\nimport Ae from './'\nimport Chain from '../chain/node'\nimport Aens from './aens'\nimport Transaction from '../tx/tx'\nimport Oracle from './oracle'\nimport GeneralizeAccount from '../contract/ga'\nimport Accounts from '../accounts'\nimport Contract from './contract'\n\n/**\n * Universal Stamp\n *\n * Universal provides Ae base functionality with Contract and Aens\n * {@link module:@aeternity/aepp-sdk/es/ae--Ae} clients.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/universal\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @return {Object} Universal instance\n */\nexport const Universal = Ae.compose(Accounts, Chain, Transaction, Aens, Contract, Oracle, GeneralizeAccount, {\n  init () {},\n  props: { process: {} }\n})\nexport default Universal\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\nimport * as Crypto from './utils/crypto'\nimport * as Keystore from './utils/keystore'\nimport * as Bytes from './utils/bytes'\nimport * as TxBuilder from './tx/builder'\nimport * as TxBuilderHelper from './tx/builder/helpers'\nimport HdWallet from './utils/hd-wallet'\n\nimport Ae from './ae'\nimport Chain from './chain'\nimport ChainNode from './chain/node'\nimport Node from './node'\nimport NodePool from './node-pool'\nimport Tx from './tx'\nimport Transaction from './tx/tx'\nimport TransactionValidator from './tx/validator'\nimport Account from './account'\nimport Accounts from './accounts'\nimport MemoryAccount from './account/memory'\nimport Aens from './ae/aens'\nimport Contract from './ae/contract'\nimport GeneralizeAccount from './contract/ga'\nimport ContractCompilerAPI from './contract/compiler'\nimport { Aepp, RpcAepp } from './ae/aepp'\nimport { Wallet, RpcWallet } from './ae/wallet'\nimport Oracle from './ae/oracle'\nimport OracleNodeAPI from './oracle/node'\nimport Selector from './account/selector'\nimport Channel from './channel'\nimport Universal from './ae/universal'\nimport ContractACI from './contract/aci'\n\nexport {\n  Account,\n  Accounts,\n  Ae,\n  Aens,\n  Aepp,\n  Bytes,\n  Contract,\n  ContractCompilerAPI,\n  ContractACI,\n  ChainNode,\n  RpcAepp,\n  RpcWallet,\n  Channel,\n  Crypto,\n  Keystore,\n  Chain,\n  GeneralizeAccount,\n  HdWallet,\n  MemoryAccount,\n  Node,\n  NodePool,\n  Oracle,\n  OracleNodeAPI,\n  Selector,\n  Transaction,\n  TransactionValidator,\n  Tx,\n  TxBuilder,\n  TxBuilderHelper,\n  Universal,\n  Wallet\n}\n"],"sourceRoot":""}